#!/bin/bash

mount none -t proc /proc
mount none -t sysfs /sys
mount none -t devpts /dev/pts
export HOME=/root
export LC_ALL=C
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 16126D3A3E5C1192

echo -e "Chroot: updating apt\n"
sleep 1	
apt-get update
echo -e "\nChroot: installing dbus\n"
sleep 1	
apt-get install --yes dbus
dbus-uuidgen > /var/lib/dbus/machine-id
dpkg-divert --local --rename --add /sbin/initctl

#Install Packages needed for the live system
echo -e "\nChroot: Installing packages for the live system\n"
sleep 1	
apt-get install --yes ubuntu-minimal casper lupin-casper
echo -e "\nChroot: Installing discover and os-prober\n"
sleep 1	
apt-get install --yes discover os-prober
echo -e "\nChroot: Installing linux-generic\n"
sleep 1	
apt-get install --yes linux-generic
echo -e "\nChroot: Installing grub2 and plymouth-x11\n"
sleep 1	
apt-get install --yes grub2 plymouth-x11

#Update grub
update-grub

#Install and configure Karoshi
echo -e "\nChroot: Do you want to run the karoshi Server build process? (y/n)"
read choice

[ "$choice" = y ] && /opt/karoshi/serversetup/distro/ubuntu/all/buildserver/buildserver

echo -e "\nChroot: ubiquity-frontend-gtk\n"
sleep 1
apt-get install --yes ubiquity-frontend-gtk

#Chroot clean up
rm /var/lib/dbus/machine-id
[ -f /sbin/initctl ] && rm /sbin/initctl
dpkg-divert --rename --remove /sbin/initctl

#Remove old linux kernels if there are more than one
ls /boot/vmlinuz-3.13.**-**-generic > list.txt
sum=$(cat list.txt | grep '[^ ]' | wc -l)

if [ $sum -gt 1 ]; then
dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | xargs sudo apt-get -y purge
fi

rm list.txt

apt-get clean

rm -rf /tmp/*

rm /etc/resolv.conf

umount -lf /proc
umount -lf /sys
umount -lf /dev/pts
exit
