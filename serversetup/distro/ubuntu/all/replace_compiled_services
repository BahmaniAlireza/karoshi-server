#!/bin/bash

source /opt/karoshi/server_network/domain_information/domain_name

#Check that a local version of samba4 exists
if [ ! -f /usr/local/sbin/samba ] 
then
	echo "$HOSTNAME - A local version of samba4 does not exist on this server."
	exit 101
fi

#Delete old init.d script for samba
[ -e /etc/init.d/samba ] && rm -f /etc/init.d/samba
[ -e /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/samba ] && rm -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/samba

cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/openchange-ocsmanager /etc/init.d/

#Make sure we do not get any prompts for software.
export DEBIAN_FRONTEND=noninteractive

#Check if samba 4 is running
RUNSTATUS=off
/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_status
[ $? = 0 ] && RUNSTATUS=on

#Check if sogo is running
RUNSTATUS2=off
/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/sogo_status
[ $? = 0 ] && RUNSTATUS2=on

#Add sogo repository
UBUNTUVER=trusty
[ `lsb_release -a 2>/dev/null | grep -c precise` -gt 0 ] && UBUNTUVER=precise
apt-key adv --keyserver keys.gnupg.net --recv-key 0x810273C4
add-apt-repository -y "deb http://inverse.ca/ubuntu $UBUNTUVER $UBUNTUVER"

#Remove all sope packages
apt-get -y remove sope*

#Remove remastersys repository - now defunct
if [ `grep -c http://www.remastersys.com/ubuntu /etc/apt/sources.list` -gt 0 ]
then
	sed -i '/http:\/\/www.remastersys.com\/ubuntu/d' /etc/apt/sources.list
fi

#Remove mapistore libraries
apt-get -y remove libmapi0 libmapi-dev libmapistore0 libmapistore-dev libmapiproxy0 libmapiproxy-dev

#Add linux-schools/backports repository
echo ""$HOSTNAME - Adding in linux-schools/backports ppa""
sleep 1
add-apt-repository -y "ppa:linux-schools/backports"
if [ $? != 0 ]
then
	"$HOSTNAME - The ppa did not install correctly"
	exit 101
fi
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8E250180
if [ $? != 0 ]
then
	"$HOSTNAME - The ppa key did not install correctly"
	exit 101
fi

echo ""$HOSTNAME - Updating repositories""
sleep 1
apt-get update

#Check that we can install the expected version of samba 4
if [ `apt-cache madison samba | grep -c linuxschools` = 0 ]
then
	echo ""$HOSTNAME - The linuxschools samba4 backport is not available""
	exit 101
fi

#Modify /etc/resolv.conf so that we can still get on the internet when samba 4 pdc or adc is stopped.
if [ `grep -c "[sysvol]" /etc/samba/smb.conf` -gt 0 ]
then
	DNSFORDWARDER=`grep "dns forwarder =" /etc/samba/smb.conf | cut -d"=" -f2 | sed 's/ //g'`
	if [ ! -z "$DNSFORDWARDER" ]
	then
		mv /etc/resolv.conf /etc/resolv.conf.$$
		echo nameserver $DNSFORDWARDER > /etc/resolv.conf
	else
		echo "$HOSTNAME - Could not create /etc/resolv.conf"
		exit 101		
	fi
fi


#Stop samba 4
if [ $RUNSTATUS = on ]
then
	#Stop nslcd
	echo "$HOSTNAME - stopping nslcd"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/nslcd_stop
	#Stop samba
	echo "$HOSTNAME - Stopping samba4"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_stop
fi

#Move var lib samba
mv /var/lib/samba /var/lib/samba.$$

#Test install the version of samba4 from linux-schools backports
echo ""$HOSTNAME - Testing that Samba 4 can be installed from linux-schools backports""
apt-get -s -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install samba
INSTALLCHECK1=$?

#Test install the version of sogo from linux-schools backports
apt-get -s -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install sogo
INSTALLCHECK2=$?

if [ $INSTALLCHECK1 != 0 ] || [ $INSTALLCHECK2 != 0 ]
then
	[ $INSTALLCHECK1 != 0 ] && echo ""$HOSTNAME - Samba will not install correctly""
	[ $INSTALLCHECK2 != 0 ] && echo ""$HOSTNAME - Sogo will not install correctly""
	echo ""$HOSTNAME - Aborting the installation and restarting the current samba4 service""
	if [ -f /etc/resolv.conf.$$ ]
	then
		rm -f /etc/resolv.conf
		mv /etc/resolv.conf.$$ /etc/resolv.conf
	fi
	#Restore /var/lib/samba
	if [ -d /var/lib/samba.$$ ]
	then
		[ -d /var/lib/samba ] && rm -f -R /var/lib/samba
		mv /var/lib/samba.$$ /var/lib/samba
	fi
	if [ $RUNSTATUS = on ]
	then
		/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/nslcd_start
		/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_start
	fi
	exit
fi

if [ $RUNSTATUS2 = on ]
then
	echo ""$HOSTNAME - stopping apache""
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/apache_stop
	echo ""$HOSTNAME - stopping sogo""
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/sogo_stop
fi

echo ""$HOSTNAME - Removing compiled samba4"" 

apt-get -y remove gnustep-common
apt-get -y remove libmapi-dev
apt-get -y remove libmapi0
apt-get -y remove libmapiproxy-dev
apt-get -y remove libmapiproxy0
apt-get -y remove libmapistore-dev
apt-get -y remove libmapistore0

#Remove sogo user
sed -i '/^sogo/ d' /etc/passwd
sed -i '/^sogo/ d' /etc/group

#Tidy up /usr/local
rm -f -R /usr/local/lib/*
rm -f /usr/local/bin/*
rm -f -R /usr/local/include/*
rm -f -R /usr/local/sbin/*
rm -f -R /usr/local/share/samba

echo ""$HOSTNAME - Installing Samba 4 from linux-schools backports"" 

#Modify smb.conf with dfs and round robin support

if [ `grep -c "\[sysvol\]" /etc/samba/smb.conf` -gt 0 ]
then
	if [ `grep -c "\[dfs\]" /etc/samba/smb.conf` = 0 ]
	then
		#Add in msdfs and round robin
		sed -i '/\[global\]/a \\thost msdfs = yes\n\tdns round robin = yes' /etc/samba/smb.conf

		#Add in dfs share
		sed -i '/\[sysvol\]/i \[dfs\]\n\tpath = /var/lib/samba/dfs\n\tmsdfs root = yes\n\tguest ok = Yes\n\tmsdfs shuffle referrals = yes\n' /etc/samba/smb.conf
	fi
fi

[ ! -d /var/lib/samba/dfs ] && mkdir -p /var/lib/samba/dfs

#Install samba4
apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install samba
apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install libparse-pidl-perl
#Delete old init.d script for samba
[ -e /etc/init.d/samba ] && rm -f /etc/init.d/samba

#Copy in revised sysv script
cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/samba4 /etc/init.d/

#Remove init script for samba4
[ -f /etc/init/samba-ad-dc.conf ] && rm -f /etc/init/samba-ad-dc.conf
[ -f /etc/init/smbd ] && rm -f /etc/init/smbd

#Restore /var/lib/samba
if [ -d /var/lib/samba.$$ ]
then
	[ -d /var/lib/samba ] && rm -f -R /var/lib/samba
	mv /var/lib/samba.$$ /var/lib/samba
fi
#Make sure the permissions are correct on the key.
chmod 0600 /var/lib/samba/private/tls/key.pem

#Install openchange
#echo ""$HOSTNAME - Installing openchange from linux-schools backports""
#apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install openchangeserver python-mysqldb python-ocsmanager
#INSTALLCHECK3=$?
#[ $INSTALLCHECK3 != 0 ] && echo "$HOSTNAME - openchangeserver did not install correctly"  
#Copy in revised init.d script
cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/sogo /etc/init.d/

#Install sogo
#apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install sogo sogo-openchange
apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -y install sogo

SOGoPath=/etc/apache2/conf.d
[ -d /etc/apache2/conf-enabled/ ] && SOGoPath=/etc/apache2/conf-enabled

if [ -f $SOGoPath/SOGo.conf ]
then
	ALIAS=`grep x-webobjects-server-url $SOGoPath/SOGo.conf | cut -d: -f2 | cut -d. -f1 | sed 's/\/\///g'`

	[ -d /etc/apache2/conf.d ] && cp -f /opt/karoshi/serversetup/modules/email/sogo/apache/SOGo.conf $SOGoPath
	[ -d /etc/apache2/conf-enabled ] && cp -f /opt/karoshi/serversetup/modules/email/sogo/apache/SOGo.conf-2.4 $SOGoPath/SOGo.conf

	#Modify /etc/apache2/conf.d/SOGo.conf
	sed -i 's/CHANGETHISWEBDOMAIN/'$ALIAS.$REALM'/g' $SOGoPath/SOGo.conf
	sed -i 's/CHANGETHISKRBPATH/'$HOSTNAME.$REALM'/g' $SOGoPath/SOGo.conf
	sed -i 's/CHANGETHISSERVERNAME/'$HOSTNAME'/g' $SOGoPath/SOGo.conf

	#Make sure SOGo.conf is not pointing at /usr/local
	sed -i 's/\/usr\/local\/lib/\/usr\/lib/g' $SOGoPath/SOGo.conf

	#Make sure SOGo.conf is not pointing at /usr/local
	sed -i 's/\/usr\/local\/lib/\/usr\/lib/g' $SOGoPath/sogoactivesync.conf
fi

#Set permissions on /etc/sogo
chown -R root:sogo /etc/sogo

#Copy in revised init.d script
cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/sogo /etc/init.d/

#Restore /etc/resolv.conf
if [ -f /etc/resolv.conf.$$ ]
then
	rm -f /etc/resolv.conf
	mv /etc/resolv.conf.$$ /etc/resolv.conf
fi

if [ $RUNSTATUS = on ]
then
	#Restart samba4
	echo "$HOSTNAME - restarting samba4"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_stop
	sleep 1
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_start
	#Start nslcd
	echo "$HOSTNAME - starting nslcd"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/nslcd_start
	#Set Samba4 to start on boot
	/opt/karoshi/serversetup/distro/ubuntu/scripts/startonboot/samba
	else
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/samba_stop
	/opt/karoshi/serversetup/distro/ubuntu/scripts/stoponboot/samba
fi

#Start Apache2 and Sogo
if [ $RUNSTATUS2 = on ]
then
	echo "$HOSTNAME - stopping apache"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/apache_stop
	sleep 1
	echo "$HOSTNAME - starting apache"
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/apache_start
	echo "$HOSTNAME - starting sogo"
	killall sogod
	sleep 1
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/sogo_start
	else
	/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/sogo_stop
fi
#[ $INSTALLCHECK3 != 0 ] && exit 101
exit

