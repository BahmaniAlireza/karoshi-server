#!/bin/bash
Configure_Apache=no
Internal_Management_Port=50001
External_Management_Port=50002
if [ -f /opt/karoshi/serversetup/variables/ports ]
then
	source /opt/karoshi/serversetup/variables/ports
fi


#Check to see if we need to configure apache for the web management

if [ ! -d /etc/apache2/sites-karoshi-enabled ]
	then
	Configure_Apache=yes
else
	#Check if the ports have changed
	if [[ $(grep -c -w "$Internal_Management_Port" /etc/apache2/ports_karoshi.conf) = 0 ]] || [[ $(grep -c -w "$External_Management_Port" /etc/apache2/ports_karoshi.conf) = 0 ]]
	then
		Configure_Apache=yes
	fi
fi

if [ "$Configure_Apache" = no ]
then
	exit	
fi

COPYPATH=/opt/karoshi/serversetup/distro/ubuntu/pdc/configfiles/karoshi_web_management
#Create apache_karoshi user and group
if [[ $(grep -c apache_karoshi /etc/group) = 0 ]]
then
	groupadd apache_karoshi
	groupmod -g 998 apache_karoshi
fi
if [[ $(grep -c apache_karoshi /etc/passwd) = 0 ]]
then
	useradd -u 998 -g apache_karoshi -d /var/www -c "system user for apache_karoshi" -K PASS_MAX_DAYS=-1 -s /bin/sh -M apache_karoshi
fi
#Copy in init.d startup script
cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/apache2_karoshi /etc/init.d/
chmod 0744 /etc/init.d/apache2_karoshi
#Copy in apache configuration files
[ ! -d /etc/apache2/sites-karoshi-enabled ] && mkdir -p /etc/apache2/sites-karoshi-enabled
cp -f "$COPYPATH"/karoshi-global-ssl /etc/apache2/sites-karoshi-enabled/
cp -f "$COPYPATH"/karoshi-local-ssl /etc/apache2/sites-karoshi-enabled/
cp -f "$COPYPATH"/ports_karoshi.conf /etc/apache2/
cp -f "$COPYPATH"/envvars_karoshi /etc/apache2/
cp -f "$COPYPATH"/apache2ctl_karoshi /usr/sbin
cp -f "$COPYPATH"/apache2_karoshi.conf /etc/apache2

#Modify config files with the correct ports
sed -i 's/INTERNAL_MANAGEMENT_PORT/'"$Internal_Management_Port"'/g' /etc/apache2/ports_karoshi.conf
sync /etc/apache2/ports_karoshi.conf
sed -i 's/EXTERNAL_MANAGEMENT_PORT/'"$External_Management_Port"'/g' /etc/apache2/ports_karoshi.conf

sed -i 's/INTERNAL_MANAGEMENT_PORT/'"$Internal_Management_Port"'/g' /etc/apache2/sites-karoshi-enabled/karoshi-local-ssl
sed -i 's/EXTERNAL_MANAGEMENT_PORT/'"$External_Management_Port"'/g' /etc/apache2/sites-karoshi-enabled/karoshi-global-ssl

#Add in servername to apache2_karoshi.conf
if [[ $(grep -c manage."$REALM" /etc/apache2/apache2_karoshi.conf) = 0 ]]
then
	source /opt/karoshi/server_network/domain_information/domain_name
	echo ServerName manage."$REALM" >> /etc/apache2/apache2_karoshi.conf
fi

[ ! -f /usr/sbin/apache2_karoshi ] && ln -s /usr/sbin/apache2 /usr/sbin/apache2_karoshi

#Make sure that apache starts on boot
/opt/karoshi/serversetup/distro/ubuntu/scripts/startonboot/apache_karoshi

#Make conf folder
[ ! -d /etc/apache2/conf.d_karoshi ] && mkdir -p /etc/apache2/conf.d_karoshi

#Make mods enabled
[ ! -d /etc/apache2/mods-enabled_karoshi ] && mkdir -p /etc/apache2/mods-enabled_karoshi

[ ! -f /etc/apache2/mods-enabled_karoshi/access_compat.load ] && ln -s /etc/apache2/mods-available/access_compat.load /etc/apache2/mods-enabled_karoshi/access_compat.load
[ ! -f /etc/apache2/mods-enabled_karoshi/auth_kerb.load ] && ln -s /etc/apache2/mods-available/auth_kerb.load /etc/apache2/mods-enabled_karoshi/auth_kerb.load
[ ! -f /etc/apache2/mods-enabled_karoshi/alias.conf ] && ln -s /etc/apache2/mods-available/alias.conf /etc/apache2/mods-enabled_karoshi/alias.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/alias.load ] && ln -s /etc/apache2/mods-available/alias.load /etc/apache2/mods-enabled_karoshi/alias.load
[ ! -f /etc/apache2/mods-enabled_karoshi/auth_basic.load ] && ln -s /etc/apache2/mods-available/auth_basic.load /etc/apache2/mods-enabled_karoshi/auth_basic.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authn_core.load ] && ln -s /etc/apache2/mods-available/authn_core.load /etc/apache2/mods-enabled_karoshi/authn_core.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authn_file.load ] && ln -s /etc/apache2/mods-available/authn_file.load /etc/apache2/mods-enabled_karoshi/authn_file.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authnz_ldap.load ] && ln -s /etc/apache2/mods-available/authnz_ldap.load /etc/apache2/mods-enabled_karoshi/authnz_ldap.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authz_core.load ] && ln -s /etc/apache2/mods-available/authz_core.load /etc/apache2/mods-enabled_karoshi/authz_core.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authz_host.load ] && ln -s /etc/apache2/mods-available/authz_host.load /etc/apache2/mods-enabled_karoshi/authz_host.load
[ ! -f /etc/apache2/mods-enabled_karoshi/authz_user.load ] && ln -s /etc/apache2/mods-available/authz_user.load /etc/apache2/mods-enabled_karoshi/authz_user.load
[ ! -f /etc/apache2/mods-enabled_karoshi/autoindex.conf ] && ln -s /etc/apache2/mods-available/autoindex.conf /etc/apache2/mods-enabled_karoshi/autoindex.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/cgi.load ] && ln -s /etc/apache2/mods-available/cgi.load /etc/apache2/mods-enabled_karoshi/cgi.load
[ ! -f /etc/apache2/mods-enabled_karoshi/dir.conf ] && ln -s /etc/apache2/mods-available/dir.conf /etc/apache2/mods-enabled_karoshi/dir.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/dir.load ] && ln -s /etc/apache2/mods-available/dir.load /etc/apache2/mods-enabled_karoshi/dir.load
[ ! -f /etc/apache2/mods-enabled_karoshi/env.load ] && ln -s /etc/apache2/mods-available/env.load /etc/apache2/mods-enabled_karoshi/env.load
[ ! -f /etc/apache2/mods-enabled_karoshi/filter.load ] && ln -s /etc/apache2/mods-available/filter.load /etc/apache2/mods-enabled_karoshi/filter.load
[ ! -f /etc/apache2/mods-enabled_karoshi/ldap.load ] && ln -s /etc/apache2/mods-available/ldap.load /etc/apache2/mods-enabled_karoshi/ldap.load
[ ! -f /etc/apache2/mods-enabled_karoshi/mime.conf ] && ln -s /etc/apache2/mods-available/mime.conf /etc/apache2/mods-enabled_karoshi/mime.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/mime.load ] && ln -s /etc/apache2/mods-available/mime.load /etc/apache2/mods-enabled_karoshi/mime.load
[ ! -f /etc/apache2/mods-enabled_karoshi/mpm_prefork.conf ] && ln -s /etc/apache2/mods-available/mpm_prefork.conf /etc/apache2/mods-enabled_karoshi/mpm_prefork.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/mpm_prefork.load ] && ln -s /etc/apache2/mods-available/mpm_prefork.load /etc/apache2/mods-enabled_karoshi/mpm_prefork.load
[ ! -f /etc/apache2/mods-enabled_karoshi/negotiation.conf ] && ln -s /etc/apache2/mods-available/negotiation.conf /etc/apache2/mods-enabled_karoshi/negotiation.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/negotiation.load ] && ln -s /etc/apache2/mods-available/negotiation.load /etc/apache2/mods-enabled_karoshi/negotiation.load
if [ -f /etc/apache2/mods-available/php5.conf ]
then
	PHPVER=php5.0
else
	PHPVER=php7.0
fi
[ ! -f /etc/apache2/mods-enabled_karoshi/"$PHPVER".conf ] && ln -s /etc/apache2/mods-available/"$PHPVER".conf /etc/apache2/mods-enabled_karoshi/"$PHPVER".conf
[ ! -f /etc/apache2/mods-enabled_karoshi/"$PHPVER".load ] && ln -s /etc/apache2/mods-available/"$PHPVER".load /etc/apache2/mods-enabled_karoshi/"$PHPVER".load

[ ! -f /etc/apache2/mods-enabled_karoshi/setenvif.conf ] && ln -s /etc/apache2/mods-available/setenvif.conf /etc/apache2/mods-enabled_karoshi/setenvif.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/setenvif.load ] && ln -s /etc/apache2/mods-available/setenvif.load /etc/apache2/mods-enabled_karoshi/setenvif.load
[ ! -f /etc/apache2/mods-enabled_karoshi/socache_shmcb.load ] && ln -s /etc/apache2/mods-available/socache_shmcb.load /etc/apache2/mods-enabled_karoshi/socache_shmcb.load
[ ! -f /etc/apache2/mods-enabled_karoshi/ssl.conf ] && ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled_karoshi/ssl.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/ssl.load ] && ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled_karoshi/ssl.load
[ ! -f /etc/apache2/mods-enabled_karoshi/status.conf ] && ln -s /etc/apache2/mods-available/status.conf /etc/apache2/mods-enabled_karoshi/status.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/status.load ] && ln -s /etc/apache2/mods-available/status.load /etc/apache2/mods-enabled_karoshi/status.load
[ ! -f /etc/apache2/mods-enabled_karoshi/proxy.load ] && ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled_karoshi/proxy.load
[ ! -f /etc/apache2/mods-enabled_karoshi/proxy_html.load ] && ln -s /etc/apache2/mods-available/proxy_html.load /etc/apache2/mods-enabled_karoshi/proxy_html.load
[ ! -f /etc/apache2/mods-enabled_karoshi/proxy_http.load ] && ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled_karoshi/proxy_http.load
[ ! -f /etc/apache2/mods-enabled_karoshi/proxy.conf ] && ln -s /etc/apache2/mods-available/proxy.conf /etc/apache2/mods-enabled_karoshi/proxy.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/proxy_html.conf ] && ln -s /etc/apache2/mods-available/proxy_html.conf /etc/apache2/mods-enabled_karoshi/proxy_html.conf
[ ! -f /etc/apache2/mods-enabled_karoshi/xml2enc.load ] && ln -s /etc/apache2/mods-available/xml2enc.load /etc/apache2/mods-enabled_karoshi/xml2enc.load

#Create apache 2 run folder
[ ! -d /var/run/apache2 ] && mkdir -p /var/run/apache2

#Modify logrotate to reload apache2_karoshi
if [ -f /etc/logrotate.d/apache2 ]
then
	echo "/var/log/apache2/*.log {" > /etc/logrotate.d/apache2
	echo "	weekly" >> /etc/logrotate.d/apache2
	echo "	missingok" >> /etc/logrotate.d/apache2
	echo "	rotate 52" >> /etc/logrotate.d/apache2
	echo "	compress" >> /etc/logrotate.d/apache2
	echo "	delaycompress" >> /etc/logrotate.d/apache2
	echo "	notifempty" >> /etc/logrotate.d/apache2
	echo "	create 640 root adm" >> /etc/logrotate.d/apache2
	echo "	sharedscripts" >> /etc/logrotate.d/apache2
	echo "	postrotate" >> /etc/logrotate.d/apache2
	echo "		/etc/init.d/apache2 reload > /dev/null" >> /etc/logrotate.d/apache2
	echo "		/etc/init.d/apache2_karoshi reload >/dev/null" >> /etc/logrotate.d/apache2
	echo "	endscript" >> /etc/logrotate.d/apache2
	echo "}" >> /etc/logrotate.d/apache2
fi

#Retart httpd_karoshi
service apache2_karoshi stop
sleep 1
service apache2_karoshi start
exit

