#!/bin/bash
#Copyright (C) 2014 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/server_network/domain_information/domain_name

TEXTDOMAIN=karoshi-server

#Provision Samba4 for openchange
echo '<br><li>'$HOSTNAME' - '$"Provisioning Samba4 for openchange"'</li><br>'
openchange_provision --standalone

#Create database for openchange
OPENCHANGEPASS=`openssl rand -hex 16`

#Make sure that we know the root mysql password
/opt/karoshi/serversetup/all/"useful scripts"/mysql_root_pass
#Get root mysql password
MYSQLPASS=`sed -n 1,1p /etc/mysql.secret`

echo '<br><li>'$HOSTNAME' - '$"Creating a mysql database for openchange"'</li><br>'
#Create openchange database
mysqladmin --password=$MYSQLPASS create openchange 1>/dev/null

#Grant permissions to openchange_user
[ ! -d /opt/karoshi/.tempdata ] && mkdir -p /opt/karoshi/.tempdata
echo GRANT ALL PRIVILEGES ON openchange.\* TO "'"openchange_user"'"@"'"localhost"'" IDENTIFIED BY "'"$OPENCHANGEPASS"'"';' > /opt/karoshi/.tempdata/mysqlperms.sql
echo ALTER DATABASE openchange DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci';' >> /opt/karoshi/.tempdata/mysqlperms.sql
mysql --password=$MYSQLPASS < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql

echo '<li>'$HOSTNAME' - '$"Provisioning openchange for mysql."'</li><br>'
#Provision openchange with mysql database
openchange_provision --openchangedb --openchangedb-uri='mysql://openchange_user:'$OPENCHANGEPASS'@localhost/openchange'

#Wait for samba if it has been restarted if this is a pdc or adc
if [ `grep -w -c sysvol /etc/samba/smb.conf` -gt 0 ]
then
	#Check that samba 4 is ready for ldap requests
	LDAPCHECK=0
	COUNTER=0
	while [ $LDAPCHECK = 0 ]
	do
		LDAPCHECK=`netstat -vatn | grep -c -w 389`
		sleep 1
		#Give up after 60 seconds
		[ $COUNTER = 60 ] && exit 101
		let COUNTER=$COUNTER+1
	done
fi

echo '<br><li>'$HOSTNAME' - '$"Adding openchange support for all existing users"'</li><br>'
for user in `getent passwd | grep /home/users | cut -d: -f1`
do
	openchange_newuser --create $user
done

#Make sure that smb.conf can only be read by root
chmod 0600 /etc/samba/smb.conf

#Modify smb.conf with additional paramaters for openchange.
sed -i '/\[global\]/a \\tmapistore:namedproperties = mysql\n\tnamedproperties:mysql_user = openchange_user\n\tnamedproperties:mysql_pass = '$OPENCHANGEPASS'\n\tnamedproperties:mysql_host = localhost\n\tnamedproperties:mysql_db = openchange\n\tmapistore:indexing_backend = mysql://openchange_user:'$OPENCHANGEPASS'@localhost/openchange\n\tmapiproxy:openchangedb = mysql://openchange_user:'$OPENCHANGEPASS'@localhost/openchange\n\tdcerpc endpoint servers = +epmapper, +mapiproxy\n\tdcerpc_mapiproxy:server = true\n\tdcerpc_mapiproxy:interfaces = exchange_emsmdb, exchange_nsp, exchange_ds_rfr' /etc/samba/smb.conf

#Restart samba
echo '<br><li>'$HOSTNAME' - '$"Restarting Samba4"'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_stop
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_start

#Configure apache for https outlook https access
[ ! -d o/etc/ocsmanager ] && mkdir -p /etc/ocsmanager
cp -f /opt/karoshi/serversetup/modules/email/ocsmanager/ocsmanager.ini /etc/ocsmanager/ocsmanager.ini

#Modify ocsmanager.ini with the correct information.
sed -i 's/CHANGETHISDN/'$LDAPBASE'/g' /etc/ocsmanager/ocsmanager.ini

#Copy in apache2 conf
APACHEPath=/etc/apache2/conf.d
[ -d /etc/apache2/conf-enabled/ ] && SOGoPath=/etc/apache2/conf-enabled
[ -d /etc/apache2/conf.d ] && cp -f /opt/karoshi/serversetup/modules/email/ocsmanager/ocsmanager.conf $APACHEPath/
[ -d /etc/apache2/conf-enabled ] && cp -f /opt/karoshi/serversetup/modules/email/ocsmanager/ocsmanager.conf $APACHEPath/

#Restart apache
echo '<li>'$HOSTNAME' - '$"Restarting Apache"'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_stop
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_start

#Start ocsmanager
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/ocsmanager_start

#Set ocsmanager to run on boot
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/ocsmanager

exit

