#!/bin/bash
#setupfileserver
#Copyright (C) 2009  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#aloughlin@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
########################
#Get variables
########################
LOG_DATE=`date +%F`
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: setupfileserver - incorrect number of arguments."<br>"
	exit 101
fi
read -t 3 DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-/'`

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
PDCSERVER=`echo "$DATA" | cut -s -d: -f4`
PDCIP=`echo "$DATA" | cut -s -d: -f5`

if [ -z "$REMOTE_USER" ]
then
	echo `date`: setupfileserver - Blank remote user."<br>"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: setupfileserver - Blank remote tcpip address."<br>"
	exit 101
fi

if [ -z "$PDCSERVER" ]
then
	echo `date`: setupfileserver - Blank PDC."<br>"
	exit 101
fi

if [ -z "$PDCIP" ]
then
	echo `date`: setupfileserver - Blank TCPIP."<br>"
	exit 101
fi

#Check to see that we can ping the PDC
ping -c 2 $PDCIP 1>/dev/null
if [ `echo $?` != 0 ]
then
	echo `date` : setupfileserver - Cannot ping the PDC."<br>"
	exit 101
fi


source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software
source /opt/karoshi/server_network/domain_information/domain_name

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

#############################
#Ensure that samba is running on boot
#############################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/samba
######################
#Setup Samba
######################
echo '<ul><li><b>'$"Setup File Server" - $HOSTNAME'</b></li></ul>'


#Restart shorewall
#Not needed as ports are opened by authentication modules

#Add in homes share to smb.conf

if [ `grep -c homes /etc/samba/smb.conf` = 0 ]
then
echo -e '
[homes]
	comment = Home Directories
	invalid users = root
	read only = No
	browseable = No
	veto files = /*.exe/*.msi/*.mp3/*.wma/*.ram/*.mov/*.mpg/*.mpeg/*.bat/*.lnk/*.zip/"Folder Settings"/desktop.ini/
' >> /etc/samba/smb.conf
fi

#Stop samba
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_stop 1>/dev/null 2>/dev/null
sleep 1
#start samba
echo "<ul><li>"$"Starting Samba""</li></ul>"
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_start 1>/dev/null
#Create the folders
chmod 0755 /home
chown root.root /home

###########################
#Show completed message
###########################
echo '<br><b>'$"Setup File Server" $"Completed"'</b>'
sleep 2
exit

