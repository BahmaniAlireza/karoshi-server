#!/bin/bash
SERVER=$1
if [ -z $SERVER ]
then
echo -e "Usage: add_karoshi_server_monitors: (all / servername)\n\nEither enter in the name of the server you want to add monitors for or enter all to generate a monitor for all servers."
exit
fi

REMOTE_USER=karoshi
REMOTE_ADDR=127.0.0.1
ALERTAFTER=1
INTERVAL=2
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/monitors_add.cgi | cut -d' ' -f1`

function get_monitors {
#Check services to monitor for each server
MONITORS="ping"
#Check for samba
if [ -f /opt/karoshi/server_network/servers/$GROUPNAME/1pdc ] || [ -f /opt/karoshi/server_network/servers/$GROUPNAME/1dc ] || [ -f /opt/karoshi/server_network/servers/$GROUPNAME/1domainmember ] || [ -f /opt/karoshi/server_network/servers/$GROUPNAME/fileserver ]
then
MONITORS="$MONITORS:samba"
fi
#Check for email
[ -f /opt/karoshi/server_network/servers/$GROUPNAME/emailserver ] && MONITORS="$MONITORS:pop3:pop3s:imap:imaps:smtp"
#Check for cups
[ -f /opt/karoshi/server_network/servers/$GROUPNAME/printserver ] && MONITORS="$MONITORS:cups"
#Check for dansguardian
[ -f /opt/karoshi/server_network/servers/$GROUPNAME/proxy_server ] && MONITORS="$MONITORS:dansguardian"
#Check for apache or nginx
if [ -f /opt/karoshi/server_network/servers/$GROUPNAME/apacheserver ] || [ -f /opt/karoshi/server_network/servers/$GROUPNAME/reverseproxyserver ]
then
MONITORS="$MONITORS:http:https"
fi
}

if [ $SERVER = all ]
then
for karoshi_servers in /opt/karoshi/server_network/servers/*
do
karoshi_server=`basename $karoshi_servers`
GROUPNAME=`echo $karoshi_server | cut -d. -f1`
#Get ip of the server
TCPIP=`net lookup $karoshi_server`
get_monitors
sudo -H /opt/karoshi/web_controls/exec/monitors_add $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$GROUPNAME:$TCPIP:$ALERTAFTER:$INTERVAL:$DAYSTART:$DAYEND:$HOURSTART:$HOUREND:$MONITORS 1> /dev/null
done
else
GROUPNAME=`echo $SERVER | cut -d. -f1`
TCPIP=`net lookup $SERVER`
get_monitors
sudo -H /opt/karoshi/web_controls/exec/monitors_add $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$GROUPNAME:$TCPIP:$ALERTAFTER:$INTERVAL:$DAYSTART:$DAYEND:$HOURSTART:$HOUREND:$MONITORS 1> /dev/null
fi

exit

