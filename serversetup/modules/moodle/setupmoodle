#!/bin/bash
#setuponlineclassroom
#Copyright (C) 2004  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#aloughlin@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
########################
#Get variables
########################
LOG_DATE=`date +%F`
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: setupmoodle - incorrect number of arguments"<br>"
	exit 101
fi
read -t 3 DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-/'`

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
ALIAS=`echo "$DATA" | cut -s -d: -f5`

if [ -z "$REMOTE_USER" ]
then
	echo `date`: setupmoodle - Blank remote user"<br>"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: setupmoodle - Blank remote tcpip address"<br>"
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo `date`: setupmoodle - Blank servername"<br>"
	exit 101
fi

if [ -z "$ALIAS" ]
then
	echo `date`: setupmoodle - Blank alias"<br>"
	exit 101
fi

[ -d /opt/karoshi/.tempdata ] || mkdir /opt/karoshi/.tempdata
[ -d /var/www/html ] || mkdir -p /var/www/html
[ ! -e /opt/karoshi/.tempdata/mysqlpasswordstatus ] || rm -f /opt/karoshi/.tempdata/mysqlpasswordstatus

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software
source /opt/karoshi/server_network/domain_information/domain_name
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

LDAPSERVER=127.0.0.1
#Get ldap server to use
if [ `grep -c -w "kdc" /etc/krb5.conf` -gt 0 ]
then
	LDAPSERVER=`grep -w "kdc" /etc/krb5.conf | sed "s/ //g" | cut -d"=" -f2 | sed -n 1,1p`
fi

#############################
#Ensure that apache and mysql are running on boot
#############################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/apache
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/mysql

#####################
#Apache moodle kerberos support
#####################
RESTARTAPACHE=no

if [ `grep -c "#moodle-kerberos-support" /etc/apache2/sites-enabled/default-ssl` = 0 ]
then
#Remove last lines
sed -i 's/^<\/VirtualHost>//g' /etc/apache2/sites-enabled/default-ssl
sed -i 's/^<\/IfModule>//g' /etc/apache2/sites-enabled/default-ssl

#Add in kerberos
echo -e '	#moodle-kerberos-support
	<Directory /var/www/html/moodle/auth/ldap/>
		<Files ntlmsso_magic.php>
			AuthName "Moodle"
			AuthType Kerberos
			Krb5Keytab /etc/keytabs/moodle.keytab
			KrbMethodNegotiate on
			KrbMethodK5Passwd off
			KrbAuthoritative on
			KrbServiceName HTTP/'$HOSTNAME'.'$REALM'
			require valid-user
		</Files>
	</Directory>' >> /etc/apache2/sites-enabled/default-ssl
echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
echo "</IfModule>" >> /etc/apache2/sites-enabled/default-ssl
RESTARTAPACHE=yes
fi

if [ $RESTARTAPACHE = yes ]
then
	#Restart apache
	echo "<ul><li>"Restarting apache to apply kerberos support"</li></ul>"
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_stop 1>/dev/null
	sleep 1
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_start 1>/dev/null
fi

#####################
#Create moodle mysql password for the new database
#####################
echo '<ul><li>'$"Creating the moodle database in mysql"'</li></ul>'

MOODLEPASS=`openssl rand -hex 16`
#Create moodle badge hash
BADGEHASH=`openssl rand -hex 16`

#############################
#Make sure that we know the root mysql password
#############################

/opt/karoshi/serversetup/all/"useful scripts"/mysql_root_pass
#Get root mysql password
MYSQLPASS=`sed -n 1,1p /etc/mysql.secret`

#############################
#create and pipe in the database
#############################

mysqladmin -f --password=$MYSQLPASS drop moodle 1>/dev/null 2>/dev/null
sleep 1
mysqladmin --password=$MYSQLPASS create moodle 1>/dev/null
sleep 1

#Make a backup of moodle.sql
cp /opt/karoshi/serversetup/modules/moodle/moodle.sql /opt/karoshi/serversetup/modules/moodle/moodle2.sql

#Edit moodle2.sql with the correct ldap server information ( replace ldap://127.0.0.1 )

sed -i 's/ldap:\/\/127.0.0.1/ldap:\/\/'$LDAPSERVER'/g' /opt/karoshi/serversetup/modules/moodle/moodle2.sql

#Edit moodle.sql with the correct realm information
sed -i 's/CHANGETHISLDAPBASE/'$LDAPBASE'/g' /opt/karoshi/serversetup/modules/moodle/moodle2.sql

#Edit hash for badges
sed -i 's/CHANGETHISHASH/'$BADGEHASH'/g' /opt/karoshi/serversetup/modules/moodle/moodle2.sql

mysql --password=$MYSQLPASS moodle < /opt/karoshi/serversetup/modules/moodle/moodle2.sql

#Create moodle_user in mysql
echo CREATE USER "'"moodle_user"'"@"'"localhost"'"  IDENTIFIED BY "'"$MOODLEPASS"'"';' > /opt/karoshi/.tempdata/mysqlperms.sql
#Grant mysql permissions to moodle
echo GRANT ALL PRIVILEGES ON moodle.\* TO "'"moodle_user"'"@"'"localhost"'"';' >> /opt/karoshi/.tempdata/mysqlperms.sql
echo ALTER DATABASE moodle DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci';' >> /opt/karoshi/.tempdata/mysqlperms.sql
mysql --password=$MYSQLPASS < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/serversetup/modules/moodle/moodle2.sql

###########################
#make sure that mysql and apache are running
###########################
MYSQLSTATUS=`ps -e | grep -c $MYSQLDVER`
APACHESTATUS=`ps -e | grep -c $APACHEVER`
if [ $MYSQLSTATUS = 0 ]
then
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/mysql_start 1>/dev/null
fi
if [ $APACHESTATUS = 0 ]
then
	echo '<ul><li>"'$"Apache was not running"'</li></ul>'
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_start 1>/dev/null
	echo "<br>"
fi

##########################
#Copy in files for online classroom
##########################

###########################
#Extract moodle
###########################
cd /var/www/html/
echo '<ul><li>'$"Extracting moodle"'</li></ul>'
[ -d /var/www/html/moodle ] && rm -f -R /var/www/html/moodle
tar -xzf /opt/karoshi/serversetup/modules/moodle/moodle.tar.gz
cp -f -R /opt/karoshi/serversetup/modules/moodle/moodle-data /var/www
echo '<ul><li>'$"Setting permissions"'</li></ul>'
chmod 0440 -R /var/www/html/moodle
chmod u+X,g+X -R /var/www/html/moodle
chmod 0600 -R /var/www/moodle-data
chmod u+X -R /var/www/moodle-data
chown -R root.$APACHEGROUP /var/www/html/moodle
chown -R $APACHEUSER.$APACHEGROUP /var/www/moodle-data

################################
#Modifying config.php for moodle
################################
PASSWORDLINENO=`grep -n ^'$'CFG-'>'dbpass /var/www/html/moodle/config.php | cut -d: -f1`
sed -i $PASSWORDLINENO'c'\$CFG-">"dbpass"    "=" ""'"$MOODLEPASS"'"";" /var/www/html/moodle/config.php

DOMAINLINENO=`grep -n ^'$'CFG-'>'wwwroot /var/www/html/moodle/config.php | cut -d: -f1`
sed -i $DOMAINLINENO'c'\$CFG-">"wwwroot"    "=" ""'"https://$ALIAS.$REALM/moodle"'"";" /var/www/html/moodle/config.php

##############################
#Schedule a refresh job for moodle
##############################
[ -d /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs ] || mkdir -p /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs
echo '*'/5 '*' '*' '*' '*' links -dump http://localhost/moodle/admin/cron.php '>' /dev/null > /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs/refresh_moodle.cron
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs 1>/dev/null


#####################################
#Ensure that apache ports are open in shorewall
#####################################
MODCHECK=`grep -c -w 80 /etc/shorewall/rules`
MODCHECK2=`grep -c -w 443 /etc/shorewall/rules`

MOD_SHOREWALL=no
if [ $MODCHECK = 0 ]
then
	MOD_SHOREWALL=yes
	PORTS="80"
fi

if [ $MODCHECK2 = 0 ]
then
	MOD_SHOREWALL=yes
	PORTS="443"
fi

if [ $MODCHECK = 0 ] && [ $MODCHECK2 = 0 ]
then
	MOD_SHOREWALL=yes
	PORTS="80,443"
fi

if [ $MOD_SHOREWALL = yes ]
then
	echo '<ul><li>'$"The following extra ports are being allowed"' - tcp 80,443</li></ul>'
	LINENUM=`grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1`
	sed -i $LINENUM'c'\ACCEPT'	'net'	'fw'	'tcp'	'$PORTS'	'-'#'apacherule /etc/shorewall/rules
	echo '#'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
fi

#Copy in export grades
cp -f /opt/karoshi/serversetup/modules/moodle/moodle_export_grades /opt/karoshi/"useful scripts"/
chmod 0700 /opt/karoshi/"useful scripts"/moodle_export_grades

######################
#Restart shorewall
######################
if [ $MOD_SHOREWALL = yes ]
then
echo '<ul><li>'$"Restarting shorewall"'</li></ul>'
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop 1>/dev/null
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start 1>/dev/null
fi
#################################
#Make sure that mysql and apache are running
#################################
MYSQLSTATUS=`ps -e | grep -c -w $MYSQLDVER`
if [ $MYSQLSTATUS = 0 ]
then
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/mysql_start 1>/dev/null
fi
APACHESTATUS=`ps -e | grep -c -w $APACHEVER`
if [ $APACHESTATUS = 0 ]
then
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_start 1>/dev/null
fi
#Clear moodle cache
sudo -u www-data php /var/www/html/moodle/admin/cli/purge_caches.php

###########################
#Setup moosh
###########################
/opt/karoshi/serversetup/modules/moodle/setupmoosh
exit
