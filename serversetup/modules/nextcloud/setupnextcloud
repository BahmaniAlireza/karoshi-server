#!/bin/bash

#Copyright (C) 2013  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk

#Website: http://www.karoshi.org.uk

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): setupnextcloud - incorrect number of arguments<br>"
	exit 101
fi
read -t 3 DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-/')

REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
#REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
SERVERNAME=$(echo "$DATA" | cut -s -d: -f4)
ALIAS=$(echo "$DATA" | cut -s -d: -f5)
SERVERIP=$(echo "$DATA" | cut -s -d: -f6)

if [ -z "$REMOTE_USER" ]
then
	echo "$(date): setupnextcloud - Blank remote user<br>"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): setupnextcloud - Blank remote tcpip address<br>"
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo "$(date): setupnextcloud - Blank servername<br>"
	exit 101
fi
if [ -z "$ALIAS" ]
then
	echo "$(date): setupnextcloud - Blank alias<br>"
	exit 101
fi

#Ensure that apache and mysql are running on boot
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/server_network/domain_information/domain_name

[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server

/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/apache
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/mysql

#Make sure we have all of the software installed for nextcloud and collabora online
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
echo '<ul><li>'$"Updating repositories"'</li></ul>'
apt-get update
echo '<ul><li>'$"Installing"' php-apcu redis-server php-redis</li></ul>'
apt-get install -y php-apcu redis-server php-redis
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/redis_status
[ "$?" != 0 ] && /opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/redis_start

#Install software required for collabora online
echo '<ul><li>'$"Installing"' apt-transport-https ca-certificates curl</li></ul>'
apt-get install -y apt-transport-https ca-certificates curl


dpkg -s docker-engine 1>/dev/null
if [ "$?" != 0 ]
then
	echo '<ul><li>'$"Adding Docker Repository"'</li></ul>'
	curl -fsSL https://yum.dockerproject.org/gpg | sudo apt-key add - 1>/dev/null

	add-apt-repository "deb https://apt.dockerproject.org/repo/ ubuntu-$(lsb_release -cs) main"
	apt-get update

	echo '<ul><li>'$"Installing"' docker</li></ul>'
	apt-get -mqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" -o Dpkg::Options::="--no-triggers" install docker-engine

	#Stop docker as it is has been started with init or systemd
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/docker_stop

	#Sysv support
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/sysvsupport
fi
echo '</pre>'

/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/docker
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/redis
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/docker_status
[ "$?" != 0 ] && /opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/docker_start

LDAPSERVER=127.0.0.1
#Get ldap server to use
if [[ $(grep -c -w "kdc" /etc/krb5.conf) -gt 0 ]]
then
	LDAPSERVER=$(grep -w "kdc" /etc/krb5.conf | sed "s/ //g" | sed -n 1,1p | cut -d"=" -f2)
fi

#Extract archive

echo '<ul><li>'$"Extracting Nextcloud"'</li></ul>'
[ -d /var/www/html/nextcloud ] && rm -f -R /var/www/html/nextcloud
tar -xzf /opt/karoshi/serversetup/modules/nextcloud/nextcloud.tar.gz --directory /var/www/html

#Append root cert
cat /etc/ssl/root-ca/cacert.pem >> /var/www/html/nextcloud/resources/config/ca-bundle.crt

#Create data folder for nextcloud
[ ! -d /home/nextcloud/data ] && mkdir -p /home/nextcloud/data
touch /home/nextcloud/data/.ocdata

#Set ownership and permissions
[ ! -d /home/nextcloud/data ] && mkdir -p /home/nextcloud/data
[ ! -d /var/www/html/nextcloud/updater ] && mkdir -p /var/www/html/nextcloud/updater


find /var/www/html/nextcloud/ -type f -print0 | xargs -0 chmod 0640
find /var/www/html/nextcloud/ -type d -print0 | xargs -0 chmod 0750

chown -R root:www-data /var/www/html/nextcloud/
chown -R www-data:www-data  /var/www/html/nextcloud/apps/
chown -R www-data:www-data /var/www/html/nextcloud/config/
chown -R www-data:www-data /home/nextcloud/data/
chown -R www-data:www-data /var/www/html/nextcloud/themes/
chown -R www-data:www-data /var/www/html/nextcloud/updater/

chmod +x /var/www/html/nextcloud/occ

if [ -f /var/www/html/nextcloud/.htaccess ]
then
	chmod 0644 /var/www/html/nextcloud/.htaccess
	chown root:www-data $/var/www/html/nextcloud/.htaccess
fi

echo '# Generated by ownCloud on 2017-01-27 16:59:41
# line below if for Apache 2.4
<ifModule mod_authz_core.c>
Require all denied
</ifModule>

# section for Apache 2.2 and 2.4
IndexIgnore *
' > /home/nextcloud/data/.htaccess

if [ -f /home/nextcloud/data/.htaccess ]
then
	chmod 0644 /home/nextcloud/data/.htaccess
	chown root:www-data /home/nextcloud/data/.htaccess
fi



#Allow htaccess for nextcloud
if [[ $(grep -c "#nextcloud" /etc/apache2/sites-enabled/default-ssl) = 0 ]]
then
	#Remove last lines
	sed -i 's/^<\/VirtualHost>//g' /etc/apache2/sites-enabled/default-ssl
	sed -i 's/^<\/IfModule>//g' /etc/apache2/sites-enabled/default-ssl

	echo -e '	#nextcloud
		<Directory /var/www/html/nextcloud/>
				Options Indexes FollowSymLinks MultiViews
				AllowOverride all
		</Directory>' >> /etc/apache2/sites-enabled/default-ssl
	echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
	echo "</IfModule>" >> /etc/apache2/sites-enabled/default-ssl
fi

if [[ $(grep -c "Collabora-Online" /etc/apache2/sites-enabled/default-ssl) = 0 ]]
then
	#Remove last lines
	sed -i 's/^<\/VirtualHost>//g' /etc/apache2/sites-enabled/default-ssl
	sed -i 's/^<\/IfModule>//g' /etc/apache2/sites-enabled/default-ssl

	#Add in reverse proxy
	echo -e '
#Reverse Proxy configuration for Collabora-Online
AllowEncodedSlashes NoDecode
# Container uses a unique non-signed certificate
SSLProxyEngine On
SSLProxyVerify None
SSLProxyCheckPeerCN Off
SSLProxyCheckPeerName Off

# keep the host
ProxyPreserveHost On

# static html, js, images, etc. served from loolwsd
# loleaflet is the client part of LibreOffice Online
ProxyPass           /loleaflet https://127.0.0.1:9980/loleaflet retry=0
ProxyPassReverse    /loleaflet https://127.0.0.1:9980/loleaflet

# WOPI discovery URL
ProxyPass           /hosting/discovery https://127.0.0.1:9980/hosting/discovery retry=0
ProxyPassReverse    /hosting/discovery https://127.0.0.1:9980/hosting/discovery

# Main websocket
ProxyPassMatch "/lool/(.*)/ws$" wss://127.0.0.1:9980/lool/$1/ws nocanon

# Admin Console websocket
ProxyPass   /lool/adminws wss://127.0.0.1:9980/lool/adminws

# Download as, Fullscreen presentation and Image upload operations
ProxyPass           /lool https://127.0.0.1:9980/lool
ProxyPassReverse    /lool https://127.0.0.1:9980/lool
' >> /etc/apache2/sites-enabled/default-ssl

	echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
	echo "</IfModule>" >> /etc/apache2/sites-enabled/default-ssl
fi

#Make sure opcache is enabled
if [ -f /etc/php/7.0/apache2/php.ini ]
then
	if [[ $(grep -c ^"opcache.enable=1" /etc/php/7.0/apache2/php.ini) = 0 ]]
	then
		cp /etc/php/7.0/apache2/php.ini /etc/php/7.0/apache2/php.ini.$$
		cp -f /opt/karoshi/serversetup/distro/ubuntu/all/buildserver/configfiles/php.ini /etc/php/7.0/apache2/
	fi
fi


#Enable mod rewrite and headers
a2enmod rewrite 1>/dev/null
a2enmod headers 1>/dev/null
a2enmod proxy 1>/dev/null
a2enmod proxy_wstunnel 1>/dev/null
a2enmod proxy_http 1>/dev/null

#Restart apache2
echo '<ul><li>'$"Restarting Apache"'</li></ul>'
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_stop 1>/dev/null 2>/dev/null
sleep 1
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_start 1>/dev/null
#####################
#Create nextcloud mysql password for the new database
#####################
echo '<ul><li>'$"Creating mysql database for Nextcloud"'</li></ul>'
CLOUDPASS=$(openssl rand -hex 16)
CLOUDID=$(openssl rand -hex 16)
CLOUDSALT=$(openssl rand -hex 15)
CLOUDSECRET=$(openssl rand -hex 24)

#############################
#Make sure that we know the root mysql password
#############################

/opt/karoshi/serversetup/all/"useful scripts"/mysql_root_pass

#Get root mysql password
MYSQLPASS=$(sed -n 1,1p /etc/mysql.secret)

#############################
#create and pipe in the database
#############################
mysqladmin -f --password="$MYSQLPASS" drop nextcloud 1>/dev/null 2>/dev/null
sleep 1
mysqladmin --password="$MYSQLPASS" create nextcloud 1>/dev/null
sleep 1

#Create moodule_user in mysql
echo "DROP USER 'nextcloud_user'@'localhost';" > /opt/karoshi/.tempdata/mysqlperms.sql
mysql --password="$MYSQLPASS" < /opt/karoshi/.tempdata/mysqlperms.sql
echo "CREATE USER 'nextcloud_user'@'localhost'  IDENTIFIED BY '$CLOUDPASS';" > /opt/karoshi/.tempdata/mysqlperms.sql
#Grant mysql permissions to nextcloud
echo "GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextcloud_user'@'localhost';" >> /opt/karoshi/.tempdata/mysqlperms.sql
echo 'ALTER DATABASE nextcloud DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;' >> /opt/karoshi/.tempdata/mysqlperms.sql
mysql --password="$MYSQLPASS" < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql

#Modify config.php with the correct password.
sed -i 's/CHANGETHISPASS/'"$CLOUDPASS"'/g' /var/www/html/nextcloud/config/config.php
sed -i 's/CHANGETHISCLOUDSECRET/'"$CLOUDSECRET"'/g' /var/www/html/nextcloud/config/config.php
sed -i 's/CHANGETHISCLOUDSALT/'"$CLOUDSALT"'/g' /var/www/html/nextcloud/config/config.php
sed -i 's/CHANGETHISID/'"$CLOUDID"'/g' /var/www/html/nextcloud/config/config.php
sed -i 's/CHANGETHISREALM/'"$ALIAS"'.'"$REALM"'/g' /var/www/html/nextcloud/config/config.php

#Make a backup of nextcloud.sql
cp /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql /opt/karoshi/serversetup/modules/nextcloud/nextcloud_original.sql

#Edit nextcloud.sql with the correct realm information
sed -i 's@CHANGETHISLDAPBASE@'"$LDAPBASE"'@g' /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql

#Edit nextcloud.sql with the correct ldap server information ( replace ldap://127.0.0.1 )
if [ "$LDAPSERVER" != 127.0.0.1 ]
then
	sed -i 's/127.0.0.1/'"$LDAPSERVER"'/g' /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql
fi
#Change the realm for collabora
sed -i 's%https://CHANGETHISREALM%https://'"$ALIAS"'.'"$REALM"'%g' /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql

#Pipe in database
mysql --password="$MYSQLPASS" nextcloud < /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql

#Restore original nextcloud.sql
rm -f /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql
mv /opt/karoshi/serversetup/modules/nextcloud/nextcloud_original.sql /opt/karoshi/serversetup/modules/nextcloud/nextcloud.sql

#####################################
#Ensure that apache ports are open in shorewall
#####################################

MOD_SHOREWALL=no
if [[ $(grep -c "#Web-Services" /etc/shorewall/rules) = 0 ]]
then 
	MOD_SHOREWALL=yes
	echo '<ul><li>'$"The following extra ports are being allowed"' - tcp 80,443</li></ul>'
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
	sed -i "$LINENUM"'cACCEPT	net	fw	tcp	80,443	-#Web-Services' /etc/shorewall/rules
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules
fi

if [[ $(grep -c docker0 /etc/shorewall/interfaces) = 0 ]]
then
	MOD_SHOREWALL=yes
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/interfaces | cut -d: -f1)
	sed -i "$LINENUM"'cnet	docker0	detect' /etc/shorewall/interfaces
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/interfaces

fi

if [[ $(grep -c Collabora-Online /etc/shorewall/rules) = 0 ]]
then
	MOD_SHOREWALL=yes
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
	sed -i "$LINENUM"'cACCEPT	net	fw	tcp	9980	-#Collabora-Online' /etc/shorewall/rules
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules
fi

#Make sure we can get to dns which may as well be from the server we are running on since we either have samba4 or dnsmasq
if [[ $(grep -c -w 53 /etc/shorewall/rules) = 0 ]]
then
	MOD_SHOREWALL=yes
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
	sed -i "$LINENUM"'cACCEPT	net	fw	tcp	53	-#dnsmasq-tcp' /etc/shorewall/rules
	echo 'ACCEPT	net	fw	udp	53	-#dnsmasq-udp' >> /etc/shorewall/rules
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules	
fi

if [ "$MOD_SHOREWALL" = yes ]
then
	echo '<ul><li>'$"Restarting shorewall"'</li></ul>'
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_stop 1>/dev/null
	sleep 1
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_start 1>/dev/null
fi

#Setup Collabora Online
/opt/karoshi/serversetup/modules/nextcloud/setupcollabora "$ALIAS.$REALM" "$SERVERIP" html

#Install extra fonts in to the Collabora Docker container
#/opt/karoshi/serversetup/modules/nextcloud/collabora_install_fonts html

###########################
#Show completed message
###########################
echo '<br>'$"Nextcloud has been installed and can be accessed from" - '<a href="https://'"$ALIAS.$REALM"'/nextcloud" target="_blank">'"$ALIAS.$REALM"'/nextcloud</a>'
echo '<br>Run /opt/karoshi/serversetup/modules/nextcloud/collabora_install_fonts for more fonts'
echo '<br>'$"username":admin - $"password": admin
echo '<br><p style="font-weight:bold; font-size:20px;">'$"Please change the admin password immediately."'</p><br>'
exit



