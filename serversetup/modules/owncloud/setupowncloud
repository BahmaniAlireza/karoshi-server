#!/bin/bash

#Copyright (C) 2013  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#aloughlin@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk

########################
#Get variables
########################
LOG_DATE=`date +%F`
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: setupowncloud - incorrect number of arguments"<br>"
	exit 101
fi
read -t 3 DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-/'`

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
ALIAS=`echo "$DATA" | cut -s -d: -f5`

if [ -z "$REMOTE_USER" ]
then
	echo `date`: setupowncloud - Blank remote user"<br>"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: setupowncloud - Blank remote tcpip address"<br>"
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo `date`: setupowncloud - Blank servername"<br>"
	exit 101
fi
if [ -z "$ALIAS" ]
then
	echo `date`: setupowncloud - Blank alias"<br>"
	exit 101
fi

#Ensure that apache and mysql are running on boot
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/server_network/domain_information/domain_name

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/apache
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/mysql

LDAPSERVER=127.0.0.1
#Get ldap server to use
if [ `grep -c -w "kdc" /etc/krb5.conf` -gt 0 ]
then
	LDAPSERVER=`grep -w "kdc" /etc/krb5.conf | sed "s/ //g" | sed -n 1,1p | cut -d"=" -f2`
fi

#Extract archive

echo '<li>'$"Extracting Owncloud"'</li><br>'
[ -d /var/www/html/owncloud ] && rm -f -R /var/www/html/owncloud
tar -xzf /opt/karoshi/serversetup/modules/owncloud/owncloud.tar.gz --directory /var/www/html


#Create data folder for owncloud
[ ! -d /home/owncloud/data ] && mkdir -p /home/owncloud/data

#Set ownership and permissions
#chown -R root:www-data /var/www/html/owncloud
chown -R www-data:www-data /var/www/html/owncloud
chmod -R 0640 /var/www/html/owncloud
chmod -R u+X,g+X  /var/www/html/owncloud

chmod 0700 /home/owncloud/
chmod 0700 /home/owncloud/data
touch /home/owncloud/data/.ocdata

chown -R www-data:www-data /home/owncloud
chown -R www-data:www-data /var/www/html/owncloud/apps
chown -R www-data:www-data /var/www/html/owncloud/config

#Allow htaccess for owncloud
if [ `grep -c "#owncloud" /etc/apache2/sites-enabled/default-ssl` = 0 ]
then
	#Remove last lines
	sed -i 's/<\/VirtualHost>//g' /etc/apache2/sites-enabled/default-ssl
	sed -i 's/<\/IfModule>//g' /etc/apache2/sites-enabled/default-ssl

	#Add in kerberos
	#echo -e '	#owncloud-kerberos-support
	#	<Directory /var/www/html/owncloud/>
	#			Options Indexes FollowSymLinks MultiViews
	#			AllowOverride all
	#
	#			AuthName "Owncloud"
	#			AuthType Kerberos
	#			Krb5Keytab /etc/keytabs/owncloud.keytab
	#			KrbMethodNegotiate on
	#			KrbMethodK5Passwd off
	#			KrbAuthoritative on
	#			KrbServiceName HTTP/'$HOSTNAME'.'$REALM'
	#			require valid-user
	#	</Directory>' >> /etc/apache2/sites-enabled/default-ssl
	#echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
	#echo "</IfModule>" >> /etc/apache2/sites-enabled/default-ssl

	#Add in kerberos
	echo -e '	#owncloud
		<Directory /var/www/html/owncloud/>
				Options Indexes FollowSymLinks MultiViews
				AllowOverride all
		</Directory>' >> /etc/apache2/sites-enabled/default-ssl
	echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
	echo "</IfModule>" >> /etc/apache2/sites-enabled/default-ssl
fi

#Enable mod rewrite and headers
a2enmod rewrite 1>/dev/null
a2enmod headers 1>/dev/null

#Restart apache2
echo '<li>'$"Restarting Apache"'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_stop 1>/dev/null 2>/dev/null
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_start 1>/dev/null
#####################
#Create owncloud mysql password for the new database
#####################
echo '<li>'$"Create mysql database for Owncloud"'</li><br>'
RANGE=61
COUNTER=1
while [ $COUNTER -lt 16 ]
do
	row[$COUNTER]=$RANDOM
	let "row[$COUNTER] %= $RANGE"
	while [ ${row[$COUNTER]} = 0 ]
	do
		row[$COUNTER]=$RANDOM
		let "row[$COUNTER] %= $RANGE"
	done
	CHARACTER[$COUNTER]=`sed -n ${row[$COUNTER]},1p /opt/karoshi/serversetup/pdc/"useful scripts"/.alphabet`
	let COUNTER=COUNTER+1
done

CLOUDPASS=`echo ${CHARACTER[@]:0} | sed 's/ //g'`


RANGE=61
COUNTER=1
while [ $COUNTER -lt 16 ]
do
	row[$COUNTER]=$RANDOM
	let "row[$COUNTER] %= $RANGE"
	while [ ${row[$COUNTER]} = 0 ]
	do
		row[$COUNTER]=$RANDOM
		let "row[$COUNTER] %= $RANGE"
	done
	CHARACTER[$COUNTER]=`sed -n ${row[$COUNTER]},1p /opt/karoshi/serversetup/pdc/"useful scripts"/.alphabet`
	let COUNTER=COUNTER+1
done

CLOUDID=`echo ${CHARACTER[@]:0} | sed 's/ //g'`

#############################
#Make sure that we know the root mysql password
#############################

/opt/karoshi/serversetup/all/"useful scripts"/mysql_root_pass

#Get root mysql password
MYSQLPASS=`sed -n 1,1p /etc/mysql.secret`

#############################
#create and pipe in the database
#############################
mysqladmin -f --password=$MYSQLPASS drop owncloud 1>/dev/null 2>/dev/null
sleep 1
mysqladmin --password=$MYSQLPASS create owncloud 1>/dev/null
sleep 1

echo GRANT ALL PRIVILEGES ON owncloud.\* TO "'"owncloud_user"'"@"'"localhost"'" IDENTIFIED BY "'"$CLOUDPASS"'"';' > /opt/karoshi/.tempdata/mysqlperms.sql
echo ALTER DATABASE owncloud DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci';' >> /opt/karoshi/.tempdata/mysqlperms.sql
mysql --password=$MYSQLPASS < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql

#Modify config.php with the correct password.
sed -i 's/CHANGETHISPASS/'$CLOUDPASS'/g' /var/www/html/owncloud/config/config.php
sed -i 's/CHANGETHISID/'$CLOUDID'/g' /var/www/html/owncloud/config/config.php
sed -i 's/CHANGETHISREALM/'$ALIAS'.'$REALM'/g' /var/www/html/owncloud/config/config.php

#Make a backup of owncloud.sql
cp /opt/karoshi/serversetup/modules/owncloud/owncloud.sql /opt/karoshi/serversetup/modules/owncloud/owncloud_original.sql

#Edit owncloud.sql with the correct realm information
sed -i 's@CHANGETHISLDAPBASE@'$LDAPBASE'@g' /opt/karoshi/serversetup/modules/owncloud/owncloud.sql

#Edit owncloud.sql with the correct ldap server information ( replace ldap://127.0.0.1 )
sed -i 's/ldap:\/\/127.0.0.1/ldap:\/\/'$LDAPSERVER'/g' /opt/karoshi/serversetup/modules/owncloud/owncloud.sql

#Pipe in database
mysql --password=$MYSQLPASS owncloud < /opt/karoshi/serversetup/modules/owncloud/owncloud.sql

#Restore original owncloud.sql
rm -f /opt/karoshi/serversetup/modules/owncloud/owncloud.sql
mv /opt/karoshi/serversetup/modules/owncloud/owncloud_original.sql /opt/karoshi/serversetup/modules/owncloud/owncloud.sql

#####################################
#Ensure that apache ports are open in shorewall
#####################################

MODCHECK=`grep -c -w 443 /etc/shorewall/rules`

if [ $MODCHECK = 0 ]
then
LINENUM=`grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1`
sed -i $LINENUM'c'\ACCEPT'	'net'	'fw'	'tcp'	'443'	'-'#'apacherule /etc/shorewall/rules
echo '#'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
echo '<li>'$"Restarting shorewall"'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop 1>/dev/null
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start 1>/dev/null
fi

###########################
#Show completed message
###########################
echo '<br>'$"Owncloud has been installed and can be accessed from" - '<a href="https://'$ALIAS.$REALM'/owncloud" target="_blank">'$ALIAS.$REALM'/owncloud</a>'
echo '<br>'$"username":admin - $"password": admin
echo '<br><p style="font-weight:bold; font-size:20px;">'$"Please change the admin password immediately."'</p><br>'
exit



