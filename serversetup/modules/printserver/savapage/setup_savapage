#!/bin/bash


INSTALLPATH=/opt/savapage
LOG_DATE=$(date +%F)
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/server_network/domain_information/domain_name

#Exit if the savapage directory already exits
if [ -d /opt/savapage ]
then
	echo '<ul><li>'$"Error installing Savapage"' /opt/savapage '$"already exists"'</li></ul>'$"Delete this folder before re-installing this module."''
	exit 101
fi

INSTALL_LIST="lynx default-jre default-jdk avahi-daemon python-cups python3-cups python3-cupshelpers libreoffice libgxps-utils imagemagick"
if [[ $(lsb_release -r | grep -c 12.04) -gt 0 ]]
then
	INSTALL_LIST="lynx default-jre default-jdk avahi-daemon python-cups python-cupshelpers libreoffice libgxps-utils imagemagick"
fi
if [[ $(lsb_release -r | grep -c 14.04) -gt 0 ]]
then
	INSTALL_LIST="lynx default-jre default-jdk avahi-daemon python-cups python3-cups libreoffice libgxps-utils imagemagick"
fi

#Install packages - libreoffice is needed for web printing
UPDATEREPO=yes
for PACKAGE in $INSTALL_LIST
do
	if [[ $(dpkg-query -l "$PACKAGE" 2>/dev/null | grep -c ^ii) = 0 ]]
	then
		if [ "$UPDATEREPO" = yes ]
		then
			echo '<ul><li>'$"Updating Repositories"'</li></ul><pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
			apt-get update
			echo '</pre>'
		fi
		echo '<ul><li>'$"Installing"' '"$PACKAGE"'</li></ul><pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
		apt-get install -y "$PACKAGE"
		if [ $? != 0 ]
		then
			echo '<ul><li>'$"Error installing"' '"$PACKAGE"'</li></ul></pre>'
			sleep 5
			exit 101
		fi
		echo '</pre>'
		UPDATEREPO=no
	fi
done

#Get the latest savapage version
LATESTVER=$(lynx -dump https://www.savapage.org/download/installer/ | grep "x64.bin" | sed -n 1,1p | cut -d- -f3)
if [ "$?" != 0 ]
then
	echo '<ul><li>'$"Error getting the Savapage version"'</li></ul>'
	exit 101
fi

SAVABINARY=savapage-setup-"$LATESTVER"-linux-x64.bin

#Create savapage user
getent passwd savapage 1>/dev/null
if [ $? != 0 ]
then
	useradd -r savapage
fi

if [ ! -d "$INSTALLPATH" ]
then
	mkdir -p "$INSTALLPATH"
fi

chown savapage "$INSTALLPATH"

cd "$INSTALLPATH"
#Download savapage binary
if [ ! -f "$INSTALLPATH/$SAVABINARY" ]
then
	echo '<ul><li>'$"Downloading Savapage"'</li></ul>'
	wget https://www.savapage.org/download/installer/savapage-setup-"$LATESTVER"-linux-x64.bin
	if [ $? != 0 ]
	then
		echo '<ul><li>'$"Error Downloading Savapage"'</li></ul>'
		exit 101
	fi
fi

#Run the installer
chown savapage "$INSTALLPATH/$SAVABINARY"
chmod 0755 "$INSTALLPATH/$SAVABINARY"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
if [[ $(lsb_release -r | grep -c 12.04) -gt 0 ]]
then
	su savapage -c 'echo -e "yes\nyes\nno\n" | ./"'"$SAVABINARY"'"'
else
	su savapage -c 'echo -e "yes\nno\n" | ./"'"$SAVABINARY"'"'
fi
echo '</pre>'

#Run root tasks
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
"$INSTALLPATH"/MUST-RUN-AS-ROOT
echo '</pre>'

#Link in the savapage init.d script
ln -sf "/opt/savapage/server/bin/linux-x64/app-server" /etc/init.d/savapage

#Set savapage to start on boot
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/savapage

#Configure cups to allow access on 631 - backup cupsd.conf and copy in revised cupsd.conf
cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf-backup-"$LOG_DATE.$$"
cp -f /opt/karoshi/serversetup/modules/printserver/savapage/cupsd.conf /etc/cups/

#Get country currency code
source /etc/default/locale
CountryCode=$(echo "$LANG" | cut -d_ -f2 | cut -d. -f1)
[ -z "$CountryCode" ] && CountryCode=US

CurrencyCode=$(/opt/karoshi/serversetup/all/"useful scripts"/get_currency_symbol "$CountryCode")
if [ "$?" != 0 ] || [ -z "$CurrencyCode" ]
then
	CurrencyCode=USD
fi

#Extract savapage database and modify ldap
unzip /opt/karoshi/serversetup/modules/printserver/savapage/savapage.zip -d /opt/karoshi/serversetup/modules/printserver/savapage/
#Set the ldap base for users
sed -i 's/REPLACETHISDN/'"$LDAPBASE"'/g' /opt/karoshi/serversetup/modules/printserver/savapage/savapage.xml
#Set the ldap server
LDAPSERVER=127.0.0.1
#Get ldap server to use
if [[ $(grep -c -w "kdc" /etc/krb5.conf) -gt 0 ]]
then
	LDAPSERVER=$(grep -w "kdc" /etc/krb5.conf | sed "s/ //g" | cut -d"=" -f2 | sed -n 1,1p)
fi
sed -i 's/REPLACETHISLDAPSERVER/'"$LDAPSERVER"'/g' /opt/karoshi/serversetup/modules/printserver/savapage/savapage.xml
#Replace the currency code
sed -i 's/REPLACETHISCURRENCYCODE/'"$CurrencyCode"'/g' /opt/karoshi/serversetup/modules/printserver/savapage/savapage.xml

#Zip up savapage.xml ready for import
cd /opt/karoshi/serversetup/modules/printserver/savapage
[ -f /opt/karoshi/serversetup/modules/printserver/savapage/savapage_custom.zip ] && rm -f /opt/karoshi/serversetup/modules/printserver/savapage/savapage_custom.zip
zip savapage_custom.zip savapage.xml
rm -f /opt/karoshi/serversetup/modules/printserver/savapage/savapage.xml
cd "$INSTALLPATH"

#Import custom savapage database - make sure savapage is stopped
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/savapage_stop
su savapage -c "/opt/savapage/server/bin/linux-x64/savapage-db --db-import /opt/karoshi/serversetup/modules/printserver/savapage/savapage_custom.zip"

#Restart cups
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/cups_stop 1>/dev/null
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/cups_start 1>/dev/null

#SavaPage uses TCP/IP port 8631(for HTTP), port 8632 (for HTTPS/SSL) and port 9100(for JetDirect/RAWprinting) by default.
#Open shorewall ports
RESTARTSHOREWALL=no
if [[ $(grep -c savapage /etc/shorewall/rules) = 0 ]]
then
	RESTARTSHOREWALL=yes
	echo '<ul><li>'$"The following extra ports are being allowed"' - tcp 8631 8632 9100 </li></ul>'
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
	sed -i "$LINENUM""c\ACCEPT	net	fw	tcp	8631,8632,9100	-#savapage" /etc/shorewall/rules
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_stop 1>/dev/null
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_start 1>/dev/null
fi

if [[ $(grep -c avahi /etc/shorewall/rules) = 0 ]]
then
	RESTARTSHOREWALL=yes
	echo '<ul><li>'$"The following extra ports are being allowed"' - tcp,udp 5353</li></ul>'
	LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
	sed -i "$LINENUM""c\ACCEPT	net	fw	tcp,udp	5353	-#avahi" /etc/shorewall/rules
	echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules
fi

if [ "$RESTARTSHOREWALL" = yes ]
then
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_stop 1>/dev/null
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_start 1>/dev/null
fi

#Restart savapage
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/savapage_start

echo '<ul><li>'$"Setting up Airprint"'</li></ul>'
#Setup airprint
cp -f /opt/karoshi/serversetup/modules/printserver/savapage/savapage.service /etc/avahi/services

#Restart avahi
echo '<ul><li>'$"Restarting Avahi"'</li></ul>'
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/avahi_stop 1>/dev/null
/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/avahi_start 1>/dev/null


