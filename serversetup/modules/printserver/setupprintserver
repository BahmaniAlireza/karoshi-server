#!/bin/bash
#Copyright (C) 2004  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#aloughlin@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
########################
#Get variables
########################
LOG_DATE=`date +%F`
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: setupprintserver - incorrect number of arguments."<br>"
exit 101
fi
read -t 3 DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-/'`

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
LDAPPASS=`echo "$DATA" | cut -s -d: -f4`
PDCSERVER=`echo "$DATA" | cut -s -d: -f5`
PDCIP=`echo "$DATA" | cut -s -d: -f6`
SAMBADOMAIN=`echo "$DATA" | cut -s -d: -f7`

if [ $REMOTE_USER'null' = null ]
then
echo `date`: setupprintserver - Blank remote user."<br>"
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: setupprintserver - Blank remote tcpip address."<br>"
exit 101
fi

if [ $PDCSERVER'null' = null ]
then
echo `date`: setupprintserver - Blank PDC."<br>"
exit 101
fi
if [ $PDCSERVER != `hostname-fqdn` ]
then
if [ $LDAPPASS'null' = null ]
then
echo `date`: setupprintserver - Blank root password."<br>"
exit 101
fi
fi

if [ $PDCIP'null' = null ]
then
echo `date`: setupprintserver - Blank TCPIP."<br>"
exit 101
fi

if [ $PDCSERVER != `hostname-fqdn` ]
then
#Check to see that we can ping the PDC
ping -c 2 $PDCIP 1>/dev/null
if [[ $? != 0 ]]
then
echo `date` : setupprintserver - $PINGFAIL."<br>"
exit 101
fi
fi

LANGCHOICE=englishuk
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/modules/printserver/setupprintserver ] || LANGCHOICE=englishuk
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/printserver/setupprintserver

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software
SAMBADOMAINCAPS=`echo $SAMBADOMAIN | tr 'a-z' 'A-Z'`

######################
#Final samba Install check
######################
if ! test -f /etc/init.d/$SMBVER
then
echo /etc/init.d/$SMBVER does not exist >> /opt/karoshi/serversetup/install_log
echo $SAMBANOTINSTALLED'<br><br>'
exit 101
fi
######################
#Final xinetd Install check
######################
if ! test -f /etc/init.d/$XINETDVER
then
echo /etc/init.d/$XINETDVER does not exist >> /opt/karoshi/serversetup/install_log
echo $XINETDVER $XINETDNOTINSTALLED'<br><br>'
exit 101
fi

#############################
#Ensure that samba and cups are running on boot
#############################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/cups
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/samba

######################
#Setup Samba
######################

if [ `grep -c "All Printers" /etc/samba/smb.conf` = 0 ]
then
#Backup smb.conf
cp /etc/samba/smb.conf /etc/samba/smb.$$.conf

###########################
#Modify samba to add in printing
###########################

GLOBALLINE=`cat /etc/samba/smb.conf | grep -n global | cut -d: -f1`
let GLOBALLINE=$GLOBALLINE+1

sed -i ''$GLOBALLINE' i load printers = yes\ncups options = raw\nprintcap name = cups' /etc/samba/smb.conf

echo >> /etc/samba/smb.conf
echo '[printers]' >> /etc/samba/smb.conf
echo "	"comment = All Printers >> /etc/samba/smb.conf
echo "	"path = /var/spool/samba >> /etc/samba/smb.conf
echo "	"guest ok = No >> /etc/samba/smb.conf
echo "	"printable = Yes >> /etc/samba/smb.conf
echo "	"browsable = Yes >> /etc/samba/smb.conf
echo >> /etc/samba/smb.conf
echo '[print$]' >> /etc/samba/smb.conf
echo "	"comment = All Printers >> /etc/samba/smb.conf
echo "	"path = /var/lib/samba/printers >> /etc/samba/smb.conf
echo "	"guest ok = Yes >> /etc/samba/smb.conf
echo "	"browsable = Yes >> /etc/samba/smb.conf
echo "	"read only = yes >> /etc/samba/smb.conf
echo "	"write list = "@"itadmin, "@"adm, root, Administrator >> /etc/samba/smb.conf

echo >> /etc/samba/smb.conf

#Create spool areas
[ ! -d /var/spool/samba ] && mkdir -p /var/spool/samba
chmod 1777 /var/spool/samba

[ ! -d /var/lib/samba/printers ] && mkdir -p /var/lib/samba/printers
chmod 0755 /var/lib/samba/printers
chown root:itadmin /var/lib/samba/printers

#Restart samba
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_stop 1>/dev/null
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_start 1>/dev/null
fi

########################
#Set printer admin rights to allow windows printer drivers to be modified by itadmin group
########################
ROOTUSER=Administrator
[ `grep -c "#karoshi_member_server" /etc/samba/smb.conf` -gt 0 ] && ROOTUSER=root
net rpc rights grant "itadmin" SePrintOperatorPrivilege -U $ROOTUSER%"$LDAPPASS" 1>/dev/null

###########################
#Open shorewall ports for samba
###########################
MODCHECK=`grep -c -w samba_fileserver_rule /etc/shorewall/rules`
if [ $MODCHECK = 0 ]
then
	echo '<li>'$SHOREWALLMSG - tcp 139,445 udp 137,138,445'</li><br>'
	LINENUM=`grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1`
	sed -i $LINENUM'c'\ACCEPT'	'net'	'fw'	'tcp'	'53,88,123,135,137,138,139,389,445,464,636,1024:1100,3268'	'-'#'samba_fileserver_rule /etc/shorewall/rules
	echo ACCEPT'	'net'	'fw'	'udp'	'53,88,123,137,138,139,389,445,464,636,1024:1100'	'-'#'samba_fileserver_rule >> /etc/shorewall/rules
	echo '#'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules

	echo '<li>'$RESTARTSWMSG'</li><br>'
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop 1>/dev/null
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start 1>/dev/null
fi

#Make sure that lpstat can see usernames
if [ `grep -c "JobPrivateAccess all" /etc/cups/cupsd.conf` = 0 ]
then
sed -i "s/JobPrivateAccess default/JobPrivateAccess all/g" /etc/cups/cupsd.conf
sed -i "s/JobPrivateValues default/JobPrivateValues none/g" /etc/cups/cupsd.conf
fi

#############################
#Create cupsd.conf
#############################
#[ -f /etc/cups/cupsd.conf ] && cp -f /etc/cups/cupsd.conf /etc/cups/cupsd.$$.conf
#cp -f /opt/karoshi/serversetup/modules/printserver/cupsd.conf /etc/cups/
#############################
#Copy in cups drivers
#############################
[ -d /usr/share/cups/drivers ] || mkdir /usr/share/cups/drivers

cp /opt/karoshi/serversetup/modules/printserver/cupsdrivers/* /usr/share/cups/drivers/
chmod 0644 -R /usr/share/cups/drivers
chmod u+X,g+X,o+X /usr/share/cups/drivers

cp -f /opt/karoshi/serversetup/modules/printserver/printer_info /opt/karoshi/"useful scripts"/

#############################
#Copy in testprint page
#############################
cp -f /opt/karoshi/serversetup/modules/printserver/testprint.ps /usr/share/cups/data/
#################################
#Make sure that cups and samba are running
#################################

CUPSSTATUS=`ps -e | grep -c $CUPSVER`

if [ $CUPSSTATUS = 0 ]
then
echo '<li>'$STARTCUPSMSG'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start 1>/dev/null
fi

SAMBASTATUS=`ps -e | grep -c $SMBVER`

if [ $SAMBASTATUS = 0 ]
then
echo '<li>'$STARTSAMBAMSG'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_start 1>/dev/null
fi

exit

