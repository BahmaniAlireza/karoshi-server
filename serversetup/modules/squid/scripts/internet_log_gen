#!/bin/bash
#Copyright (C) 2008 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk

#Exit if internet_log_gen is already running
LOG_GEN_COUNT=`ps -e | grep -c internet_log_ge`
if [ $LOG_GEN_COUNT -gt 2 ]
then
	echo Too many internet_log_processes
	exit
fi

FULL_LOGGING=yes
CHUNKSIZE=199
SLEEPTIME=180 #Time in seconds between each log generation cycle
CYCLECOUNT=1
MAXCYCLECOUNT=100 # Number of cycles to run before this script exits. Restarted by cron.
LAST_WEBSITE=NOTSET
LAST_USERNAME=NOTSET
LOGPATH=/var/log/e2guardian/access.log
LOGFILEDIR=/opt/karoshi/logs/internetlogs/
TODAY=`date +%d-%m-%Y`
ICON1="/images/submenus/internet/client_log.png"
ICON2="/images/submenus/internet/site_log.png"
ICON3="/images/submenus/internet/user_log.png"

function makefolders {
TODAYSLOGFOLDER=$LOGFILEDIR`date +%d-%m-%Y`
[ $TODAYSLOGFOLDER'null' = null ] && exit
if [ ! -f $LOGPATH ]
then
	echo No internet log exits
	exit
fi
#Make karoshi log folder
if [ ! -d $LOGFILEDIR ]
then
	mkdir -p $LOGFILEDIR
	chmod 0700 $LOGFILEDIR
fi
############################
#Make folder for internet logs
############################
if [ ! -d $TODAYSLOGFOLDER ]
then
	mkdir -p $TODAYSLOGFOLDER
	chmod 0700 $TODAYSLOGFOLDER
	mkdir $TODAYSLOGFOLDER/users
	chmod 0700 $TODAYSLOGFOLDER/users
	mkdir $TODAYSLOGFOLDER/machines
	chmod 0700 $TODAYSLOGFOLDER/machines
	mkdir $TODAYSLOGFOLDER/sites
	chmod 0700 $TODAYSLOGFOLDER/sites
	mkdir $TODAYSLOGFOLDER/sites/allowed
	chmod 0700 $TODAYSLOGFOLDER/sites/allowed
	mkdir $TODAYSLOGFOLDER/sites/denied
	chmod 0700 $TODAYSLOGFOLDER/sites/denied

	if [ $FULL_LOGGING = yes ]
	then
		mkdir $TODAYSLOGFOLDER/users_detailed
		chmod 0700 $TODAYSLOGFOLDER/users_detailed
		mkdir $TODAYSLOGFOLDER/machines_detailed
		chmod 0700 $TODAYSLOGFOLDER/machines_detailed
		mkdir $TODAYSLOGFOLDER/sites_detailed
		chmod 0700 $TODAYSLOGFOLDER/sites_detailed
		mkdir $TODAYSLOGFOLDER/sites_detailed/allowed
		chmod 0700 $TODAYSLOGFOLDER/sites_detailed/allowed
		mkdir $TODAYSLOGFOLDER/sites_detailed/denied
		chmod 0700 $TODAYSLOGFOLDER/sites_detailed/denied
	fi
fi
}

function get_log_length {
#Get log length
LOGLENGTH=`cat $LOGPATH | wc -l`
#LOGLENGTH=1000
if [ -f $TODAYSLOGFOLDER/startline ]
then
	source $TODAYSLOGFOLDER/startline
	[ -z "$COUNTER" ] && COUNTER=1
else
	COUNTER=1
fi
}

function log_gen {
STARTTIME=`date`
###########################
#Separate file into columns
###########################
[ -d /opt/karoshi/.tempdata ] || mkdir -p /opt/karoshi/.tempdata
chmod 0700 /opt/karoshi/.tempdata
#Access times
echo Making temporary log file from line $COUNTER to line $LOGLENGTH
sed -n $COUNTER,$LOGLENGTH'p' $LOGPATH | sed 's/ * / /g' > /opt/karoshi/.tempdata/internet_log.$$
PROCESSLENGTH=`cat /opt/karoshi/.tempdata/internet_log.$$ | wc -l`
echo Temporary file length $PROCESSLENGTH
PROCESSCOUNTER=1
cut -d' ' -f1 /opt/karoshi/.tempdata/internet_log.$$ > /opt/karoshi/.tempdata/internet_log_access_times.$$
#Client ip
cut -d' ' -f3 /opt/karoshi/.tempdata/internet_log.$$ > /opt/karoshi/.tempdata/internet_log_client_ip.$$
#Hit miss or denied
cut -d' ' -f4 /opt/karoshi/.tempdata/internet_log.$$ > /opt/karoshi/.tempdata/internet_log_status.$$
#Website address
cut -d' ' -f7 /opt/karoshi/.tempdata/internet_log.$$ > /opt/karoshi/.tempdata/internet_log_website.$$
#Website address truncated
cat /opt/karoshi/.tempdata/internet_log_website.$$ | cut -d'/' -f 3 | tr -cd 'A-Za-z 0-9\-._:\n' | sed 's/^www\.//g' | sed 's/^www.\.//g' > /opt/karoshi/.tempdata/internet_log_website2.$$
#Website domain name
cat /opt/karoshi/.tempdata/internet_log_website.$$ | cut -d'/' -f 1-3 > /opt/karoshi/.tempdata/internet_log_website3.$$
cut -d' ' -f8 /opt/karoshi/.tempdata/internet_log.$$ > /opt/karoshi/.tempdata/internet_log_username.$$

while [ $PROCESSCOUNTER -le $PROCESSLENGTH ]
do
	#Process lines in log file
	STARTLINE=$PROCESSCOUNTER
	let ENDLINE=$PROCESSCOUNTER+$CHUNKSIZE
	if [ $ENDLINE -le $PROCESSLENGTH ]
	then
		echo Processing $PROCESSCOUNTER to $ENDLINE of $PROCESSLENGTH at `date +%H-%M-%S`
	else
		echo Processing $PROCESSCOUNTER to $PROCESSLENGTH at `date +%H-%M-%S`
		let ENDLINE=$PROCESSLENGTH
	fi
	ACCESS_TIME_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_access_times.$$` )
	CLIENT_IP_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_client_ip.$$` )
	STATUS_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_status.$$` )
	[ $FULL_LOGGING = yes ] && WEBSITE_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_website.$$` )
	WEBSITE2_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_website2.$$` )
	WEBSITE3_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_website3.$$` )
	USERNAME_ARRAY=( `sed -n $PROCESSCOUNTER,$ENDLINE'p' /opt/karoshi/.tempdata/internet_log_username.$$` )
	DATA_COUNT=`echo ${#ACCESS_TIME_ARRAY[@]}`

	ARRAY_COUNTER=0
	while [ $ARRAY_COUNTER -lt $DATA_COUNT ]
	do
		WRITE_LOG=yes
		ACCESS_TIME_SECONDS=${ACCESS_TIME_ARRAY[$ARRAY_COUNTER]}
		ACCESS_TIME=`date +%T -d @$ACCESS_TIME_SECONDS`
		USERTCPIP=${CLIENT_IP_ARRAY[$ARRAY_COUNTER]}
		STATUS=${STATUS_ARRAY[$ARRAY_COUNTER]}
		WEBSITE2=${WEBSITE2_ARRAY[$ARRAY_COUNTER]}
		WEBSITE3=${WEBSITE3_ARRAY[$ARRAY_COUNTER]}
		USERNAME=${USERNAME_ARRAY[$ARRAY_COUNTER]%@*}
		#WEBSITE2=`echo $WEBSITE | cut -d'/' -f 3 | tr -cd 'A-Za-z 0-9\-._:\n' | sed 's/^www\.//g' | sed 's/^www.\.//g'`


		#Only use full name of website
		WEBSITE=$WEBSITE3
		if [ $LAST_WEBSITE = $WEBSITE ] && [ $LAST_USERNAME = $USERNAME ]
		then
			WRITE_LOG=no
		fi


		if [ ! -z "$USERNAME" ] && [ $WRITE_LOG = yes ]
		then
			if [ `echo $STATUS | grep -c DENIED` -gt 0 ]
			then
				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog1_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></button></form></td><td>'$USERTCPIP'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog2_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'$WEBSITE'" target="_blank">'$WEBSITE'</a></td></tr>' >> $TODAYSLOGFOLDER/users/$USERNAME

				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog3_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog4_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></button></form></td><td>'$USERTCPIP'</td></tr>' >> $TODAYSLOGFOLDER/sites/denied/$WEBSITE2

				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog5_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog6_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'$WEBSITE'" target="_blank">'$WEBSITE'</a></td></tr>' >> $TODAYSLOGFOLDER/machines/$USERTCPIP
				else
				echo '<tr><td><img class="images" alt="allowed" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog7_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></button></form></td><td>'$USERTCPIP'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog8_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'$WEBSITE'" target="_blank">'$WEBSITE'</a></td></tr>' >> $TODAYSLOGFOLDER/users/$USERNAME

				echo '<tr><td><img class="images" alt="allowed" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog9_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></button></form></td><td>'$USERTCPIP'</td></tr>' >> $TODAYSLOGFOLDER/sites/allowed/$WEBSITE2

				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog10_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog11_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'$WEBSITE'" target="_blank">'$WEBSITE'</a></td></tr>' >> $TODAYSLOGFOLDER/machines/$USERTCPIP
			fi
		fi

		if [ ! -z "$USERNAME" ] && [ $FULL_LOGGING = yes ]
		then
			if [ `echo $STATUS | grep -c DENIED` -gt 0 ]
			then
				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog12_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></button></form></td><td>'$USERTCPIP'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog13_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'" target="_blank">'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'</a></td></tr>' >> $TODAYSLOGFOLDER/users_detailed/$USERNAME

				#echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><a class="info" href="javascript:void(0)"><input name="_ACTION_'DATE_$TODAY'_USERNAME_'$USERNAME'_" type="image" class="images" src="'$ICON3'" value=""><span>View log - '$USERNAME'</span></a></form></td><td>'$USERNAME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><a class="info" href="javascript:void(0)"><input name="_ACTION_'DATE_$TODAY'_TCPIP_'$USERTCPIP'_" type="image" class="images" src="'$ICON1'" value=""><span>View log - '$USERTCPIP'</span></a></form></td><td>'$USERTCPIP'</td></tr>' >> $TODAYSLOGFOLDER/sites_detailed/denied/$WEBSITE2

				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_denied.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog14_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog15_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'" target="_blank">'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'</a></td></tr>' >> $TODAYSLOGFOLDER/machines_detailed/$USERTCPIP
				else
				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><button class="info" name="_ViewLog16_" value="_ACTION_DATE_'$TODAY'_TCPIP_'$USERTCPIP'_"><img src="'$ICON1'" alt="'$"View Log"'"><span>View log - '$USERTCPIP'</span></a></button></form></td><td>'$USERTCPIP'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog17_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></a></button></form></td><td><a href="'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'" target="_blank">'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'</a></td></tr>' >> $TODAYSLOGFOLDER/users_detailed/$USERNAME

				#echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><a class="info" href="javascript:void(0)"><input name="_ACTION_'DATE_$TODAY'_USERNAME_'$USERNAME'_" type="image" class="images" src="'$ICON3'" value=""><span>View log - '$USERNAME'</span></a></form></td><td>'$USERNAME'</td><td><form action="dg_view_computer_logs.cgi" method="post"><a class="info" href="javascript:void(0)"><input name="_ACTION_'DATE_$TODAY'_TCPIP_'$USERTCPIP'_" type="image" class="images" src="'$ICON1'" value=""><span>View log - '$USERTCPIP'</span></a></form></td><td>'$USERTCPIP'</td></tr>' >> $TODAYSLOGFOLDER/sites_detailed/allowed/$WEBSITE2

				echo '<tr><td><img class="images" alt="denied" src="/images/warnings/internet_allowed.png"></td><td>'$ACCESS_TIME'</td><td><form action="dg_view_user_logs.cgi" method="post"><button class="info" name="_ViewLog18_" value="_ACTION_DATE_'$TODAY'_USERNAME_'$USERNAME'_"><img src="'$ICON3'" alt="'$"View Log"'"><span>View log - '$USERNAME'</span></button></form></td><td>'$USERNAME'</td><td><form action="dg_view_site_logs2.cgi" method="post"><button class="info" name="_ViewLog19_" value="_ACTION_LOGDATE_'$TODAY'_WEBSITE_'$WEBSITE2'_"><img src="'$ICON2'" alt="'$"View Log"'"><span>View log - '$WEBSITE2'</span></button></form></td><td><a href="'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'" target="_blank">'${WEBSITE_ARRAY[$ARRAY_COUNTER]}'</a></td></tr>' >> $TODAYSLOGFOLDER/machines_detailed/$USERTCPIP
			fi
		fi
		LAST_WEBSITE=$WEBSITE
		LAST_USERNAME=$USERNAME
		let ARRAY_COUNTER=$ARRAY_COUNTER+1
	done
	let PROCESSCOUNTER=$PROCESSCOUNTER+$CHUNKSIZE+1
done
let COUNTER=$COUNTER+$PROCESSLENGTH
echo COUNTER=$COUNTER > $TODAYSLOGFOLDER/startline
echo Next start line is $COUNTER
echo internet_log_gen session started at: $STARTTIME
echo ended at: `date`
}

function del_temp_files {
########################
#Delete temporary files
########################
rm -f /opt/karoshi/.tempdata/internet_log.$$
rm -f /opt/karoshi/.tempdata/internet_log_access_times.$$
rm -f /opt/karoshi/.tempdata/internet_log_client_ip.$$
rm -f /opt/karoshi/.tempdata/internet_log_status.$$
rm -f /opt/karoshi/.tempdata/internet_log_website.$$
rm -f /opt/karoshi/.tempdata/internet_log_website2.$$
rm -f /opt/karoshi/.tempdata/internet_log_website3.$$
rm -f /opt/karoshi/.tempdata/internet_log_username.$$
}
MAKELOGS=yes
while [ $MAKELOGS = yes ]
do
	echo Log gen cycle number $CYCLECOUNT
	makefolders
	get_log_length
	echo Current start line $COUNTER
	echo Current log length $LOGLENGTH
	if [ $COUNTER -lt $LOGLENGTH ]
	then
		echo Processing log from $COUNTER to $LOGLENGTH
		log_gen
		del_temp_files
	else
		echo No extra internet logs to process.
	fi
	let CYCLECOUNT=$CYCLECOUNT+1
	if [ $CYCLECOUNT -ge $MAXCYCLECOUNT ]
	then
		echo Max cycles reached. Exiting now...
		exit
	fi
	echo -e "\nsleeping for $SLEEPTIME seconds.\n"
	sleep $SLEEPTIME
done
exit
