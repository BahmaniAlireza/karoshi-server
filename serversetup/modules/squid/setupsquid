#!/bin/bash
#setupsquid
#Copyright (C) 2004  Paul Sharrad
#
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contact at 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk

########################
#Get variables
########################
LOG_DATE=`date +%F`
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: setupfileserver - incorrect number of arguments."<br>"
exit 101
fi
read -t 3 DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-/'`

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
PDCSERVER=`echo "$DATA" | cut -s -d: -f4`
PDCIP=`echo "$DATA" | cut -s -d: -f5`

source /opt/karoshi/serversetup/variables/language
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/squid/setupsquid
source /opt/karoshi/serversetup/language/$LANGCHOICE/softwareinstall
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/extra_server/software

echo '<b>'$TITLE - $HOSTNAME'</b><br><br>'

if [ -z "$REMOTE_USER" ]
then
	echo `date`: setupsquid - Blank remote user."<br>"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: setupsquid - Blank remote tcpip address."<br>"
	exit 101
fi

if [ -z "$PDCSERVER" ]
then
	echo `date`: setupsquid - Blank PDC."<br>"
	exit 101
fi

if [ $PDCSERVER != `hostname-fqdn` ]
then
	if [ -z "$PDCIP" ]
	then
		echo `date`: setupsquid - Blank TCPIP."<br>"
		exit 101
	fi
fi

#############################
#Get squid version
#############################

SQUIDVER=squid
if [ -d /etc/squid3 ]
then
SQUIDVER=squid3
[ ! -e /etc/squid ] && ln -s /etc/squid3 /etc/squid
fi

#############################
#Ensure that squid and e2guardian are running on boot
#############################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/squid
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/e2guardian
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/apache
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/squiddebproxy

mkdir /home/multimedia 2>/dev/null
mkdir /home/internetdata 2>/dev/null
mkdir /home/internetdata/internetlogs 2>/dev/null
chown -R root.staff /home/internetdata 2>/dev/null
chown -R root.itadmin /home/multimedia 2>/dev/null
chmod 0750 -R /home/internetdata 2>/dev/null
chmod 0775 /home/multimedia 2>/dev/null

#########################
#Add log entry
#########################
echo '##############'setupsquid'##############' >> /opt/karoshi/serversetup/install_log
date >> /opt/karoshi/serversetup/install_log
touch /opt/karoshi/serversetup/setuplog
if [ `grep -c "$TITLE" /opt/karoshi/serversetup/setuplog` = 0 ]
then
	echo setupsquidinternetproxyserver:$TITLE:/opt/karoshi/serversetup/hal/scripts/setupsquidinternetproxyserver >> /opt/karoshi/serversetup/setuplog
	chmod 0600 /opt/karoshi/serversetup/setuplog
fi

#########################
#Stopping Squid and Apache if they are running
#########################

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/e2guardian_status 1>/dev/null
[ $? = 0 ] && /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/e2guardian_stop 1>/dev/null

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_status 1>/dev/null
[ $? = 0 ] && /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/apache_stop 1>/dev/null

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_status 1>/dev/null
[ $? = 0 ] && /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_stop 1>/dev/null

#Configure squid to use a different krb5
[ -d /etc/default ] && echo export KRB5_KTNAME=/etc/keytabs/squid.keytab > /etc/default/squid3

#Configure e2guardian to be able to have more open files

if [ `grep -c e2guardian /etc/security/limits.conf` = 0 ]
then
	echo "e2guardian	soft	nofile		16384" >> /etc/security/limits.con
	echo "e2guardian	hard	nofile		32768" >> /etc/security/limits.con
fi

#########################
#Copying in files
#########################

cp -f -R  /opt/karoshi/serversetup/modules/squid/squidfiles/squid/* /etc/squid

[ -f /var/www/html/index.html ] && mv /var/www/html/index.html /var/www/html/index.html.$$
cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/webwarning.htm /var/www/html/index.html

if [ $SQUIDVER = squid3 ]
then

if [ -f /usr/lib/squid3/basic_msnt_auth ]
then
	cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/squid3/karoshi10-squid3.conf /etc/squid/squid.conf
else
	cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/squid3/squid.conf /etc/squid/
fi

if [ ! -f /etc/squid/location_tcpip.list ]
then
	echo 1.1.1.1 > /etc/squid/location_tcpip.list
fi

if [ ! -f /etc/squid/location_white.list ]
then
	echo 4.4.4.4 > /etc/squid/location_white.list
fi

if [ ! -f /etc/e2guardian/exceptioniplist ]
then
	echo 4.4.4.4 > /etc/e2guardian/exceptioniplist
fi

if [ `grep -v ^# /etc/e2guardian/exceptioniplist | sed "/^$/d" | wc -l` = 0 ]
then
	echo 4.4.4.4 > /etc/e2guardian/exceptioniplist
fi

if [ ! -f /etc/squid/location_banned_sites.list ]
then
	echo -e ".youtube.com
.mtv.co.uk
.mtv.com
.last.fm
.dailymotion.com
.grooveshark.com
.rautemusik.fm
.charthits.fm
.vidstatsx.com
.sharethis.com" > /etc/squid/location_banned_sites.list
fi

	cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/errors/en/* /usr/share/squid3/errors/en/
	cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/karoshi_kerb_auth /usr/lib/squid3
	chmod 755 /usr/lib/squid3/karoshi_kerb_auth
else
	cp -f /opt/karoshi/serversetup/modules/squid/squidfiles/errors/en/* /usr/share/squid/errors/en/
fi

#Create msntauth.conf
source /opt/karoshi/server_network/domain_information/domain_name
echo server' '$PDCSERVER'	'$PDCSERVER'	'$REALM > /etc/squid/msntauth.conf

#########################
#Modify squid.conf with correct information for the pdc
#########################

sed -i 's/SERVERNAME/'$HOSTNAME'/g' /etc/squid/squid.conf
sed -i 's/REALM/'$REALM'/g' /etc/squid/squid.conf

#########################
#Configure effective user for squid to run as
#########################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/extra_server/scripts/squidconfig
#########################
#Copy in e2guardian files
#########################

cp -f -R /opt/karoshi/serversetup/modules/squid/e2guardian /etc
sed -i 's/YOURSERVER.YOURDOMAIN/'$HOSTNAME.$REALM'/g' /etc/e2guardian/e2guardian.conf
cd /etc/e2guardian/

#Install blacklists
tar -xvzf /opt/karoshi/serversetup/modules/squid/shallalist.tar.gz 1>/dev/null
cp -f -R /etc/e2guardian/BL/* /etc/e2guardian/lists/blacklists/
rm -f -R /etc/e2guardian/BL

#########################
#Scheduling loggging
#########################
cp -f /opt/karoshi/serversetup/modules/squid/scripts/internet_log_gen /opt/karoshi/"useful scripts"/
cp -f /opt/karoshi/serversetup/modules/squid/scripts/archive_internet_logs /opt/karoshi/"useful scripts"/
cp -f /opt/karoshi/serversetup/modules/squid/scripts/dgupdatefilterlist /opt/karoshi/"useful scripts"/
cp -f /opt/karoshi/serversetup/modules/squid/scripts/internet_log_compress /opt/karoshi/"useful scripts"/
cp -f /opt/karoshi/serversetup/modules/squid/scripts/activate_filter_changes /opt/karoshi/"useful scripts"/
#Modify dgupdatefilterlist with pdc ip
sed -i 's/127.0.0.1/'$PDCIP'/g' /opt/karoshi/"useful scripts"/dgupdatefilterlist

#############################
#Get staff list for filter 3
#############################
/opt/karoshi/"useful scripts"/dgupdatefilterlist

#Start squid and e2guardian.
echo '<li>'$STARTSQUIDMSG'</li><br>'
/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/squid_start 1>/dev/null
echo '<li>'$STARTDGMSG'</li><br>'
/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/e2guardian_start 1>/dev/null
echo '<li>'$STARTAPACHEMSG'</li><br>'
/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/apache_start 1>/dev/null

[ -d /opt/karoshi/cronjobs/jobs ] || mkdir -p /opt/karoshi/cronjobs/jobs

echo 58 23 '*' '*' '*' /opt/karoshi/'"'useful scripts'"'/archive_internet_logs > /opt/karoshi/cronjobs/jobs/archive_internet_logs.cron
echo 50 23 '*' '*' '*' /opt/karoshi/'"'useful scripts'"'/dgupdatefilterlist > /opt/karoshi/cronjobs/jobs/dgupdatefilterlist.cron
echo 55 23 '*' '*' '*' /etc/init.d/e2guardian restart > /opt/karoshi/cronjobs/jobs/restart_e2guardian.cron
echo '*'/5 '*' '*' '*' '*' "nice -n 20" /opt/karoshi/'"'useful scripts'"'/internet_log_gen > /opt/karoshi/cronjobs/jobs/internet_log_gen.cron
echo 0 22 '*' '*' '*' /opt/karoshi/'"'useful scripts'"'/activate_filter_changes > /opt/karoshi/cronjobs/jobs/activate_filter_changes.cron
echo 0 5 '*' '*' '*' /opt/karoshi/'"'useful scripts'"'/internet_log_compress > /opt/karoshi/cronjobs/jobs/internet_log_compress.cron
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs 1>/dev/null


############################
#Check that Squid and e2guardian are running
############################

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_status 1>/dev/null
[ $? != 0 ] && /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_start 1>/dev/null
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/e2guardian_status 1>/dev/null
[ $? != 0 ] && /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/e2guardian_start 1>/dev/null


#Setup squid-deb-proxy
echo www.remastersys.com > /etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-default
echo ppa.launchpad.net >> /etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-default
echo inverse.ca >> /etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-default
echo download.videolan.org >> /etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-default

echo blacklisted-mirror.com > /etc/squid-deb-proxy/pkg-blacklist.d/10-default

cp -f /opt/karoshi/serversetup/distro/ubuntu/scripts/initdscripts/squiddebproxy /etc/init.d/

echo '<li>'$STARTSQUIDDPMSG'</li><br>'
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squiddebproxy_stop 1>/dev/null
sleep 1
[ -L /etc/init.d/squid-deb-proxy ] && rm -f /etc/init.d/squid-deb-proxy
[ `ls /etc/init/squid* 2>/dev/null | wc -l` -gt 0 ] && rm -f /etc/init/squid*

/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squiddebproxy_start 1>/dev/null
###########################
#Open shorewall ports for proxy access
###########################

MODCHECK=`grep -c -w squid_proxy_rule /etc/shorewall/rules`
RESTART_SHOREWALL=no
if [ $MODCHECK = 0 ]
then
RESTART_SHOREWALL=yes
echo '<li>'$SHOREWALLMSG - tcp 3128,3142 udp 3128,8000'</li><br>'
LINENUM=`grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1`
sed -i $LINENUM'c'\ACCEPT'	'net'	'fw'	'tcp'	'3128,8000'	'-'#'squid_proxy_rule /etc/shorewall/rules
echo ACCEPT'	'net'	'fw'	'udp'	'3128,8000'	'-'#'squid_proxy_rule >> /etc/shorewall/rules
echo '#'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
fi

MODCHECK=`grep -c -w apache_web_server /etc/shorewall/rules`

if [ $MODCHECK = 0 ]
then
RESTART_SHOREWALL=yes
echo '<li>'$SHOREWALLMSG - tcp 80 udp 443'</li><br>'
LINENUM=`grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1`
sed -i $LINENUM'c'\ACCEPT'	'net'	'fw'	'tcp'	'80,443'	'-'#'apache_web_server /etc/shorewall/rules
echo '#'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
fi

######################
#Restart shorewall
######################
if [ $RESTART_SHOREWALL = yes ]
then
	echo '<li>'$RESTARTSWMSG'</li><br>'
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop 1>/dev/null
	sleep 1
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start 1>/dev/null
fi

exit

