#!/bin/bash
#Copyright (C) 2016 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk

source /opt/karoshi/serversetup/variables/distro

#Check if bind is installed
which named 1>/dev/null
if [ $? != 0 ]
then
	echo Updating repostitories
	apt-get update
	#Install bind
	echo Installing Bind
	apt-get install -y bind9
fi

#Bail out if bind is not installed
which named 1>/dev/null
if [ $? != 0 ]
then
	echo Bind is not installed...exiting now.
fi

#Set bind to start on boot
update-rc.d bind9 defaults

#hwclock --systohc

#Get ubuntu version
UBUNTUVER=xenial
if [ $(lsb_release -a 2>/dev/null | grep -c trusty) -gt 0 ]
then
	UBUNTUVER=trusty
fi

if [ $(lsb_release -a 2>/dev/null | grep -c precise) -gt 0 ]
then
	UBUNTUVER=precise
fi

#Create /etc/bind/samba_dns.conf to declare ad-zones
echo 'dlz "AD DNS Zone" {
    # For BIND 9.8
    # database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9.so";

    # For BIND 9.9
    #database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9_9.so";

    # For BIND 9.10
    #database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9_10.so";
    
    # For BIND 9.11
    # database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9_11.so";
' > /etc/bind/samba_dns.conf

#Add in the correct line for the version of Bind installed
if [ $UBUNTUVER = precise ]
then
	echo '    #Added by Karoshi for BIND 9.8
    database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9.so";' >> /etc/bind/samba_dns.conf
fi

if [ $UBUNTUVER = trusty ]
then
	echo '    #Added by Karoshi for BIND 9.9
    database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9_9.so";' >> /etc/bind/samba_dns.conf
fi

if [ $UBUNTUVER = xenial ]
then
	echo '    #Added by Karoshi for BIND 9.10
    database "dlopen /usr/lib/x86_64-linux-gnu/samba/bind9/dlz_bind9_10.so";' >> /etc/bind/samba_dns.conf
fi

echo '};' >> /etc/bind/samba_dns.conf

#Modify /etc/bind/named.conf to include samba_dns.conf
if [ $(grep -c "/etc/bind/samba_dns.conf" /etc/bind/named.conf) = 0 ]
then
	echo 'include "/etc/bind/samba_dns.conf";' >> /etc/bind/named.conf
fi

#Get dns_forwarder from smb.conf
DNS_FORWARDER=$(grep forwarder /etc/samba/smb.conf | cut -d"=" -f2 | tr -cd 0-9.)

#Create a folder for bind to log to
mkdir /var/log/named
chown bind /var/log/named

#Create /etc/bind/named.conf.options with dns forwarder and dns keytab
echo 'logging {
    channel default_file {
        file "/var/log/named/default.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel general_file {
        file "/var/log/named/general.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel database_file {
        file "/var/log/named/database.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel security_file {
        file "/var/log/named/security.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel config_file {
        file "/var/log/named/config.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel resolver_file {
        file "/var/log/named/resolver.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel xfer-in_file {
        file "/var/log/named/xfer-in.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel xfer-out_file {
        file "/var/log/named/xfer-out.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel notify_file {
        file "/var/log/named/notify.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel client_file {
        file "/var/log/named/client.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel unmatched_file {
        file "/var/log/named/unmatched.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel queries_file {
        file "/var/log/named/queries.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel network_file {
        file "/var/log/named/network.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel update_file {
        file "/var/log/named/update.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel dispatch_file {
        file "/var/log/named/dispatch.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel dnssec_file {
        file "/var/log/named/dnssec.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel lame-servers_file {
        file "/var/log/named/lame-servers.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };

    //Uncomment and restart bind9 to log any of the following sections.
    //category default { default_file; };
    //category general { general_file; };
    //category database { database_file; };
    //category security { security_file; };
    //category config { config_file; };
    //category resolver { resolver_file; };
    //category xfer-in { xfer-in_file; };
    //category xfer-out { xfer-out_file; };
    //category notify { notify_file; };
    //category client { client_file; };
    //category unmatched { unmatched_file; };
    //category queries { queries_file; };
    //category network { network_file; };
    //category update { update_file; };
    //category dispatch { dispatch_file; };
    //category dnssec { dnssec_file; };
    //category lame-servers { lame-servers_file; };
};

options {
	directory "/var/cache/bind";

	// If there is a firewall between you and nameservers you want
	// to talk to, you may need to fix the firewall to allow multiple
	// ports to talk.  See http://www.kb.cert.org/vuls/id/800113

	// If your ISP provided one or more IP addresses for stable 
	// nameservers, you probably want to use them as forwarders.  
	// Uncomment the following block, and insert the addresses replacing 
	// the all-0 placeholder.

	forwarders {
	 	'$DNS_FORWARDER';
	 };

	//========================================================================
	// If BIND logs error messages about the root key being expired,
	// you will need to update your keys.  See https://www.isc.org/bind-keys
	//========================================================================
	dnssec-validation yes;


	tkey-gssapi-keytab "/var/lib/samba/private/dns.keytab";

	auth-nxdomain no;    # conform to RFC1035
	listen-on-v6 { any; };
};' > /etc/bind/named.conf.options

#Modify apparmor to allow bind to access samba
echo '# Samba4 DLZ and Active Directory Zones (default source installation)
/usr/lib/x86_64-linux-gnu/samba/bind9/** rm,
/var/lib/samba/private/dns.keytab r,
/var/lib/samba/private/named.conf r,
/var/lib/samba/private/dns/** rwk,' > /etc/apparmor.d/local/usr.sbin.named

#Modify /etc/apparmor.d/usr.sbin.named to include /etc/apparmor.d/local/usr.sbin.named
sed -i 's%#include <local/usr.sbin.named>%include <local/usr.sbin.named>%g' /etc/apparmor.d/usr.sbin.named

#Reload apparmor
service apparmor restart

#Stop samba4
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_stop 1>/dev/null 2>/dev/null

#Modify smb.conf to disable internal dns
if [ $(grep -c "server services = -dns" /etc/samba/smb.conf) = 0 ]
then
	sed -i '/ldap server require strong auth/a \\tserver services = -dns' /etc/samba/smb.conf
fi

#Modify smb.conf to remove dns round robin parameter which is not a valid parameter in unpatched samba versions
if [ $(grep -c "dns round robin = yes" /etc/samba/smb.conf) = 0 ]
then
	sed -i '/dns round robin = yes/d' /etc/samba/smb.conf
fi

#Convert samba4 to use bind
samba_upgradedns --dns-backend=BIND9_DLZ

#Set permissions on dns.keytab so that bind can read it.
chown root:bind /var/lib/samba/private/dns.keytab
chmod 640 /var/lib/samba/private/dns.keytab

#Restart bind
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/bind_stop 1>/dev/null 2>/dev/null
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/bind_start 1>/dev/null 2>/dev/null
#Start samba4
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/samba_start 1>/dev/null 2>/dev/null

