#!/bin/bash

#How many days beforehand show we alert if a password needs changing
DAYS_BEFORE=5

(( DAYS_BEFORE2 = "$DAYS_BEFORE" * 24 * 60 * 60 ))

#Get ldap password
LDAPPASS=$(sed -n 1,1p /etc/ldap.secret)
source /opt/karoshi/server_network/domain_information/domain_name

#Get maximum password age
MAX_PASS_AGE=$(samba-tool domain passwordsettings show | grep -w "Maximum password age" | tr -cd 0-9)

#Convert maximum password age into seconds as we are using epoch time
(( MAX_PASS_AGE = "$MAX_PASS_AGE" * 24 * 60 * 60 ))

#Get time now
NOW=$(date +%s)

for USERNAME in $(getent passwd | grep /home/users/ | cut -d: -f1 )
do
	#Get ldap information for the user
	LDAPDATA=$(ldapsearch -x -w "$LDAPPASS" -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn="$USERNAME" | sed "s/[\]/BACKSLASH/g")

	#Get to see if this account has password expiry enabled
	PASSWORD_EXPIRY=$(echo -e "$LDAPDATA" | grep ^userAccountControl: | cut -d: -f2 | tr -cd 0-9)

	#Dont check password expiry for 66048 66050 66080 66082
	if [ "$PASSWORD_EXPIRY" != 66048 ] && [ "$PASSWORD_EXPIRY" != 66050 ] && [ "$PASSWORD_EXPIRY" != 66080 ] && [ "$PASSWORD_EXPIRY" != 66082 ]
	then
		#Get the pwdLastSet: information from ldap for the user
		SMBPWDLASTSET=$(echo -e "$LDAPDATA" | grep ^pwdLastSet: | cut -d: -f2 | tr -cd 0-9)
		
		#Convert time from number of 100 nanosecond intervals since 1 January 1601 to epoch time
		SMBPWDLASTSET_EPOCH=$(((SMBPWDLASTSET/10000000)-11644473600))
		#Check to see if the password is due to be changed
		(( TIME_PASS_MUST_CHANGE = "$SMBPWDLASTSET_EPOCH" + "$MAX_PASS_AGE" ))
		
		(( GRACETIME = "$TIME_PASS_MUST_CHANGE" - "$DAYS_BEFORE2 " ))
		if [ "$GRACETIME" -lt "$NOW" ]
		then
			#Convert the password must change time from epoch to human readable
			TIME_PASS_MUST_CHANGE2=$(date -d @"$TIME_PASS_MUST_CHANGE")
			echo "$USERNAME": password change required by: "$TIME_PASS_MUST_CHANGE2"
		fi
	fi
done
exit
