#!/bin/bash
#Copyright (C) 2014 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/acceptable_use_cgi
then
echo `date`: acceptable_use - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/acceptable_use_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/acceptable_use.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $acceptable_use_cgi'check' ]
then
echo `date`: acceptable_use - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: acceptable_use - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-,'`
if [ $DATA'null' = null ]
then
echo `date`: acceptable_use - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
GRACETIME=`echo "$DATA" | cut -s -d: -f5`
USERNAMES=`echo "$DATA" | cut -s -d: -f6`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: acceptable_use - Not called by acceptable_use.cgi or bulk_user_creation_create.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$REMOTE_USER" ]
then
echo `date`: acceptable_use - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
echo `date`: acceptable_use - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$ACTION" ]
then
echo `date`: acceptable_use - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $ACTION = disableac ]
then
echo `date`: acceptable_use - disabling acceptable use by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
touch /opt/karoshi/acceptable_use_authorisations/grace_time_disabled
fi

if [ $ACTION = enableac ]
then
echo `date`: acceptable_use - enabling acceptable use by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
[ -f /opt/karoshi/acceptable_use_authorisations/grace_time_disabled ] && rm -f /opt/karoshi/acceptable_use_authorisations/grace_time_disabled
fi

if [ $ACTION = setgracetime ]
then
echo `date`: acceptable_use - setting gracetime to $GRACETIME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ ! -d /opt/karoshi/acceptable_use_authorisations/pending ]
then
mkdir -p /opt/karoshi/acceptable_use_authorisations/pending
chmod 0750 -R /opt/karoshi/acceptable_use_authorisations/
chown -R root.apache_karoshi /opt/karoshi/acceptable_use_authorisations/
fi
echo $GRACETIME > /opt/karoshi/acceptable_use_authorisations/grace_time
fi

if [ $ACTION = approve ]
then
USERNAMES=`echo $USERNAMES | sed 's/,/ /g'`
if [ ! -f /opt/karoshi/acceptable_use_authorisations/approved_users ]
then
touch /opt/karoshi/acceptable_use_authorisations/approved_users
chmod 0640 /opt/karoshi/acceptable_use_authorisations/approved_users
chown root.apache_karoshi /opt/karoshi/acceptable_use_authorisations/approved_users
fi
for APROVEUSER in $USERNAMES
do
echo `date`: acceptable_use - approving $APROVEUSER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#Get creation data
PENDING_USER_DATA=`sed -n 1,1p /opt/karoshi/acceptable_use_authorisations/pending/$APROVEUSER`
USER_CREATOR=`echo $PENDING_USER_DATA | cut -d, -f2`
CREATION_DATE=`echo $PENDING_USER_DATA | cut -d, -f3`

[ -f /opt/karoshi/acceptable_use_authorisations/pending/$APROVEUSER ] && rm -f /opt/karoshi/acceptable_use_authorisations/pending/$APROVEUSER
smbpasswd -e $APROVEUSER 1>/dev/null

#Get the primary group of the user

PRI_GROUP=`id -g -n $APROVEUSER`

#Add to the approved list
if [ `grep -c -w $APROVEUSER /opt/karoshi/acceptable_use_authorisations/approved_users` = 0 ]
then
echo $APROVEUSER,$CREATION_DATE,$PRI_GROUP,$USER_CREATOR,$REMOTE_USER,`date +%d-%m-%Y` >> /opt/karoshi/acceptable_use_authorisations/approved_users
fi
done

#Check warning messages
if [ `ls -1 /opt/karoshi/acceptable_use_authorisations/pending | wc -l` -lt 1 ]
then
/opt/karoshi/serversetup/web_controls/scripts/web_management_warn delete acceptable_use_authorisations
fi

fi
exit
