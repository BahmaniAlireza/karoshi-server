#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/activate_internet_changes_cgi
then
echo `date`: activate_internet_changes - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/activate_internet_changes_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/activate_internet_changes.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $activate_internet_changes_cgi'check' ]
then
echo `date`: activate_internet_changes - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/activate_internet_changes_cgi
then
echo `date`: activate_internet_changes - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/activate_internet_changes_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/activate_internet_changes.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2 != $activate_internet_changes_cgi ]
then
echo `date`: activate_internet_changes - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: activate_internet_changes - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+'`
if [ $DATA'null' = null ]
then
echo `date`: activate_internet_changes - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: activate_internet_changes - Not called by activate_internet_changes.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: activate_internet_changes - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: activate_internet_changes - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: activate_internet_changes - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
echo `date`: activate_internet_changes - by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#################################
#Activate Internet Changes
#################################
#Get squid server name
[ ! -f /opt/karoshi/server_network/proxyserver ] && exit 101
PROXYSERVER=`sed -n 1,1p /opt/karoshi/server_network/proxyserver`

if [ $PROXYSERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $PROXYSERVER '
#Regenerate staff rules
/opt/karoshi/"useful scripts"/dgupdatefilterlist
#Reload squid
echo Reloading Squid"<br>"
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_reload 2> /dev/null
echo "<br>"
#Restart dansguardian
echo Restarting dansguardian"<br>"
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/dansguardian_stop 2> /dev/null
sleep 0.5
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/dansguardian_start 2> /dev/null
echo "<br>"
'
else
#Regenerate staff rules
/opt/karoshi/"useful scripts"/dgupdatefilterlist
#Reload squid
echo Reloading Squid"<br>"
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/squid_reload
echo '<br>'
#Restart dansguardian
echo Restarting dansguardian"<br>"
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/dansguardian_stop
sleep 0.5
echo "<br>"
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/dansguardian_start
echo '<br>'
fi
exit
