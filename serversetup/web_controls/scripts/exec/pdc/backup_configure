#!/bin/bash
#Copyright (C) 2015 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`


########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/backup_configure_cgi
then
	echo `date`: backup_configure - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/backup_configure_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/backup_configure.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $backup_configure_cgi'check' ]
then
	echo `date`: backup_configure - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: backup_configure - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+'`
if [ -z "$DATA" ]
then
	echo `date`: backup_configure - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
ACTION=`echo "$DATA" | cut -s -d: -f5`
BACKUPNAME=`echo "$DATA" | cut -s -d: -f6`
BACKUPFOLDER=`echo "$DATA" | cut -s -d: -f7 | sed 's/%2F/\//g'`
DURATION=`echo "$DATA" | cut -s -d: -f8 | tr -cd '0-9'`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: backup_configure - Not called by backup_configure.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: backup_configure - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: backup_configure - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo `date`: backup_configure - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo `date`: backup_configure - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ "$ACTION" = delete ]
then
	if [ -z "$BACKUPNAME" ]
	then
		echo `date`: backup_configure - Blank backupname by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: backup_configure - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

LOG_DATE=`echo $YEAR-$MONTH-$DAY`
############################
#Language
############################

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice
TEXTDOMAIN=karoshi-server

ICON1=/images/submenus/file/edit.png
ICON2=/images/submenus/file/delete.png

if [ "$ACTION" = reallyedit ]
then
	#Delete any existing data for this entry
	if [ `grep -c ,"$BACKUPNAME", /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders` != 0 ]
	then
		sed -i '/,'$BACKUPNAME',/d' /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders
	fi
	#Append backup data to the file
	echo "$BACKUPFOLDER","$BACKUPNAME","$DURATION" >> /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders
	#Sort the file
	sort --field-separator=',' -k 2 /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders > /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders.$$
	if [ -f /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders.$$ ]
	then
		rm /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders
		mv /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders.$$ /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders
	fi
	ACTION=view
fi

if [ "$ACTION" = add ] || [ "$ACTION" = edit ]
then
	if [ "$ACTION" = edit ]
	then 
		#Show details for the backup entry
		BACKUPDATA=`grep ",$BACKUPNAME," /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders`
		BACKUPFOLDER=`echo "$BACKUPDATA" | cut -d, -f1`
		BACKUPNAME=`echo "$BACKUPDATA" | cut -d, -f2`
		DURATION=`echo "$BACKUPDATA" | cut -d, -f3`
	fi

	echo '<form action="/cgi-bin/admin/backup_configure.cgi" name="testform" method="post">
	<input type="hidden" name="____SERVERNAME____" value="'$SERVERNAME'">'
	if [ "$ACTION" = edit ]
	then
		echo '<input type="hidden" name="____BACKUPNAME____" value="'$BACKUPNAME'">'
	fi
	echo '<input type="hidden" name="____ACTION____" value="reallyedit">
	<table class="standard" style="text-align: left;" border="0" cellpadding="2" cellspacing="2">
    	<tbody><tr><td style="width: 180px;"><b>'$"Backup Name"'</b></td><td>'

	if [ "$ACTION" = edit ]
	then
		echo "$BACKUPNAME"
	else
		echo '<input tabindex= "1" name="____BACKUPNAME____" style="width: 200px;" size="20" type="text"></td><td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php"><img class="images" alt="" src="/images/help/info.png"><span>'$"The name for this backup folder."'</span></a></td>'
	fi
	echo '</td></tr>
	<tr><td><b>'$"Backup Folder"'</b></td><td><input tabindex= "1" value="'$BACKUPFOLDER'" name="____BACKUPFOLDER____" style="width: 200px;" size="20" type="text"></td><td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php"><img class="images" alt="" src="/images/help/info.png"><span>'$"The full path to the folder that you want to backup."'</span></a></td></tr>
	<tr><td><b>'$"Days Tracked"'</b></td><td><input tabindex= "2" value="'$DURATION'" name="____DURATION____" style="width: 50px;" size="5" type="text"></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php"><img class="images" alt="" src="/images/help/info.png"><span>'$"The number of days that changes to files are kept for before deleting the oldest version."'</span></a></td></tr>
	</tbody></table><br>
	<input value="'$"Submit"'" class="button" type="submit"> <input value="'$"Reset"'" class="button" type="reset">
	</form>'
fi

if [ "$ACTION" = delete ]
then
	echo '<form action="/cgi-bin/admin/backup_configure.cgi" name="testform" method="post"><input type="hidden" name="____ACTION____" value="reallydelete"><input type="hidden" name="____BACKUPNAME____" value="'$BACKUPNAME'">
	<input type="hidden" name="____SERVERNAME____" value="'$SERVERNAME'">
	'$BACKUPNAME' - '$"Are you sure that you want to delete this backup?"'<br><br>
	<input value="'$"Submit"'" class="button" type="submit"></form>'
fi

if [ "$ACTION" = reallydelete ]
then
	#Delete the matching line from backup_folders
	sed -i '/,'$BACKUPNAME',/d' /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders
	ACTION=view
fi

if [ "$ACTION" = view ]
then
	echo '<form action="/cgi-bin/admin/backup_configure.cgi" name="testform" method="post"><table class="standard" style="text-align: left;" border="0" cellpadding="2" cellspacing="2">
    	<tbody><tr><td style="width: 120px;"><b>'$"Backup Name"'</b></td><td style="width: 250px;"><b>'$"Backup Folder"'</b></td><td><b>'$"Days Tracked"'</b></td></tr>'
	for BACKUPDATA in `cat /opt/karoshi/server_network/backup_servers/backup_settings/"$SERVERNAME"/backup_folders | sed 's/ /REPLACESPACE/g'`
	do
		BACKUPFOLDER=`echo "$BACKUPDATA" | cut -d, -f1 | sed 's/REPLACESPACE/ /g'`
		BACKUPNAME=`echo "$BACKUPDATA" | cut -d, -f2 | sed 's/REPLACESPACE/ /g'`
		DURATION=`echo "$BACKUPDATA" | cut -d, -f3 | sed 's/REPLACESPACE/ /g'`
		echo '<tr><td>'$BACKUPNAME'</td><td>'$BACKUPFOLDER'</td><td>'$DURATION'</td>
		<td><a class="info" href="javascript:void(0)"><input name="____ACTION____edit____SERVERNAME____'$SERVERNAME'____BACKUPNAME____'$BACKUPNAME'____" type="image" class="images" src="'$ICON1'" value=""><span>'$"Edit"'<br>'$BACKUPNAME'</span></a></td>
		<td><a class="info" href="javascript:void(0)"><input name="____ACTION____delete____SERVERNAME____'$SERVERNAME'____BACKUPNAME____'$BACKUPNAME'____" type="image" class="images" src="'$ICON2'" value=""><span>'$"Delete Backup"'<br>'$BACKUPNAME'</span></a></td></tr>'
	done
	echo '</tbody></table></form>'
fi




