#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/backup_now_cgi
then
echo `date`: backup_now - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/backup_now_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/backup_now.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $backup_now_cgi'check' ]
then
echo `date`: backup_now - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: backup_now - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+'`
if [ $DATA'null' = null ]
then
echo `date`: backup_now - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
KAROSHI_SERVER=`echo "$DATA" | cut -s -d: -f4 `
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: backup_now - Not called by backup_now.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: backup_now - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: backup_now - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $KAROSHI_SERVER'null' = null ]
then
echo `date`: backup_now - Blank server >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: backup_now - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

############################
#Language
############################
LANGCHOICE=englishuk
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/system/backup_now ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/system/backup_now
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all
[ -d /opt/karoshi/backup_server/ ] || ( mkdir /opt/karoshi/backup_server/ ; chmod 0700 /opt/karoshi/backup_server/ )

function backup_pdc {
echo '<PRE STYLE="font-size: small; font-family:'Arial, Times, Georgia, Times New Roman, Times, serif'">'
/opt/karoshi/serversetup/all/"useful scripts"/backup_servers/backup_servers 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo "</pre>"
echo '<br><br>'$KAROSHI_SERVER - $COMPLETEDMSG'<br><br>'
}

function backup_other_servers {

#Copy in configuration file

ssh -x -o PasswordAuthentication=no $KAROSHI_SERVER '
[ ! -d /opt/karoshi/server_network/backup_servers/backup_settings/ ] && mkdir -p /opt/karoshi/server_network/backup_servers/backup_settings/
'

echo "<br>"Copying backup configuration data to $KAROSHI_SERVER"<br>"
scp -r /opt/karoshi/server_network/backup_servers/backup_settings/$KAROSHI_SERVER root@$KAROSHI_SERVER:"/opt/karoshi/server_network/backup_servers/backup_settings/"

#Copy in backup script
echo Copying backup backup script to $KAROSHI_SERVER"<br>"
scp "/opt/karoshi/serversetup/all/useful scripts/backup_servers/backup_servers" root@$KAROSHI_SERVER:"/opt/karoshi/serversetup/all/useful\ scripts/backup_servers/"

echo '<PRE STYLE="font-size: small; font-family:'Arial, Times, Georgia, Times New Roman, Times, serif'">'
ssh -x -o PasswordAuthentication=no $KAROSHI_SERVER '/opt/karoshi/serversetup/all/"useful scripts"/backup_servers/backup_servers' 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo "</pre>"
}

echo `date`: backup_now - $KAROSHI_SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo '<span style="font-weight: bold;">'$KAROSHI_SERVER': '$BACKUPNOWMSG'</span>'
echo `date`: backup_now - $KAROSHI_SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

if [ $KAROSHI_SERVER = `hostname-fqdn` ]
then
backup_pdc
else
#ssh to other servers to run backup
backup_other_servers
fi
exit

