#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/change_user_info_cgi
then
	echo "$(date): change_user_info - No admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/change_user_info_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/change_user_info.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$change_user_info_cgi"'check' ]
then
	echo "$(date): change_user_info - Incorrect admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs="$#"
if [ "$numArgs" != 0 ]
then
	echo "$(date): change_user_info - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:%\n-+-')
if [ -z "$DATA" ]
then
	echo "$(date): change_user_info - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
USERNAME=$(echo "$DATA" | cut -s -d: -f4)
SN=$(echo "$DATA" | cut -s -d: -f5)
GIVENNAME=$(echo "$DATA" | cut -s -d: -f6)
DISPLAYNAME=$(echo "$DATA" | cut -s -d: -f7)
EMPLOYEENUMBER=$(echo "$DATA" | cut -s -d: -f8)
MAILLOCALADDRESS=$(echo "$DATA" | cut -s -d: -f9)
MAIL=$(echo "$DATA" | cut -s -d: -f10)

########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ]
then
	echo "$(date): change_user_info - Not called by change_user_info.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): change_user_info - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): change_user_info - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$SN" ]
then
	echo "$(date): change_user_info - Blank surname by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$GIVENNAME" ]
then
	echo "$(date): change_user_info - Blank given name by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$DISPLAYNAME" ]
then
	echo "$(date): change_user_info - Blank display name by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$USERNAME" ]
then
	echo "$(date): change_user_info - Blank username by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$EMPLOYEENUMBER" ]
then
	EMPLOYEENUMBER=$(echo "${GIVENNAME:0:1}${SN:0:1}" | tr 'A-Z' 'a-z')
fi


if [ -z "$MAIL" ]
then
	echo "$(date): change_user_info - Blank email address by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): change_user_info - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Change the information
########################
echo "$(date): change_user_info - 'for' $USERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

#Update the user photo
if [ -d "/var/www/karoshi/show_user_image/$REMOTE_USER" ]
then
	ImageFile=$(find "/var/www/karoshi/show_user_image/$REMOTE_USER" -type f -iname "*.jpg" | sed -n 1,1p)
	PrimaryGroup=$(id -g -n "$USERNAME")
	if [ ! -z "$ImageFile" ]
	then
		ImageFile=$(basename "$ImageFile")

		if [ ! -d /var/www/html_karoshi/images/user_images/"$PrimaryGroup"/ ]
		then
			mkdir -p /var/www/html_karoshi/images/user_images/"$PrimaryGroup"/
			chmod 0770 /var/www/html_karoshi/images/user_images/"$PrimaryGroup"/
			chown root.apache_karoshi /var/www/html_karoshi/images/user_images/"$PrimaryGroup"/
		fi

		echo "$(date): change_user_info uploading - $ImageFile for user $USERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

		cp -f "/var/www/karoshi/show_user_image/$REMOTE_USER/$ImageFile" "/var/www/html_karoshi/images/user_images/$PrimaryGroup/$USERNAME.jpg"
		chown root.apache_karoshi "/var/www/html_karoshi/images/user_images/$PrimaryGroup/$USERNAME.jpg"
		chmod 0440 "/var/www/html_karoshi/images/user_images/$PrimaryGroup/$USERNAME.jpg"
	fi
	rm -f -R "/var/www/karoshi/show_user_image/$REMOTE_USER"
fi

MAIL="${MAIL//%40/@}"
CN="${CN//+/ }"
DISPLAYNAME="${DISPLAYNAME//+/ }"

LDAPPASS=$(sed -n 1,1p /etc/ldap.secret)
source /opt/karoshi/server_network/domain_information/domain_name
USERDN=$(ldapsearch -o ldif-wrap=no -x -w "$LDAPPASS" -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn="$USERNAME" | grep ^dn:)
ENROLLMENTCHECK=$(ldapsearch -x -w "$LDAPPASS" -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn="$USERNAME" | grep -c employeeNumber:)

if [ "$ENROLLMENTCHECK" = 0 ]
then
	ACTION=add
else
	ACTION=replace
fi

echo -e "$USERDN\nchangetype: modify\n$ACTION: employeeNumber\nemployeeNumber: $EMPLOYEENUMBER\n-\nreplace: sn\nsn: $SN\n-\nreplace: givenName\ngivenName: $GIVENNAME\n-\nreplace: displayName\ndisplayName: $DISPLAYNAME\n-\nreplace: mail\nmail: $MAIL\n-" | ldapmodify -x -w "$LDAPPASS" -D "cn=Administrator,cn=Users,$LDAPBASE" 1>/dev/null

#Change info on federated ldap servers
if [ -d /opt/karoshi/server_network/federated_ldap_servers/ ]
then
	if [[ $(ls -1 /opt/karoshi/server_network/federated_ldap_servers/ | wc -l) -gt 0 ]]
	then
		for FEDERATEDLDAPSERVERS in /opt/karoshi/server_network/federated_ldap_servers/*
		do
			FEDERATEDLDAPSERVER=$(basename "$FEDERATEDLDAPSERVERS")
			echo "$(date): change_user_info \(federated mode\) - for $USERNAME on $FEDERATEDLDAPSERVER by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
			ssh -x -o PasswordAuthentication=no "$FEDERATEDLDAPSERVER" '
			#Change info on federated slave ldap servers
			LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
			source /opt/karoshi/server_network/domain_information/domain_name
			echo -e "'"$USERDN"'\nchangetype: modify\n'"$ACTION"': employeeNumber\nemployeeNumber: '"$EMPLOYEENUMBER"'\n-\nreplace: cn\ncn: '"$CN"'\n-\nreplace: sn\nsn: '"$SN"'\n-\nreplace: givenName\ngivenName: '"$GIVENNAME"'\n-\nreplace: displayName\ndisplayName: '"$DISPLAYNAME"'\n-\nreplace: mailLocalAddress\nmailLocalAddress: '"$MAILLOCALADDRESS"'\n-\nreplace: mail\nmail: '"$MAIL"'\n-" | ldapmodify -x -w "$LDAPPASS" -D "cn=Administrator,cn=Users,$LDAPBASE" 1>/dev/null
			' 2>> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		done
	fi
fi

exit

