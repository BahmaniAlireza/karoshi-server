#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/cron_add_cgi
then
	echo "$(date): cron_add - No Admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/cron_add_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/cron_add.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$cron_add_cgi"'check' ]
then
	echo "$(date): cron_add - Incorrect Admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): cron_add - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\/*%+"-' | sed 's/%2F/\//g' | sed 's/%22//g' | sed 's/UNDERSCORE/_/g')
if [ -z "$DATA" ]
then
	echo "$(date): cron_add - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
MINUTES=$(echo "$DATA" | cut -s -d: -f4)
HOUR=$(echo "$DATA" | cut -s -d: -f5)
DAY=$(echo "$DATA" | cut -s -d: -f6)
MONTH=$(echo "$DATA" | cut -s -d: -f7)
DOFW=$(echo "$DATA" | cut -s -d: -f8)
COMMAND=$(echo "$DATA" | cut -s -d: -f9)
SERVERNAME=$(echo "$DATA" | cut -s -d: -f10)
SERVERTYPE=$(echo "$DATA" | cut -s -d: -f11)
SERVERMASTER=$(echo "$DATA" | cut -s -d: -f12)
########################
#Check data
########################
if [ -z "$REMOTE_MD5" ]
then
	echo "$(date): cron_add - Blank remote MD5" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ "$REMOTE_MD5"'check' != $MD5SUM'check' ]
then
	echo "$(date): cron_add - Not called by cron_add.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): cron_add - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): cron_add - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$MINUTES" ]
then
	echo "$(date): cron_add - Blank minutes by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [ -z "$HOUR" ]
then
	echo "$(date): cron_add - Blank hour by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$DAY" ]
then
	echo "$(date): cron_add - Blank day by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$MONTH" ]
then
	echo "$(date): cron_add - Blank month by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$DOFW" ]
then
	echo "$(date): cron_add - Blank dofw by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$COMMAND" ]
then
	echo "$(date): cron_add - Blank command by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo "$(date): cron_add - Blank server by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$SERVERTYPE" ]
then
	echo "$(date): cron_add - Blank servertype by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$SERVERTYPE" != network ] && [ "$SERVERTYPE" != federated ] && [ "$SERVERTYPE" != federatedslave ]
then
	echo "$(date): cron_add - Incorrect servertype by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$SERVERTYPE" = federatedslave ]
then
	if [ -z "$SERVERMASTER" ]
	then
		echo "$(date): cron_add - Blank servermaster by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
fi

if [[ $(grep -c ^"$REMOTE_USER": /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): cron_add - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

##########################
#Language
##########################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


COMMANDNAME=$(basename "$COMMAND" | sed 's/+/_/g')
COMMAND=$(echo "$COMMAND" | sed 's/+/ /g' |  sed 's/%3E/\>/g')
echo "<br><br>"

echo "$(date): cron_add $COMMAND to $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

#PDC
if [[ "$SERVERNAME" = $(hostname-fqdn) ]]
then
	if [ ! -d /opt/karoshi/server_network/cronjobs/"$SERVERNAME"/jobs ]
	then
		mkdir -p /opt/karoshi/server_network/cronjobs/"$SERVERNAME"/jobs
		chmod 0700 /opt/karoshi/server_network/cronjobs/"$SERVERNAME"/jobs
	fi
	echo "$(date): cron_add - $MINUTES $HOUR $DAY $MONTH $DOFW $COMMAND by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	echo "$MINUTES $HOUR $DAY $MONTH $DOFW \"$COMMAND\"" > "/opt/karoshi/server_network/cronjobs/$SERVERNAME/jobs/$COMMANDNAME.cron"
	/opt/karoshi/"useful scripts"/refreshcronjobs 1>/dev/null
fi

if [[ "$SERVERNAME" != $(hostname-fqdn) ]] && [ "$SERVERTYPE" = network ] || [ "$SERVERTYPE" = federated ]
then
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVERNAME" '
	[ -d /opt/karoshi/logs/karoshi_web_management/ ] && echo `date`: cron_add \(federated mode\) "'"$COMMAND"'" to '"$SERVERNAME"' by '"$REMOTE_USER"' from '"$REMOTE_ADDR"' >> /opt/karoshi/logs/karoshi_web_management/'"$LOG_DATE"'
	if [ ! -d /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs ]
	then
		mkdir -p /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs
		chmod 0700 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs
	fi
	echo "'"$MINUTES"'" "'"$HOUR"'" "'"$DAY"'" "'"$MONTH"'" "'"$DOFW"'" \""'"$COMMAND"'"\" > /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/'"$COMMANDNAME"'.cron
	/opt/karoshi/"useful scripts"/refreshcronjobs 1>/dev/null
	' 2>&1
fi

if [ "$SERVERTYPE" = federatedslave ]
then
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVERMASTER" '
	echo `date`: cron_add \(federated mode\) "'"$COMMAND"'" to '"$SERVERNAME"' by '"$REMOTE_USER"' from '"$REMOTE_ADDR"' >> /opt/karoshi/logs/karoshi_web_management/'"$LOG_DATE"'
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 '"$SERVERNAME"' '\''
	if [ ! -d /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs ]
	then
		mkdir -p /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs
		chmod 0700 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs
	fi
	echo "'"$MINUTES"'" "'"$HOUR"'" "'"$DAY"'" "'"$MONTH"'" "'"$DOFW"'" \""'"$COMMAND"'"\" > /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/'"$COMMANDNAME"'.cron
	/opt/karoshi/"useful scripts"/refreshcronjobs
	'\''
	' 2>&1
fi

exit


