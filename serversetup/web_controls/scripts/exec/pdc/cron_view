#!/bin/bash
#Copyright (C) 2009 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/cron_view_cgi
then
echo `date`: cron_view - No Admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/cron_view_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/cron_view.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $cron_view_cgi'check' ]
then
echo `date`: cron_view - Incorrect Admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: cron_view - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\/*%+"-' | sed 's/%2F/\//g' | sed 's/%22//g'`
if [ $DATA'null' = null ]
then
echo `date`: cron_view - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
SERVERTYPE=`echo "$DATA" | cut -s -d: -f5`
SERVERMASTER=`echo "$DATA" | cut -s -d: -f6`
MOBILE=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ "$REMOTE_MD5"'null' = null ]
then
echo `date`: cron_add - Blank remote MD5 >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ "$REMOTE_MD5"'check' != $MD5SUM'check' ]
then
echo `date`: cron_view - Not called by cron_view.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ "$REMOTE_USER"'null' = null ]
then
echo `date`: cron_view - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ "$REMOTE_ADDR"'null' = null ]
then
echo `date`: cron_view - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $SERVERNAME'null' = null ]
then
echo `date`: cron_view - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $SERVERTYPE'null' = null ]
then
echo `date`: cron_view - Blank servertype by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $SERVERTYPE != network ] && [ $SERVERTYPE != federated ] && [ $SERVERTYPE != federatedslave ]
then
echo `date`: cron_view - Incorrect servertype by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $SERVERTYPE = federatedslave ]
then
if [ $SERVERMASTER'null' = null ]
then
echo `date`: cron_view - Blank servermaster by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: cron_add - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: cron_view - showing cron "jobs" "for" $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

##########################
#Language
##########################
LANGCHOICE=englishuk
STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/system/cron ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/system/cron
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

if [ $MOBILE = no ]
then
TABLECLASS=standard
EDITICON=/images/submenus/system/cron/cron_edit.png
DELETEICON=/images/submenus/system/cron/cron_delete.png
INFOICON=/images/help/info.png
else
TABLECLASS=mobilestandard
EDITICON=/images/submenus/system/cron/cron_editm.png
DELETEICON=/images/submenus/system/cron/cron_deletem.png
INFOICON=/images/help/info.png
fi


##################################
#Show cron jobs for pdc
##################################

echo "<table class=\"$TABLECLASS\" style=\"text-align: left\;\"><tbody>"
echo "<tr><td style=\"width: 40px;\"></td><td style=\"width: 180px;\"><b>$COMMANDMSG</b></td><td></td><td></td></tr>"

if [ $SERVERNAME = `hostname-fqdn` ]
then
if [ ! -d /opt/karoshi/cronjobs/jobs/ ]
then
mkdir /opt/karoshi/cronjobs/jobs/
chmod 0700 /opt/karoshi/cronjobs/jobs/
fi
CRONCOUNT=`ls -1 /opt/karoshi/cronjobs/jobs/*.cron | wc -l`


if [ $CRONCOUNT -gt 0 ]
then
for CRON_JOBS in /opt/karoshi/cronjobs/jobs/*.cron
do
CRON_NAME=`basename $CRON_JOBS | sed "s/.cron$//g"`
CRON_DATA=`sed -n 1,1p /opt/karoshi/cronjobs/jobs/$CRON_NAME.cron`
MINUTES=`echo "$CRON_DATA" | cut -d' ' -f1`
HOUR=`echo "$CRON_DATA" | cut -d' ' -f2`
DAY=`echo "$CRON_DATA" | cut -d' ' -f3`
MONTH=`echo "$CRON_DATA" | cut -d' ' -f4`
DOFW=`echo "$CRON_DATA" | cut -d' ' -f5`
COMMAND=`echo "$CRON_DATA" | cut -d' ' -f6-`

SHORTCOMMAND=`echo $COMMAND | sed "s/\/\*/SLASHWILDCARD/g"`
SHORTCOMMAND=`basename "$SHORTCOMMAND" | sed "s/SLASHWILDCARD/\/\*/g" | sed "s/\"//g"`
echo '<tr><td>

<a class="info3" href="javascript:void(0)"><img class="images" alt="" src="'$INFOICON'"><span>
'$MINUTESMSG2' : '$MINUTES'<br>'$HOURMSG' : '$HOUR'<br>'$DAYOFWEEKMSG2' : '$DAYMSG'<br>'$MONTHMSG' : '$MONTH'<br>'$DAYOFWEEKMSG2' : '$DOFW'<br><br>
'$COMMANDMSG'<br>'$COMMAND'<br><br>
</span></a></td><td>'$CRON_NAME'</td>
<td><a class="info" href="javascript:void(0)"><input name="___ACTION___EDIT___JOBNAME___'$CRON_NAME'___SERVERTYPE___network___SERVERNAME___'$SERVERNAME'___" type="image" class="images" src="'$EDITICON'" value=""><span>'$EDITMSG'</span></a></td><td><a class="info" href="javascript:void(0)"><input name="___ACTION___DELETE___JOBNAME___'$CRON_NAME'___SERVERTYPE___network___SERVERNAME___'$SERVERNAME'___" type="image" class="images" src="'$DELETEICON'" value=""><span>'$DELETEMSG'</span></a></td></tr>'

done
else
echo '<tr><td><b>'$NOJOBSMSG'</b></td><td></td><td></td><td></td><td></td><td></td></tr>'
fi
fi


if [ $SERVERNAME != `hostname-fqdn` ] && [ $SERVERTYPE = network ] || [ $SERVERTYPE = federated ]
then
ssh -x -o PasswordAuthentication=no $SERVERNAME '
[ -d /opt/karoshi/logs/karoshi_web_management/ ] && echo `date`: cron_view \(federated mode\) - showing cron "jobs" "for" '$SERVERNAME' by '$REMOTE_USER' from '$REMOTE_ADDR' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
if [ ! -d /opt/karoshi/cronjobs/jobs/ ]
then
mkdir /opt/karoshi/cronjobs/jobs/
chmod 0700 /opt/karoshi/cronjobs/jobs/
fi
CRONCOUNT=`ls -1 /opt/karoshi/cronjobs/jobs/*.cron | wc -l`

if [ $CRONCOUNT -gt 0 ]
then
for CRON_JOBS in /opt/karoshi/cronjobs/jobs/*.cron
do
CRON_NAME=`basename $CRON_JOBS | sed "s/.cron$//g"`
CRON_DATA=`sed -n 1,1p /opt/karoshi/cronjobs/jobs/$CRON_NAME.cron`
MINUTES=`echo "$CRON_DATA" | cut -d" " -f1`
HOUR=`echo "$CRON_DATA" | cut -d" " -f2`
DAY=`echo "$CRON_DATA" | cut -d" " -f3`
MONTH=`echo "$CRON_DATA" | cut -d" " -f4`
DOFW=`echo "$CRON_DATA" | cut -d" " -f5`
COMMAND=`echo "$CRON_DATA" | cut -d" " -f6-`

SHORTCOMMAND=`echo $COMMAND | sed "s/\/\*/SLASHWILDCARD/g"`
SHORTCOMMAND=`basename "$SHORTCOMMAND" | sed "s/SLASHWILDCARD/\/\*/g" | sed "s/\"//g"`

echo "<tr><td style=\"width: 40px;\">
<a class=\"info3\" href=\"javascript:void(0)\"><img class=\"images\" alt=\"\" src=\"'$INFOICON'\"><span>
'$MINUTESMSG2' : $MINUTES<br>'$HOURMSG' : $HOUR<br>'$DAYOFWEEKMSG2' : $DAYMSG<br>'$MONTHMSG' : $MONTH<br>'$DAYOFWEEKMSG2' : $DOFW<br><br>
'$COMMANDMSG'<br>$COMMAND<br><br>
</span></a>
</td><td>$CRON_NAME</td><td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"___ACTION___EDIT___JOBNAME___"$CRON_NAME"___SERVERTYPE___federated___SERVERMASTER___'$SERVERMASTER'___SERVERNAME___'$SERVERNAME'___\" type=\"image\" class=\"images\" src=\"'$EDITICON'\" value=\"\"><span>'$EDITMSG'</span></a></td><td>
<a class=\"info\" href=\"javascript:void(0)\"><input name=\"___ACTION___DELETE___JOBNAME___"$CRON_NAME"___SERVERTYPE___federated___SERVERMASTER___'$SERVERMASTER'___SERVERNAME___'$SERVERNAME'___\" type=\"image\" class=\"images\" src=\"'$DELETEICON'\" value=\"\"><span>'$DELETEMSG'</span></a></td></tr>"
done
else
echo"<tr><td><b>'$NOJOBSMSG'</b></td><td></td><td></td><td></td><td></td><td></td></tr>"
fi
' 2>/dev/null
fi

if [ $SERVERTYPE = federatedslave ]
then
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVERMASTER '
echo `date`: cron_view \(federated mode\) - showing cron "jobs" "for" '$SERVERNAME' by '$REMOTE_USER' from '$REMOTE_ADDR' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 '$SERVERNAME' '\''
if [ ! -d /opt/karoshi/cronjobs/jobs/ ]
then
mkdir /opt/karoshi/cronjobs/jobs/
chmod 0700 /opt/karoshi/cronjobs/jobs/
fi
CRONCOUNT=`ls -1 /opt/karoshi/cronjobs/jobs/*.cron | wc -l`

if [ $CRONCOUNT -gt 0 ]
then
for CRON_JOBS in /opt/karoshi/cronjobs/jobs/*.cron
do
CRON_NAME=`basename $CRON_JOBS | sed "s/.cron$//g"`
CRON_DATA=`sed -n 1,1p /opt/karoshi/cronjobs/jobs/$CRON_NAME.cron`
MINUTES=`echo "$CRON_DATA" | cut -d" " -f1`
HOUR=`echo "$CRON_DATA" | cut -d" " -f2`
DAY=`echo "$CRON_DATA" | cut -d" " -f3`
MONTH=`echo "$CRON_DATA" | cut -d" " -f4`
DOFW=`echo "$CRON_DATA" | cut -d" " -f5`
COMMAND=`echo "$CRON_DATA" | cut -d" " -f6-`

SHORTCOMMAND=`echo $COMMAND | sed "s/\/\*/SLASHWILDCARD/g"`
SHORTCOMMAND=`basename "$SHORTCOMMAND" | sed "s/SLASHWILDCARD/\/\*/g" | sed "s/\"//g"`

echo "<tr><td style=\"width: 40px;\">
<a class=\"info3\" href=\"javascript:void(0)\"><img class=\"images\" alt=\"\" src=\"'$INFOICON'\"><span>
'$MINUTESMSG2' : $MINUTES<br>'$HOURMSG' : $HOUR<br>'$DAYOFWEEKMSG2' : $DAYMSG<br>'$MONTHMSG' : $MONTH<br>'$DAYOFWEEKMSG2' : $DOFW<br><br>
'$COMMANDMSG'<br>$COMMAND<br><br>
</span></a>
</td><td>$CRON_NAME</td><td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"___ACTION___EDIT___JOBNAME___"$CRON_NAME"___SERVERTYPE___federatedslave___SERVERMASTER___'$SERVERMASTER'___SERVERNAME___'$SERVERNAME'___\" type=\"image\" class=\"images\" src=\"'$EDITICON'\" value=\"\"><span>'$EDITMSG'</span></a></td><td>
<a class=\"info\" href=\"javascript:void(0)\"><input name=\"___ACTION___DELETE___JOBNAME___"$CRON_NAME"___SERVERTYPE___federatedslave___SERVERMASTER___'$SERVERMASTER'___SERVERNAME___'$SERVERNAME'___\" type=\"image\" class=\"images\" src=\"'$DELETEICON'\" value=\"\"><span>'$DELETEMSG'</span></a></td></tr>"
done
else
echo"<tr><td><b>'$NOJOBSMSG'</b></td><td></td><td></td><td></td><td></td><td></td></tr>"
fi
'\''
' 2>/dev/null
fi

echo "</tbody></table><br><br>"

exit
