#!/bin/bash
#Copyright (C) 2009 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/cron_view_cgi
then
	echo "$(date): cron_view - No Admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/cron_view_cgi
Checksum=$(sha256sum /var/www/cgi-bin_karoshi/admin/cron_view.cgi | cut -d' ' -f1)
[ -z "$Checksum" ] && Checksum=not_set
if [ "$Checksum" != "$cron_view_cgi" ]
then
	echo "$(date): cron_view - Incorrect Admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): cron_view - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\/*%+"-' | sed 's/%2F/\//g' | sed 's/%22//g')
if [ -z "$DATA" ]
then
	echo "$(date): cron_view - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
RemoteCheckSum=$(echo "$DATA" | cut -s -d: -f3)
SERVERNAME=$(echo "$DATA" | cut -s -d: -f4)
SERVERTYPE=$(echo "$DATA" | cut -s -d: -f5)
SERVERMASTER=$(echo "$DATA" | cut -s -d: -f6)
MOBILE=$(echo "$DATA" | cut -s -d: -f7)

WIDTH1="70"
WIDTH2="515"
if [ "$MOBILE" = yes ]
then
	WIDTH1="60"
	WIDTH2="140"
fi

########################
#Check data
########################
if [ -z "$RemoteCheckSum" ]
then
	echo "$(date): cron_add - Blank remote MD5" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ "$RemoteCheckSum"'check' != $Checksum'check' ]
then
	echo "$(date): cron_view - Not called by cron_view.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): cron_view - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): cron_view - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$SERVERNAME" ]
then
	echo "$(date): cron_view - Blank servername by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$SERVERTYPE" ]
then
	echo "$(date): cron_view - Blank servertype by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$SERVERTYPE" != network ] && [ "$SERVERTYPE" != federated ] && [ "$SERVERTYPE" != federatedslave ]
then
	echo "$(date): cron_view - Incorrect servertype by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$SERVERTYPE" = federatedslave ]
then
	if [ -z "$SERVERMASTER" ]
	then
		echo "$(date): cron_view - Blank servermaster by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
fi

if [[ $(grep -c ^"$REMOTE_USER": /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): cron_add - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

echo "$(date): cron_view - showing cron jobs for $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

##########################
#Language
##########################

[ -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER" ] && source "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


if [ "$MOBILE" = no ]
then
	EDITICON=/images/submenus/system/cron/cron_edit.png
	DELETEICON=/images/submenus/system/cron/cron_delete.png
	INFOICON=/images/help/info.png
else
	EDITICON=/images/submenus/system/cron/cron_editm.png
	DELETEICON=/images/submenus/system/cron/cron_deletem.png
	INFOICON=/images/help/info.png
fi


##################################
#Show cron jobs for pdc
##################################

if [ "$SERVERNAME" = "$(hostname-fqdn)" ]
then
	if [ ! -d "/opt/karoshi/server_network/cronjobs/$SERVERNAME/jobs/" ]
	then
		mkdir "/opt/karoshi/server_network/cronjobs/$SERVERNAME/jobs/"
		chmod 0700 "/opt/karoshi/server_network/cronjobs/$SERVERNAME/jobs/"
	fi
	CRONCOUNT=$(ls -1 /opt/karoshi/server_network/cronjobs/"$SERVERNAME"/jobs/*.cron | wc -l)


	if [ "$CRONCOUNT" -gt 0 ]
	then
		echo '<table id="myTable" class="tablesorter" style="text-align: left;"><thead><tr><th style="width: '$WIDTH1'px;">'$"Time"'</th><th style="width: '$WIDTH2'px;"><b>'$"Command"'</b></th><th style="width: '$WIDTH1'px;">'$"Edit"'</th><th style="width: '$WIDTH1'px;">'$"
Delete"'</th></tr></thead><tbody>'
		for CRON_JOBS in /opt/karoshi/server_network/cronjobs/"$SERVERNAME"/jobs/*.cron
		do
			CRON_NAME=$(basename "$CRON_JOBS" | sed "s/.cron$//g")
			CRON_DATA=$(sed -n 1,1p "/opt/karoshi/server_network/cronjobs/$SERVERNAME/jobs/$CRON_NAME.cron")
			MINUTES=$(echo "$CRON_DATA" | cut -d' ' -f1)
			HOUR=$(echo "$CRON_DATA" | cut -d' ' -f2)
			#DAY=$(echo "$CRON_DATA" | cut -d' ' -f3)
			MONTH=$(echo "$CRON_DATA" | cut -d' ' -f4)
			DOFW=$(echo "$CRON_DATA" | cut -d' ' -f5)
			COMMAND=$(echo "$CRON_DATA" | cut -d' ' -f6-)
			DISPLAY_CRON_NAME="$CRON_NAME"
			[ "$MOBILE" = yes ] && DISPLAY_CRON_NAME="${CRON_NAME:0:15}"

			echo '<tr><td>
			<a class="info3" href="javascript:void(0)"><img class="images" alt="" src="'"$INFOICON"'"><span>
			'$"Minutes"' : '"$MINUTES"'<br>'$"Hour"' : '"$HOUR"'<br>'$"Weekday"' : '$"Day"'<br>'$"Month"' : '"$MONTH"'<br>'$"Weekday"' : '"$DOFW"'<br><br>
			'$"Command"'<br>'"$COMMAND"'<br><br>
			</span></a></td><td>'"$DISPLAY_CRON_NAME"'</td>
			<td>
			<button class="info" name="___EditJob___" value="___ACTION___EDIT___JOBNAME___'"$CRON_NAME"'___SERVERTYPE___network___SERVERNAME___'"$SERVERNAME"'___">
			<img src="'"$EDITICON"'" alt="'$"Edit"'">
			<span>'$"Edit the scheduled job."'</span>
			</button>
			</td><td>
			<button class="info" name="___DeleteJob___" value="___ACTION___DELETE___JOBNAME___'"$CRON_NAME"'___SERVERTYPE___network___SERVERNAME___'"$SERVERNAME"'___">
			<img src="'"$DELETEICON"'" alt="'$"Delete"'">
			<span>'$"Delete the scheduled job."'</span>
			</button>
			</td></tr>'
		done
		echo '</tbody></table>'
	else
		echo '<b>'$"No Scheduled jobs."'</b>'
	fi
		
fi


if [ "$SERVERNAME" != "$(hostname-fqdn)" ] && [ "$SERVERTYPE" = network ] || [ "$SERVERTYPE" = federated ]
then
	ssh -x -o PasswordAuthentication=no "$SERVERNAME" '
	[ -d /opt/karoshi/logs/karoshi_web_management/ ] && echo `date`: cron_view \(federated mode\) - showing cron "jobs" "for" '"$SERVERNAME"' by '"$REMOTE_USER"' from '"$REMOTE_ADDR"' >> /opt/karoshi/logs/karoshi_web_management/'"$LOG_DATE"'
	if [ ! -d /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/ ]
	then
		mkdir /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/
		chmod 0700 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/
	fi
	CRONCOUNT=$(ls -1 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/*.cron | wc -l)

	if [ "$CRONCOUNT" -gt 0 ]
	then
		echo "<table id=\"myTable\" class=\"tablesorter\" style=\"text-align: left;\"><thead><tr><th style=\"width: '"$WIDTH1"'px;\">'$"Time"'</th><th style=\"width: '"$WIDTH2"'px;\"><b>'$"Command"'</b></th><th style=\"width: '"$WIDTH1"'px;\">'$"Edit"'</th><th style=\"width: '"$WIDTH1"'px;\">'$"Delete"'</th></tr></thead><tbody>"
		for CRON_JOBS in /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/*.cron
		do
			CRON_NAME=$(basename "$CRON_JOBS" | sed "s/.cron$//g")
			CRON_DATA=$(sed -n 1,1p /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/"$CRON_NAME".cron)
			MINUTES=$(echo "$CRON_DATA" | cut -d" " -f1)
			HOUR=$(echo "$CRON_DATA" | cut -d" " -f2)
			#DAY=$(echo "$CRON_DATA" | cut -d" " -f3)
			MONTH=$(echo "$CRON_DATA" | cut -d" " -f4)
			DOFW=$(echo "$CRON_DATA" | cut -d" " -f5)
			COMMAND=$(echo "$CRON_DATA" | cut -d" " -f6-)
			DISPLAY_CRON_NAME="$CRON_NAME"
			[ "'"$MOBILE"'" = yes ] && DISPLAY_CRON_NAME="${CRON_NAME:0:15}"

			echo "<tr><td style=\"width: 40px;\">
			<a class=\"info3\" href=\"javascript:void(0)\"><img class=\"images\" alt=\"\" src=\"'$INFOICON'\"><span>
			'$"Minutes"' : $MINUTES<br>'$"Hour"' : $HOUR<br>'$"Weekday"' : $DAY<br>'$"Month"' : $MONTH<br>'$"Weekday"' : $DOFW<br><br>
			'$"Command"'<br>$COMMAND<br><br>
			</span></a>
			</td><td>$DISPLAY_CRON_NAME</td><td>
			<button class=\"info\" name=\"___EditJob___\" value=\"___ACTION___EDIT___JOBNAME___"$CRON_NAME"___SERVERTYPE___network___SERVERNAME___'"$SERVERNAME"'___\">
			<img src=\"'"$EDITICON"'\" alt=\"'$"Edit"'\">
			<span>'$"Edit the scheduled job."'</span>
			</button>
			</td><td>
			<button class=\"info\" name=\"___DeleteJob___\" value=\"___ACTION___DELETE___JOBNAME___"$CRON_NAME"___SERVERTYPE___federated___SERVERMASTER___'"$SERVERMASTER"'___SERVERNAME___'"$SERVERNAME"'___\">
			<img src=\"'$DELETEICON'\" alt=\"'$"Delete"'\">
			<span>'$"Delete the scheduled job."'</span>
			</button>
			</td></tr>"
		done
		echo "</tbody></table>"
	else
		echo "<b>'$"No Scheduled jobs."'</b>"
	fi
	' 2>/dev/null
fi

if [ "$SERVERTYPE" = federatedslave ]
then
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVERMASTER" '
	echo "$(date): cron_view \(federated mode\) - showing cron "jobs" "for" '"$SERVERNAME"' by '"$REMOTE_USER"' from '"$REMOTE_ADDR"'" >> /opt/karoshi/logs/karoshi_web_management/'"$LOG_DATE"'
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 '"$SERVERNAME"' '\''
	if [ ! -d /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/ ]
	then
		mkdir /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/
		chmod 0700 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/
	fi
	CRONCOUNT=`ls -1 /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/*.cron | wc -l`

	if [ $CRONCOUNT -gt 0 ]
	then
		echo "<table id="myTable" class=\"tablesorter\" style=\"text-align: left;\"><thead><tr><th style=\"width: 40px;\"></th><th style=\"width: 250px;\"><b>'$"Command"'</b></th><th style=\"width: 40px;\"></th><th style=\"width: 40px;\"></th></tr></thead><tbody>"
		for CRON_JOBS in /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/*.cron
		do
			CRON_NAME=$(basename "$CRON_JOBS" | sed "s/.cron$//g")
			CRON_DATA=$(sed -n 1,1p /opt/karoshi/server_network/cronjobs/'"$SERVERNAME"'/jobs/"$CRON_NAME".cron)
			MINUTES=$(echo "$CRON_DATA" | cut -d" " -f1)
			HOUR=$(echo "$CRON_DATA" | cut -d" " -f2)
			#DAY=$(echo "$CRON_DATA" | cut -d" " -f3)
			MONTH=$(echo "$CRON_DATA" | cut -d" " -f4)
			DOFW=$(echo "$CRON_DATA" | cut -d" " -f5)
			COMMAND=$(echo "$CRON_DATA" | cut -d" " -f6-)
			DISPLAY_CRON_NAME="$CRON_NAME"
			[ "'$MOBILE'" = yes ] && DISPLAY_CRON_NAME="${CRON_NAME:0:15}"

			echo "<tr><td style=\"width: 40px;\">
			<a class=\"info3\" href=\"javascript:void(0)\"><img class=\"images\" alt=\"\" src=\"'"$INFOICON"'\"><span>
			'"$Mins"' : $MINUTES<br>'$"Hour"' : $HOUR<br>'$"Weekday"' : $"Day"<br>'$"Month"' : $MONTH<br>'$"Weekday"' : $DOFW<br><br>
			'$"Command"'<br>$COMMAND<br><br>
			</span></a>
			</td><td>$DISPLAY_CRON_NAME</td><td>

			<button class=\"info\" name=\"___EditJob___\" value=\"___ACTION___EDIT___JOBNAME___"$CRON_NAME"___SERVERTYPE___federatedslave___SERVERMASTER___'"$SERVERMASTER"'___SERVERNAME___'"$SERVERNAME"'___\">
			<img src=\"'"$EDITICON"'\" alt=\"'$"Edit"'\">
			<span>'$"Edit the scheduled job."'</span>
			</button>
			</td><td>
			<button class=\"info\" name=\"___DeleteJob___\" value=\"___ACTION___DELETE___JOBNAME___"$CRON_NAME"___SERVERTYPE___federatedslave___SERVERMASTER___'"$SERVERMASTER"'___SERVERNAME___'"$SERVERNAME"'___\">
			<img src=\"'"$DELETEICON"'\" alt=\"'$"Delete"'\">
			<span>'$"Delete the scheduled job."'</span>
			</button>
			</td></tr>"
		done
		echo "</tbody></table>"
	else
		echo "<b>'$"No Scheduled jobs."'</b>"
	fi
	'\''
	' 2>/dev/null
fi

echo "<br><br>"

exit
