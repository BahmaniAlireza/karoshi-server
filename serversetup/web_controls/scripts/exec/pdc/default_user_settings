#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/default_user_settings_fm_cgi
then
	echo `date`: default_user_settings - No form MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/default_user_settings_fm_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/default_user_settings_fm.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $default_user_settings_fm_cgi'check' ]
then
	echo `date`: default_user_settings - Incorrect form MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/default_user_settings_cgi
then
	echo `date`: default_user_settings - No cgi MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/default_user_settings_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/admin/default_user_settings.cgi | cut -d' ' -f1`
[ -z "$MD5SUM2" ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $default_user_settings_cgi'check' ]
then
	echo `date`: default_user_settings - Incorrect cgi MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ -z "$DATA" ]
then
	echo `date`: default_user_settings - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
	echo `date`: default_user_settings - Not called by default_user_settings.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ -z "$REMOTE_USER" ]
then
	echo `date`: default_user_settings - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: default_user_settings - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo `date`: default_user_settings - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

if [ $ACTION != GETDATA ] && [ $ACTION != SETDATA ]
then
	echo `date`: default_user_settings - Incorrect action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
DOMAINNAME=`cat /etc/samba/smb.conf | sed 's/ //g' | sed 's/\t//g' | grep ^workgroup= | cut -d= -f2`


[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server


#Get default username style
if [ -f /opt/karoshi/server_network/default_username_style ]
then
	source /opt/karoshi/server_network/default_username_style
	[ $DEFAULTSTYLE = 1 ] && SELECT1='selected="selected"'
	[ $DEFAULTSTYLE = 2 ] && SELECT2='selected="selected"'
	[ $DEFAULTSTYLE = 3 ] && SELECT3='selected="selected"'
	[ $DEFAULTSTYLE = 4 ] && SELECT4='selected="selected"'
	[ $DEFAULTSTYLE = 5 ] && SELECT5='selected="selected"'
	[ $DEFAULTSTYLE = 6 ] && SELECT6='selected="selected"'
	[ $DEFAULTSTYLE = 7 ] && SELECT7='selected="selected"'
	[ $DEFAULTSTYLE = 8 ] && SELECT8='selected="selected"'
	[ $DEFAULTSTYLE = 9 ] && SELECT9='selected="selected"'
	[ $DEFAULTSTYLE = 10 ] && SELECT10='selected="selected"'
else
	SELECT1='selected="selected"'
fi

if [ $ACTION = GETDATA ]
then
	#Get lockout settings - only works with samba4.2 or higher.
	LOCKOUTDATA=$(samba-tool domain passwordsettings show)
	PASSWORD_HISTORY_LENGTH=$(echo -e "$LOCKOUTDATA" | grep -w "Password history length" | tr -cd 0-9)
	LOCKOUTTHRESHOLD=$(echo -e "$LOCKOUTDATA" | grep -w "lockout threshold" | tr -cd 0-9)
	LOCKOUTDURATION=$(echo -e "$LOCKOUTDATA" | grep -w "lockout duration" | tr -cd 0-9)
	LOCKOUTOBS=$(echo -e "$LOCKOUTDATA" | grep -w "lockout after" | tr -cd 0-9)
	MAXIMUMPASSWORDAGE=$(echo -e "$LOCKOUTDATA" | grep -w "Maximum password age" | tr -cd 0-9)
	MINPASSWORDLENGTH=$(echo -e "$LOCKOUTDATA" | grep -w "Minimum password length" | tr -cd 0-9)
	PASSWORDCOMPLEXITY=$(echo -e "$LOCKOUTDATA" | grep -w "Password complexity" | tr -cd 0-9)

	[ -z "$PASSWORDHISTORYLENGTH" ] && PASSWORDHISTORYLENGTH=24
	[ -z "$LOCKOUTTHRESHOLD" ] && LOCKOUTTHRESHOLD=0
	[ -z "$LOCKOUTDURATION" ] && LOCKOUTDURATION=30
	[ -z "$LOCKOUTOBS" ] && LOCKOUTOBS=3
	[ -z "$MAXIMUMPASSWORDAGE" ] && MAXIMUMPASSWORDAGE=999

	#Get password complexity data
	source /opt/karoshi/server_network/security/password_settings
	[ -z "$CHANGEPASSFIRSTLOGIN" ] && CHANGE_PASS_FIRST_LOGIN=no
	[ -z "$PASSWORDEXPIRY" ] && PASSWORD_EXPIRY=yes
	[ $PASSWORDCOMPLEXITY = on ] && SELECT15=selected
	[ $PASSWORDCOMPLEXITY = off ] && SELECT16=selected
	[ $CHANGEPASSFIRSTLOGIN = yes ] && SELECT19=selected
	[ $CHANGEPASSFIRSTLOGIN = no ] && SELECT20=selected
	[ $PASSWORDEXPIRY = yes ] && SELECT21=selected
	[ $PASSWORDEXPIRY = no ] && SELECT22=selected

	#Get homedrive
	HOMEDRIVE=$(grep ^'$homedrive=' /var/lib/samba/netlogon/logonform.kix | cut -d"=" -f2 | tr -cd "a-z" | tr "a-z" "A-Z")

	#Show table for data choice
	echo '<table class="standard" style="text-align: left;" ><tbody>
	<tr><td style="width: 200px;">'$"Account lockout duration"'</td>
        <td><input style="width: 200px;" tabindex= "1" name="_LOCKOUTDURATION_" maxlength="3" size="3" type="text" value="'$LOCKOUTDURATION'"></td><td>
	<a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Time in minutes that you want a user to be locked out."'</span></a>
	</td></tr>
	<tr><td>'$"Account lockout threshold"'</td><td><input style="width: 200px;" tabindex= "1" name="_LOCKOUTTHRESHOLD_" maxlength="3" size="3" type="text" value="'$LOCKOUTTHRESHOLD'"></td><td>
	<a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Number of login attempts to trigger the lockout."'</span></a></td></tr>
	<tr><td>'$"Reset account lockout after"'</td><td><input style="width: 200px;" tabindex= "2" name="_LOCKOUTOBS_" maxlength="3" size="3" type="text" value="'$LOCKOUTOBS'"></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Time duration that the login attempts are monitored over."'</span></a></td></tr>
	<tr><td>'$"Password history length"'</td><td><input style="width: 200px;" tabindex= "2" name="_PASSWORDHISTORYLENGTH_" maxlength="3" size="3" type="text" value="'$PASSWORDHISTORYLENGTH'"></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"The number of old passwords that are stored and not allowed to be re-used. This must be between 0 and 24."'</span></a></td></tr>
	<tr><td>'$"Minimum password length"'</td><td><input style="width: 200px;" tabindex= "2" name="_MINPASSWORDLENGTH_" maxlength="4" size="3" type="text" value="'$MINPASSWORDLENGTH'"></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"The minimum password length for a password. This must be between 0 and 14."'</span></a></td></tr>
	<tr><td>'$"Maximum password age"'</td><td><input style="width: 200px;" tabindex= "2" name="_MAXIMUMPASSWORDAGE_" maxlength="3" size="3" type="text" value="'$MAXIMUMPASSWORDAGE'"></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Time in days until a user needs to change a password."'</span></a></td></tr>
	<tr><td>'$"Password Complexity"'</td><td>
	<select name="_PASSWORDCOMPLEXITY_" style="width: 200px;">
	<option value="on" '$SELECT15'>'$"On"'</option>
	<option value="off" '$SELECT16'>'$"Off"'</option>
	</select>
	</td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"If a password has to contain upper and lower case haracters and numbers."'</span></a></td></tr>
	<tr><td>'$"Username style"'</td>
	<td>
        <select name="_USERNAMESTYLE_" style="width: 200px;" onClick="rewriteselect();">
        <option value="userstyleS1" '$SELECT1'>'$"Style" 1': '$"auser09"'</option>
        <option value="userstyleS2" '$SELECT2'>'$"Style" 2': '$"09auser"'</option>
        <option value="userstyleS3" '$SELECT3'>'$"Style" 3': '$"usera09"'</option>
        <option value="userstyleS4" '$SELECT4'>'$"Style" 4': '$"arnold.user09"'</option>
        <option value="userstyleS5" '$SELECT5'>'$"Style" 5': '$"user.arnold09"'</option>
        <option value="userstyleS6" '$SELECT6'>'$"Style" 6': '$"09usera"'</option>
        <option value="userstyleS7" '$SELECT7'>'$"Style" 7': '$"09arnoldu"'</option>
        <option value="userstyleS8" '$SELECT8'>'$"Style" 8': '$"arnoldu"'</option>
        <option value="userstyleS9" '$SELECT9'>'$"Style" 9': '$"Enrollment number as username."'</option>
	 <option value="userstyleS10" '$SELECT10'>'$"Style" 10': '$"Enter a username"'</option>
	</select></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Choose the default username style."'</span></a></td></tr>
	<tr><td>'$"Change password on first login"'</td><td>
	<select name="_CHANGEPASSFIRSTLOGIN_" style="width: 200px;">
	<option value="yes" '$SELECT19'>'$"Yes"'</option>
	<option value="no" '$SELECT20'>'$"No"'</option>
	</select></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"This forces a user to change their password the first time they log in."'</span></a></td></tr>
	<tr><td>'$"Password Expiry"'</td><td>
	<select name="_PASSWORDEXPIRY_" style="width: 200px;">
	<option value="yes" '$SELECT21'>'$"Yes"'</option>
	<option value="no" '$SELECT22'>'$"No"'</option>
	</select></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enable or disable password expiry."'</span></a></td></tr>
	<tr><td>'$"Home Drive"'</td><td>
	<select name="_HOMEDRIVE_" style="width: 200px;">'
		for DRIVELETTER in D E F G H I J K L M N O P Q R S T U V W X Y Z
		do
			if [ "$DRIVELETTER" = "$HOMEDRIVE" ]
			then
				SELECTED=selected
			else
				SELECTED=""
			fi
			echo '<option value="'$DRIVELETTER'" '$SELECTED'>'$DRIVELETTER'</option>'
		done
	echo '</select></td>
	<td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php/Default_User_Settings"><img class="images" alt="" src="/images/help/info.png"><span>'$"The drive letter used for home areas for windows clients joined to the domain."'</span></a></td></tr>


</tbody></table>'
fi
if [ $ACTION = SETDATA ]
then
	LOCKOUTDURATION=`echo "$DATA" | cut -s -d: -f5 | tr -cd '0-9'`
	LOCKOUTTHRESHOLD=`echo "$DATA" | cut -s -d: -f6 | tr -cd '0-9'`
	LOCKOUTOBS=`echo "$DATA" | cut -s -d: -f7 | tr -cd '0-9'`
	MAXIMUMPASSWORDAGE=`echo "$DATA" | cut -s -d: -f8 | tr -cd '0-9'`
	USERNAMESTYLE=`echo "$DATA" | cut -s -d: -f9`
	MINPASSWORDLENGTH=`echo "$DATA" | cut -s -d: -f10 | tr -cd '0-9'`
	PASSWORDCOMPLEXITY=`echo "$DATA" | cut -s -d: -f11`
	PASSWORDHISTORYLENGTH=`echo "$DATA" | cut -s -d: -f12 | tr -cd '0-9'`
	CHANGEPASSFIRSTLOGIN=`echo "$DATA" | cut -s -d: -f13`
	PASSWORDEXPIRY=`echo "$DATA" | cut -s -d: -f14`
	HOMEDRIVE=`echo "$DATA" | cut -s -d: -f15 | tr "A-Z" "a-z" | tr -cd "a-z"`
	HOMEDRIVE=`echo ${HOMEDRIVE:0:1}`

	if [ -z "$LOCKOUTDURATION" ]
	then
		echo `date`: default_user_settings - Blank lockout duration by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
	if [ -z "$LOCKOUTTHRESHOLD" ]
	then
		echo `date`: default_user_settings - Blank lockout threshold by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
	if [ -z "$LOCKOUTOBS" ]
	then
		echo `date`: default_user_settings - Blank lockout observation window by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$MAXIMUMPASSWORDAGE" ]
	then
		echo `date`: default_user_settings - Blank MAXIMUMPASSWORDAGE by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$USERNAMESTYLE" ]
	then
		echo `date`: default_user_settings - Blank usernamestyle by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$MINPASSWORDLENGTH" ]
	then
		echo `date`: default_user_settings - Blank MINPASSWORDLENGTH by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$PASSWORDCOMPLEXITY" ]
	then
		echo `date`: default_user_settings - Blank PASSWORDCOMPLEXITY by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$PASSWORDHISTORYLENGTH" ]
	then
		echo `date`: default_user_settings - Blank PASSWORDHISTORYLENGTH by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$CHANGEPASSFIRSTLOGIN" ]
	then
		echo `date`: default_user_settings - Blank CHANGEPASSFIRSTLOGIN by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$PASSWORDEXPIRY" ]
	then
		echo `date`: default_user_settings - Blank PASSWORDEXPIRY by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	if [ -z "$HOMEDRIVE" ]
	then
		echo `date`: default_user_settings - Blank HOMEDRIVE by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi

	echo `date`: default_user_settings - $LOCKOUTDURATION:$LOCKOUTTHRESHOLD:$LOCKOUTOBS:$MAXIMUMPASSWORDAGE:$USERNAMESTYLE:$MINPASSWORDLENGTH:$PASSWORDCOMPLEXITY:$PASSWORDHISTORYLENGTH:$CHANGEPASSFIRSTLOGIN:$PASSWORDEXPIRY:$HOMEDRIVE: by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

	#Modify settings in samba4

	samba-tool domain passwordsettings set --complexity="$PASSWORDCOMPLEXITY" 1>/dev/null
	samba-tool domain passwordsettings set --account-lockout-duration="$LOCKOUTDURATION" 1>/dev/null
	samba-tool domain passwordsettings set --account-lockout-threshold="$LOCKOUTTHRESHOLD" 1>/dev/null
	samba-tool domain passwordsettings set --reset-account-lockout-after="$LOCKOUTOBS" 1>/dev/null
	samba-tool domain passwordsettings set --max-pwd-age="$MAXIMUMPASSWORDAGE" 1>/dev/null
	samba-tool domain passwordsettings set --history-length="$PASSWORDHISTORYLENGTH" 1>/dev/null
	samba-tool domain passwordsettings set --min-pwd-length="$MINPASSWORDLENGTH" 1>/dev/null

	#Set username style
	[ $USERNAMESTYLE = userstyleS1 ] && USERNAMESTYLE=1
	[ $USERNAMESTYLE = userstyleS2 ] && USERNAMESTYLE=2
	[ $USERNAMESTYLE = userstyleS3 ] && USERNAMESTYLE=3
	[ $USERNAMESTYLE = userstyleS4 ] && USERNAMESTYLE=4
	[ $USERNAMESTYLE = userstyleS5 ] && USERNAMESTYLE=5
	[ $USERNAMESTYLE = userstyleS6 ] && USERNAMESTYLE=6
	[ $USERNAMESTYLE = userstyleS7 ] && USERNAMESTYLE=7
	[ $USERNAMESTYLE = userstyleS8 ] && USERNAMESTYLE=8
	[ $USERNAMESTYLE = userstyleS9 ] && USERNAMESTYLE=9
	[ $USERNAMESTYLE = userstyleS10 ] && USERNAMESTYLE=10
	echo DEFAULTSTYLE="$USERNAMESTYLE" > /opt/karoshi/server_network/default_username_style

	#Set password complexity settings
	echo PASSWORDCOMPLEXITY="$PASSWORDCOMPLEXITY" > /opt/karoshi/server_network/security/password_settings
	echo PASSWORDHISTORYLENGTH="$PASSWORDHISTORYLENGTH" >> /opt/karoshi/server_network/security/password_settings
	echo MINPASSLENGTH="$MINPASSWORDLENGTH" >> /opt/karoshi/server_network/security/password_settings
	echo CHANGEPASSFIRSTLOGIN="$CHANGEPASSFIRSTLOGIN" >> /opt/karoshi/server_network/security/password_settings
	echo PASSWORDEXPIRY="$PASSWORDEXPIRY" >> /opt/karoshi/server_network/security/password_settings
	echo LOCKOUTDURATION="$LOCKOUTDURATION" >> /opt/karoshi/server_network/security/password_settings
	echo LOCKOUTOBS="$LOCKOUTOBS" >> /opt/karoshi/server_network/security/password_settings
	echo MINPASSWORDLENGTH="$MINPASSWORDLENGTH" >> /opt/karoshi/server_network/security/password_settings
	echo MAXIMUMPASSWORDAGE="$MAXIMUMPASSWORDAGE" >> /opt/karoshi/server_network/security/password_settings

	#Set homedrive
	sed -i '/^$homedrive=/c\$homedrive="'$HOMEDRIVE':"' /var/lib/samba/netlogon/logonform.kix
	exit $MODSTATUS
fi
exit
