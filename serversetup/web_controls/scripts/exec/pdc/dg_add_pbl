#!/bin/bash
#Copyright (C) 2008 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/dg_add_pbl_cgi
then
echo `date`: dg_add_pbl - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/dg_add_pbl_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/dg_add_pbl.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $dg_add_pbl_cgi'check' ]
then
echo `date`: dg_add_pbl - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: dg_add_pbl - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: dg_add_pbl - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
WEBADDRESS=`echo "$DATA" | cut -s -d: -f4`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: dg_add_pbl - Not called by dg_add_pbl.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: dg_add_pbl - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: dg_add_pbl - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $WEBADDRESS'null' = null ]
then
echo `date`: dg_add_pbl - Blank firstname by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: dg_add_pbl - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: dg_add_pbl - adding $WEBADDRESS by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#Get squid server name
[ ! -f /opt/karoshi/server_network/proxyserver ] && exit 101
PROXYSERVER=`sed -n 1,1p /opt/karoshi/server_network/proxyserver`

if [ $PROXYSERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $PROXYSERVER '
#If the address is not already listed then add the address
if [ `grep -c ^'$WEBADDRESS' /etc/dansguardian/pbl` = 0 ]
then
echo '$WEBADDRESS' >> /etc/dansguardian/pbl
#Sort list
sort -u /etc/dansguardian/pbl > /etc/dansguardian/pbl.$$
rm -f /etc/dansguardian/pbl
mv /etc/dansguardian/pbl.$$ /etc/dansguardian/pbl
touch /etc/dansguardian/activate_changes
fi
'
else
#If the address is not already listed then add the address
if [ `grep -c ^$WEBADDRESS /etc/dansguardian/pbl` = 0 ]
then
echo $WEBADDRESS >> /etc/dansguardian/pbl
#Sort list
sort -u /etc/dansguardian/pbl > /etc/dansguardian/pbl.$$
rm -f /etc/dansguardian/pbl
mv /etc/dansguardian/pbl.$$ /etc/dansguardian/pbl
touch /etc/dansguardian/activate_changes
fi
fi






exit
############################
#Create user on colossus
############################
if [ -f /opt/karoshi/serversetup/variables/ssh/colossusssh ]
then
ssh -x -o PasswordAuthentication=no colossus '
useradd -g '$PRIMARYGROUP' -d '$HOMEPATH'/'$NEWUSERNAME' -c '$NEWUSERNAME' -m '$NEWUSERNAME' ; echo '$NEWUSERNAME':'$NEWUSERPASSWORD' | chpasswd ; echo -e '$NEWUSERPASSWORD'"\n"'$NEWUSERPASSWORD'|smbpasswd -a -s '$NEWUSERNAME' 1>/dev/null ; mkdir '$HOMEPATH'/'$NEWUSERNAME'/Mail ; /opt/karoshi/"useful scripts"/createmailfolders ; cp /opt/karoshi/.tempdata/INBOX.* '$HOMEPATH'/'$NEWUSERNAME'/Mail/ ; cp /opt/karoshi/.tempdata/.mailboxlist '$HOMEPATH'/'$NEWUSERNAME' ; chown -R '$NEWUSERNAME:$PRIMARYGROUP' '$HOMEPATH'/'$NEWUSERNAME'/ ; chmod -R 0600 '$HOMEPATH'/'$NEWUSERNAME'/ ; chmod u+X '-R $HOMEPATH'/'$NEWUSERNAME'/
#Create user on moodle
/opt/karoshi/"useful scripts"/moodle_dg_add_pbl '$NEWUSERNAME':'$PRIMARYGROUP'
'
fi
#############################
#Create moodle user on cassandra
#############################
if [ -f /opt/karoshi/serversetup/variables/ssh/cassandra ]
then
ssh -x -o PasswordAuthentication=no cassandra '
/opt/karoshi/"useful scripts"/moodle_dg_add_pbl '$NEWUSERNAME':'$PRIMARYGROUP'
'
fi
exit $CREATE_USER_STATUS
