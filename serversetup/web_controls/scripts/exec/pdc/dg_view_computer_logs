#!/bin/bash
#Copyright (C) 2008 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################

if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/dg_view_computer_logs_cgi
then
	echo `date`: dg_view_computer_logs - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/dg_view_computer_logs_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/dg_view_computer_logs.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $dg_view_computer_logs_cgi'check' ]
then
	echo `date`: dg_view_computer_logs - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/dg_view_computer_logs_cgi
then
	echo `date`: dg_view_computer_logs - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/dg_view_computer_logs_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/dg_view_computer_logs.cgi | cut -d' ' -f1`
[ -z "$MD5SUM2" ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $dg_view_computer_logs_cgi'check' ]
then
	echo `date`: dg_view_computer_logs - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: dg_view_computer_logs - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ -z "$DATA" ]
then
	echo `date`: dg_view_computer_logs - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
TCPIP=`echo "$DATA" | cut -s -d: -f4`
DAY=`echo "$DATA" | cut -s -d: -f5`
MONTH=`echo "$DATA" | cut -s -d: -f6`
YEAR=`echo "$DATA" | cut -s -d: -f7`
DETAILED=`echo "$DATA" | cut -s -d: -f8`
MOBILE=`echo "$DATA" | cut -s -d: -f9`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
	echo `date`: dg_view_computer_logs - Not called by dg_computer_logs.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ -z "$REMOTE_USER" ]
then
	echo `date`: dg_view_computer_logs - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: dg_view_computer_logs - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$TCPIP" ]
then
	echo `date`: dg_view_computer_logs - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$DAY" ]
then
	echo `date`: dg_view_computer_logs - Blank day by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$MONTH" ]
then
	echo `date`: dg_view_computer_logs - Blank month by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$YEAR" ]
then
	echo `date`: dg_view_computer_logs - Blank year by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$DETAILED" ]
then
	echo `date`: dg_view_user_logs - Blank detail by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
	echo `date`: dg_view_computer_logs - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

echo `date`: dg_view_computer_logs - Viewing logs "for" $TCPIP $DAY-$MONTH-$YEAR by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#View logs

TABLECLASS=standard
WIDTH1=60
WIDTH2=90
WIDTH3=110
if [ $MOBILE = yes ]
then
	TABLECLASS=mobilestandard
	FILTERMSG=""
	WIDTH1=30
	WIDTH2=60
	WIDTH3=90
fi

#Set detailed path

if [ $DETAILED = yes ]
then
	MACHINES=machines_detailed
	DETAIL_ICON=normal_logs.png
	DETAILED2=no
	DETAILEDLOGSMSG=$"Normal logs"
else
	MACHINES=machines
	DETAIL_ICON=detailed_logs.png
	DETAILED2=yes
	DETAILEDLOGSMSG=$"Detailed logs"
fi

#Create table header
if [ "$MOBILE" = no ]
then
	echo '<table class="'$TABLECLASS'" style="text-align: left;"><tbody><tr><td style="vertical-align: top;"><b>'$"Computer Logs"' '$TCPIP' '$DAY'-'$MONTH'-'$YEAR'</b></td><td style="vertical-align: top; width: 25px;"> <form action="/cgi-bin/admin/dg_view_computer_logs.cgi" method="post" target="_top">
<input name="_TCPIP_'$TCPIP'_DATE_'$DAY'-'$MONTH'-'$YEAR'_DETAILED_'$DETAILED2'_" type="submit" class="button" value="'$DETAILEDLOGSMSG'">
</form></td></tr></tbody></table><br></div><div id="infobox">'
else
	echo '<b>'$"Computer Logs"' '$TCPIP' '$DAY'-'$MONTH'-'$YEAR'</b><br><br>'
fi

function create_temp_logfile {
#Create a temporary log file from all of the servers
if [ $PROXYSERVER = `hostname-fqdn` ]
then

	LOGTYPE="notset"
	[ -f /opt/karoshi/logs/internetlogs/$DAY-$MONTH-$YEAR/$MACHINES/$TCPIP ] && LOGTYPE=text
	[ -f /opt/karoshi/logs/internetlogs/$DAY-$MONTH-$YEAR/$MACHINES/$TCPIP.tar.gz ] && LOGTYPE=archive
	[ $LOGTYPE = text ] && cat /opt/karoshi/logs/internetlogs/$DAY-$MONTH-$YEAR/$MACHINES/$TCPIP >> /opt/karoshi/.tempdata/$TCPIP.$$
	[ $LOGTYPE = archive ] && tar -xzOf /opt/karoshi/logs/internetlogs/$DAY-$MONTH-$YEAR/$MACHINES/$TCPIP.tar.gz >> /opt/karoshi/.tempdata/$TCPIP.$$
else
	ssh -x -o PasswordAuthentication=no $PROXYSERVER '
	LOGTYPE="notset"
	[ -f /opt/karoshi/logs/internetlogs/'$DAY'-'$MONTH'-'$YEAR'/'$MACHINES'/'$TCPIP' ] && LOGTYPE=text
	[ -f /opt/karoshi/logs/internetlogs/'$DAY'-'$MONTH'-'$YEAR'/'$MACHINES'/'$TCPIP'.tar.gz ] && LOGTYPE=archive
	[ $LOGTYPE = text ] && exit 105
	[ $LOGTYPE = archive ] && exit 106
	'
	LOGTYPE=$?
	[ $LOGTYPE = 105 ] && ssh $PROXYSERVER ' cat /opt/karoshi/logs/internetlogs/'$DAY'-'$MONTH'-'$YEAR'/'$MACHINES'/'$TCPIP' ' >> /opt/karoshi/.tempdata/$TCPIP.$$
	[ $LOGTYPE = 106 ] && ssh $PROXYSERVER ' tar -xzOf /opt/karoshi/logs/internetlogs/'$DAY'-'$MONTH'-'$YEAR'/'$MACHINES'/'$TCPIP'.tar.gz ' >> /opt/karoshi/.tempdata/$TCPIP.$$
fi
}

function viewlogs {
if [ -f /opt/karoshi/.tempdata/$TCPIP.$$ ]
then
	echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '$WIDTH1'px;"><b>'$"Filter"'</b></th><th style="width: '$WIDTH2'px;"><b>'$"Time"'</b></th><th></th><th style="width: '$WIDTH3'px;"><b>'$"Username"'</b></th><th></th><th><b>'$"Website"'</b></th></tr></thead><tbody>'
sort -t">" -s -k 6 /opt/karoshi/.tempdata/$TCPIP.$$
	rm -f /opt/karoshi/.tempdata/$TCPIP.$$
	echo '</tbody></table><br>'
else
	echo $"No logs exist for this TCPIP address."
fi
}


#Get squid server name
[ ! -f /opt/karoshi/server_network/proxyserver ] && exit 101

if [ -d /opt/karoshi/server_network/proxyservers/ ]
then
	for PROXYSERVER in `ls -1 /opt/karoshi/server_network/proxyservers`
	do
		create_temp_logfile
	done
	viewlogs
else 
	PROXYSERVER=`sed -n 1,1p /opt/karoshi/server_network/proxyserver`
	create_temp_logfile
	viewlogs
fi
exit

