#!/bin/bash
#Copyright (C) 2008 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################

if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/dg_view_user_logs_cgi
then
	echo "$(date): dg_view_user_logs - No MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/dg_view_user_logs_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/dg_view_user_logs.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$dg_view_user_logs_cgi"'check' ]
then
	echo "$(date): dg_view_user_logs - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/dg_view_user_logs_cgi
then
	echo "$(date): dg_view_user_logs - No MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/dg_view_user_logs_cgi
MD5SUM2=$(md5sum /var/www/cgi-bin_karoshi/tech/dg_view_user_logs.cgi | cut -d' ' -f1)
[ -z "$MD5SUM2" ] && MD5SUM2=not_set
if [ "$MD5SUM2"'check' != "$dg_view_user_logs_cgi"'check' ]
then
	echo "$(date): dg_view_user_logs - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): dg_view_user_logs - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-@')
if [ -z "$DATA" ]
then
	echo "$(date): dg_view_user_logs - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
USERNAME=$(echo "$DATA" | cut -s -d: -f4)
DAY=$(echo "$DATA" | cut -s -d: -f5)
MONTH=$(echo "$DATA" | cut -s -d: -f6)
YEAR=$(echo "$DATA" | cut -s -d: -f7)
DETAILED=$(echo "$DATA" | cut -s -d: -f8)
MOBILE=$(echo "$DATA" | cut -s -d: -f9)


########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ] && [ "$REMOTE_MD5"'check' != "$MD5SUM2"'check' ]
then
	echo "$(date): dg_view_user_logs - Not called by dg_view_user_logs.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ -z "$REMOTE_USER" ]
then
	echo "$(date): dg_view_user_logs - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): dg_view_user_logs - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$USERNAME" ]
then
	echo "$(date): dg_view_user_logs - Blank username by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [ -z "$DAY" ]
then
	echo "$(date): dg_view_user_logs - Blank day by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [ -z "$MONTH" ]
then
	echo "$(date): dg_view_user_logs - Blank month by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [ -z "$YEAR" ]
then
	echo "$(date): dg_view_user_logs - Blank year by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$DETAILED" ]
then
	echo "$(date): dg_view_user_logs - Blank detail by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$DETAILED" != yes ] && [ "$DETAILED" != no ]
then
	echo "$(date): dg_view_user_logs - Incorrect detail value by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]] && [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_tech) != 1 ]]
then
	echo "$(date): dg_view_user_logs - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

echo "$(date): dg_view_user_logs - Viewing logs for $USERNAME $DAY-$MONTH-$YEAR by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

source /opt/karoshi/server_network/domain_information/domain_name

#View logs
WIDTH=100
WIDTH1=60
WIDTH2=90
WIDTH3=250
WIDTH4=250
TABLECLASS=standard
ICON1=/images/submenus/internet/internet_ban.png
ICON3=/images/submenus/internet/internet_usage.png
ICON4=/images/submenus/user/adduser.png

if [ "$MOBILE" = yes ]
then
	WIDTH=90
	WIDTH1=30
	WIDTH2=60
	WIDTH3=90
	WIDTH4=90
	TABLECLASS=mobilestandard
	ICON1=/images/submenus/internet/internet_banm.png
	ICON3=/images/submenus/internet/internet_usagem.png
	ICON4=/images/submenus/user/adduserm.png
fi

#Set detailed path

if [ "$DETAILED" = yes ]
then
	USERS=users_detailed
	DETAILED2=no
	DETAILEDLOGSMSG=$"Normal Logs"
	DETAILEDLOGSMSG2=$"View the normal logs for this user."
	ICON2=/images/submenus/internet/normal_logs.png
	[ "$MOBILE" = yes ] && ICON2=/images/submenus/internet/normal_logsm.png
else
	USERS=users
	DETAILED2=yes
	DETAILEDLOGSMSG=$"Detailed Logs"
	DETAILEDLOGSMSG2=$"View the detailed logs for this user."
	ICON2=/images/submenus/internet/detailed_logs.png
	[ "$MOBILE" = yes ] && ICON2=/images/submenus/internet/detailed_logsm.png
fi

#Create table header

echo '<div class="sectiontitle">'$"User Internet Logs"' '"$USERNAME"' '"$DAY"'-'"$MONTH"'-'"$YEAR"'</div>
<table class="tablesorter"><tbody><tr>

	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<form action="dg_view_user_logs.cgi" method="post">
			<button class="info" name="_DetailedLogs_" value="_USERNAME_'"$USERNAME"'_DATE_'"$DAY"'-'"$MONTH"'-'"$YEAR"'_DETAILED_'"$DETAILED2"'_">
				<img src="'$ICON2'" alt="'"$DETAILEDLOGSMSG"'">
				<span>'"$DETAILEDLOGSMSG"'</span><br>
				'"$DETAILEDLOGSMSG"'
			</button>
		</form>
	</td>

	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<form action="dg_view_user_usage.cgi" method="post">
			<button class="info" name="_InternetUsage_" value="_USERNAME_'"$USERNAME"'_">
				<img src="'$ICON3'" alt="'$"Internet Usage"'">
				<span>'$"View the internet usage for this user."'</span><br>
				'$"Internet Usage"'
			</button>
		</form>
	</td>
'

[ "$MOBILE" = yes ] && echo '</tr><tr>'

echo '
	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<form action="user_internet_access.cgi" method="post">
			<button class="info" name="_BanUser_" value="_ACTION_view_USERNAMES_'"$USERNAME"'_">
				<img src="'$ICON1'" alt="'$"Ban User"'">
				<span>'$"Ban internet access for this user."'</span><br>
				'$"Ban User"'
			</button>
		</form>
	</td>

	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<form action="dg_view_user_logs_fm.cgi" method="post">
			<button class="info" name="_ChangeUser_" value="_">
				<img src="'$ICON4'" alt="'$"Change User"'">
				<span>'$"View logs for a different user."'</span><br>
				'$"Change User"'
			</button>
		</form>
	</td>

</tr></tbody></table>'

[ "$MOBILE" = no ] && echo '</div><div id="infobox">'

function create_temp_logfile {
#Create a temporary log file from all of the servers

if [[ "$PROXYSERVER" = $(hostname-fqdn) ]]
then
	LOGTYPE="notset"
	if [ -f /opt/karoshi/logs/internetlogs/"$DAY-$MONTH-$YEAR/$USERS/$USERNAME" ]
	then
		#Text log
		cat /opt/karoshi/logs/internetlogs/"$DAY-$MONTH-$YEAR/$USERS/$USERNAME" >> /opt/karoshi/.tempdata/"$USERNAME.$$"
	elif [ -f /opt/karoshi/logs/internetlogs/"$DAY-$MONTH-$YEAR/$USERS/$USERNAME".tar.gz ]
	then
		#Archive log
		tar -xzOf /opt/karoshi/logs/internetlogs/"$DAY-$MONTH-$YEAR/$USERS/$USERNAME".tar.gz >> /opt/karoshi/.tempdata/"$USERNAME.$$"
	elif [ -f /opt/karoshi/logs/internetlogs/"$DAY-$MONTH-$YEAR/$USERS".tar.gz ]
	then
		#Global archive log
		tar -xzOf "/opt/karoshi/logs/internetlogs/$DAY-$MONTH-$YEAR/$USERS.tar.gz $USERS/$USERNAME" >> /opt/karoshi/.tempdata/"$USERNAME.$$"
	fi
else
	ssh -x -o PasswordAuthentication=no "$PROXYSERVER" '

	if [ -f /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'/'"$USERNAME"' ]
	then
		#Text log
		exit 105
	elif [ -f /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'/'"$USERNAME"'.tar.gz ]
	then
		#Archive log
		exit 106
	elif [ -f /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'.tar.gz ]
	then
		#Global archive log
		exit 107
	fi
	'
	LOGTYPE=$?
	[ "$LOGTYPE" = 105 ] && ssh "$PROXYSERVER" ' cat /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'/'"$USERNAME"' ' >> /opt/karoshi/.tempdata/"$USERNAME.$$"
	[ "$LOGTYPE" = 106 ] && ssh "$PROXYSERVER" ' tar -xzOf /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'/'"$USERNAME"'.tar.gz ' >> /opt/karoshi/.tempdata/"$USERNAME.$$"
	[ "$LOGTYPE" = 107 ] && ssh "$PROXYSERVER" ' tar -xzOf /opt/karoshi/logs/internetlogs/'"$DAY"'-'"$MONTH"'-'"$YEAR"'/'"$USERS"'.tar.gz  '"$USERS"'/'"$USERNAME"'' >> /opt/karoshi/.tempdata/"$USERNAME.$$"
fi
}

function viewlogs {
if [ -f /opt/karoshi/.tempdata/"$USERNAME.$$" ] && [[ $(wc -l /opt/karoshi/.tempdata/"$USERNAME.$$" | cut -d" " -f1) -gt 0 ]]
then
	echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH1"'px;"><b>'$"Filter"'</b></th><th style="width: '"$WIDTH2"'px;"><b>'$"Time"'</b></th><th></th><th style="width: '"$WIDTH3"'px;"><b>'$"Client"'</b></th><th></th><th style="width: '"$WIDTH4"'px;"><b>'$"Website"'</b></th></tr></thead><tbody>'
	sort -t">" -s -k 6 /opt/karoshi/.tempdata/"$USERNAME.$$"
	rm -f /opt/karoshi/.tempdata/"$USERNAME.$$"
	echo '</tbody></table><br>'
else
	echo $"No logs exist for this username."
fi
}


#Get squid server name
[ ! -f /opt/karoshi/server_network/proxyserver ] && exit 101

if [ -d /opt/karoshi/server_network/proxyservers/ ]
then
	for PROXYSERVER in $(ls -1 /opt/karoshi/server_network/proxyservers)
	do
		create_temp_logfile
	done
	viewlogs
else 
	PROXYSERVER=$(sed -n 1,1p /opt/karoshi/server_network/proxyserver)
	create_temp_logfile
	viewlogs
fi
exit


