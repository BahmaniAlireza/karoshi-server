#!/bin/bash
#Copyright (C) 2007  The karoshi Team

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/domain_information_cgi
then
echo `date`: domain_information - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/domain_information_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/domain_information.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $domain_information_cgi'check' ]
then
echo `date`: domain_information - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/domain_information_cgi
then
echo `date`: domain_information - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/domain_information_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/domain_information.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2 != $domain_information_cgi ]
then
echo `date`: domain_information - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: domain_information - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
REMOTE_MD5=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: domain_information - Not called by domain_information.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: domain_information - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: domain_information - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: domain_information - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
echo `date`: domain_information - showing information to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

####################
#Get domain information
####################
SAMBADOMAIN=`grep workgroup /etc/samba/smb.conf | sed 's/workgroup = //g' | sed 's/\t//g' | tr 'A-Z' 'a-z'`
GATEWAY=

DHCPCONFPATH=/etc/dhcp/dhcpd.conf
[ -f /etc/dhcp3/dhcpd.conf ] && DHCPCONFPATH=/etc/dhcp3/dhcpd.conf


#Check if this server has been set up as a dhcp server
SHOWDHCP=no
if [ -f /opt/karoshi/server_network/dhcpserver ]
then
SHOWDHCP=yes
CURRENTDOMAINSERVERS=`grep domain-name-servers $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f3 | sed 's/;//'`
CURRENTNETBIOSSERVERS=`grep netbios-name-servers $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f3 | sed 's/;//'`
CURRENTROUTERS=`grep routers $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f3 | sed 's/;//'`
CURRENTSUBNETMASK=`grep subnet-mask $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f3 | sed 's/;//g'`
SUBNETINFO=`grep ^subnet $DHCPCONFPATH | sed -n 1,1p`
CURRENTSUBNET=`echo $SUBNETINFO | cut -d' ' -f2`
STARTADDRESS=`grep range $DHCPCONFPATH | sed -n 1,1p | tr -cd '.0-9 \n' | sed 's/ * / /g' | cut -d' ' -f2`
ENDADDRESS=`grep range $DHCPCONFPATH | sed -n 1,1p | tr -cd '.0-9 \n' | sed 's/ * / /g' | cut -d' ' -f3`
CURRENTDEFAULTLEASETIME=`grep default-lease-time $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f2 | sed 's/;//g'`
CURRENTMAXLEASETIME=`grep max-lease-time $DHCPCONFPATH | sed -n 1,1p | cut -d' ' -f2 | sed 's/;//g'`

[ `echo $CURRENTNETBIOSSERVERS'null' | sed 's/ //g'` = null ] && CURRENTNETBIOSSERVERS=NOTSET
[ `echo $CURRENTMAXLEASETIME'null' | sed 's/ //g'` = null ] && CURRENTMAXLEASETIME=43200

[ `echo $CURRENTDOMAINSERVERS'null' | sed 's/ //g'` = null ] && CURRENTDOMAINSERVERS=NOTSET
if [ `echo $CURRENTNETBIOSSERVERS'null' | sed 's/ //g'` = null ]
then
CURRENTNETBIOSSERVERS=$CURRENTDOMAINSERVERS
fi
if [ `echo $CURRENTDOMAINSERVERS'null' | sed 's/ //g'` = null ]
then
CURRENTDOMAINSERVERS=`cat /etc/resolv.conf | grep nameserver | cut -d' ' -f2`
fi
[ `echo $CURRENTROUTERS'null' | sed 's/ //g'` = null ] && CURRENTROUTERS=NOTSET
[ `echo $CURRENTSUBNETMASK'null' | sed 's/ //g'` = null ] && CURRENTSUBNETMASK=NOTSET
[ `echo $CURRENTRANGE1'null' | sed 's/ //g'` = null ] && CURRENTRANGE1=NOTSET
[ `echo $CURRENTRANGE2'null' | sed 's/ //g'` = null ] && CURRENTRANGE2=NOTSET
[ `echo $CURRENTDEFAULTLEASETIME'null' | sed 's/ //g'` = null ] && CURRENTDEFAULTLEASETIME=21600

fi

NTPSERVER=`grep ^server /etc/ntp.conf | cut -d' ' -f2-`
NAMESERVER=`grep ^nameserver /etc/resolv.conf | cut -d' ' -f2-`
DEFAULTGATEWAY=`ip route show | grep default | cut -d' ' -f3`

############################
#Language
############################

STYLESHEET=defaultstyle.css
TIMEOUT=300
NOTIMEOUT=127.0.0.1
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server


source /opt/karoshi/server_network/domain_information/domain_name

####################
#Show domain information
####################
echo '<div class="sectiontitle">'$"Domain Information"'</div><br>'

echo '
  <table class="standard" style="text-align: left;" border="0" cellpadding="2" cellspacing="2"><tbody>
<tr><td style="width: 180px;"><b>'$"Domain"'</b></td><td>'$SAMBADOMAIN'</td></tr>
<tr><td style="width: 180px;"><b>'$"Realm"'</b></td><td>'$REALM'</td></tr>
<tr><td style="width: 180px;"><b>'$"Gateway"'</b></td><td>'$DEFAULTGATEWAY'</td></tr>
<tr><td style="width: 180px;"><b>'$"Name Server"'</b></td><td>'$NAMESERVER'</td></tr>
<tr><td style="width: 180px;"><b>'$"NTP Server"'</b></td><td>'$NTPSERVER'</td></tr>
'

if [ $SHOWDHCP = yes ]
then
echo '
<tr><td valign="bottom" style="width: 180px; height: 40px;"><b>'$"DHCP Settings"'</b></td><td></td></tr>
<tr><td style="width: 180px;"><b>'$"Name Server"'</b></td><td>'$CURRENTDOMAINSERVERS'</td></tr>
<tr><td style="width: 180px;"><b>'$"DHCP Range"'</b></td><td>'$STARTADDRESS - $ENDADDRESS'</td></tr>
'
fi
echo '</tbody></table>'
exit
