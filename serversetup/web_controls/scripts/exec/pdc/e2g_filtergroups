#!/bin/bash
#Copyright (C) 2014 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/e2g_filtergroups_cgi
then
	echo "$(date): e2g_filtergroups - No admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/e2g_filtergroups_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/e2g_filtergroups.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$e2g_filtergroups_cgi"'check' ]
then
	echo "$(date): e2g_filtergroups - Incorrect admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/e2g_filtergroups_cgi
then
	echo "$(date): e2g_filtergroups - No tech MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/e2g_filtergroups_cgi
MD5SUM2=$(md5sum /var/www/cgi-bin_karoshi/tech/e2g_filtergroups.cgi | cut -d' ' -f1)
[ -z "$MD5SUM2" ] && MD5SUM2=not_set
if [ "$MD5SUM2"'check' != "$e2g_filtergroups_cgi"'check' ]
then
	echo "$(date): e2g_filtergroups - Incorrect tech MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs="$#"
if [ "$numArgs" != 0 ]
then
	echo "$(date): e2g_filtergroups - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-+%')

if [ -z "$DATA" ]
then
	echo "$(date): e2g_filtergroups - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
ACTION=$(echo "$DATA" | cut -s -d: -f4)
FILTERNAME=$(echo "$DATA" | cut -s -d: -f5)
FILTERDATA=$(echo "$DATA" | cut -s -d: -f6)
FILTERDATA2=$(echo "$DATA" | cut -s -d: -f7)
FILTERDATA3=$(echo "$DATA" | cut -s -d: -f8)
FILTERDATA4=$(echo "$DATA" | cut -s -d: -f9)
MOBILE=$(echo "$DATA" | cut -s -d: -f10)
PROXYSERVER=$(sed -n 1,1p /opt/karoshi/server_network/proxyserver)

TABLECLASS=standard
HELPCLASS="info"
WIDTH=100
WIDTH1=165
WIDTH2=200
WIDTH3=230
WIDTH4=90
WIDTH5=300
WIDTH6=402
WIDTH7=75
ICON1=/images/submenus/internet/remove_group.png
ICON2=/images/submenus/internet/allowed_sites.png
ICON3=/images/submenus/internet/banned_sites.png
ICON4=/images/submenus/system/edit.png
ICON5=/images/submenus/system/add.png
ICON6=/images/submenus/user/groups.png
if [ "$MOBILE" = yes ]
then
	TABLECLASS=mobilestandard
	HELPCLASS="info infoleft"
	WIDTH=90
	WIDTH1=90
	WIDTH2=130
	WIDTH3=150
	WIDTH4=180
	WIDTH5=130
	WIDTH6=180
	WIDTH7=70
	ICON1=/images/submenus/internet/remove_groupm.png
	ICON2=/images/submenus/internet/allowed_sitesm.png
	ICON3=/images/submenus/internet/banned_sitesm.png
	ICON4=/images/submenus/system/editm.png
	ICON5=/images/submenus/system/addm.png
	ICON6=/images/submenus/user/groupsm.png
fi

########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ] && [ "$REMOTE_MD5"'check' != "$MD5SUM2"'check' ]
then
	echo "$(date): e2g_filtergroups - Not called by e2g_filtergroups.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): e2g_filtergroups - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): e2g_filtergroups - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo "$(date): e2g_filtergroups - Blank action by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ "$ACTION" = reallyadd ]
then
	if [ -z "$FILTERDATA2" ]
	then
		echo "$(date): e2g_filtergroups - Blank fiter description by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
	if [ -z "$FILTERDATA3" ]
	then
		echo "$(date): e2g_filtergroups - Blank filter clone by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
fi

if [ "$ACTION" = editlabel ]
then
	if [ -z "$FILTERNAME" ]
	then
		echo "$(date): e2g_filtergroups - Blank filtername by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
fi

if [ "$ACTION" = reallyeditlabel ]
then
	if [ -z "$FILTERDATA" ]
	then
		echo "$(date): e2g_filtergroups - Blank filter description by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi
	if [ -z "$FILTERDATA2" ]
	then
		echo "$(date): e2g_filtergroups - Blank filter label by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		exit 101
	fi	

fi

if [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]] && [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_tech) != 1 ]]
then
	echo "$(date): e2g_filtergroups - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

##########################
#Language
##########################

[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


source /opt/karoshi/server_network/domain_information/domain_name

function reloade2guardian {
if [[ "$PROXYSERVER" = $(hostname-fqdn) ]]
then
	service e2guardian reload 1>/dev/null
else
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$PROXYSERVER" '
	service e2guardian reload 1>/dev/null
	'
fi
}

function activatechanges {
if [ -d /opt/karoshi/server_network/proxyservers/ ]
then
	for PROXYSERVER in $(ls -1 /opt/karoshi/server_network/proxyservers)
	do
		reloade2guardian
	done
else 
	PROXYSERVER=$(sed -n 1,1p /opt/karoshi/server_network/proxyserver)
	reloade2guardian
fi
}

function copydata {
if [[ "$PROXYSERVER" != $(hostname-fqdn) ]]
then
	rsync --timeout=30 --dirs --recursive --xattrs --links --compress --delete --times --perms --executability --acls --owner --group "$SOURCEPATH" "$PROXYSERVER":"$TARGETPATH"
fi
}

function datasync {
if [ -d /opt/karoshi/server_network/proxyservers/ ]
then
	for PROXYSERVER in $(ls -1 /opt/karoshi/server_network/proxyservers)
	do
		copydata
	done
else 
	PROXYSERVER=$(sed -n 1,1p /opt/karoshi/server_network/proxyserver)
	copydata
fi
}

function restarte2gservice {
#Restart e2guardian to activate any changes made.
if [[ "$PROXYSERVER" = $(hostname-fqdn) ]]
then
	#Restart e2guardian
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/e2guardian_stop 1>/dev/null
	sleep 1
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/e2guardian_start 1>/dev/null
else
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$PROXYSERVER" '
	#Restart e2guardian
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/e2guardian_stop 1>/dev/null
	sleep 1
	/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/e2guardian_start 1>/dev/null
'
fi
}

function restarte2guardian {
if [ -d /opt/karoshi/server_network/proxyservers/ ]
then
	for PROXYSERVER in $(ls -1 /opt/karoshi/server_network/proxyservers)
	do
		restarte2gservice
	done
else 
	PROXYSERVER=$(sed -n 1,1p /opt/karoshi/server_network/proxyserver)
	restarte2gservice
fi
}

function showtitle {
echo '<form name="myform" action="e2g_filtergroups.cgi" method="post">

<div class="sectiontitle">'"$TITLE"' <a class="'"$HELPCLASS"'" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=Filter_Management'"$SUBTITLE"'"><img class="images" alt="" src="/images/help/info.png"><span>'"$HELPMSG"'</span></a></div>
<table class="tablesorter"><tbody><tr>'

if [ "$ACTION" = editfilterlists ] || [ "$ACTION" = bannedextensionlists ] || [ "$ACTION" = bannedmimetypelists ] || [ "$ACTION" = viewcustomsites ]
then
	echo '
	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<button class="info" name="____EditFilterGroup____" value="____ACTION____editfiltergroup____FILTERNAME____'"$FILTERNAME"'____">
			<img src="'$ICON4'" alt="'$"Edit Filter Group"'">
			<span>'$"Edit this filter group."'</span><br>
			'$"Edit Filter Group"'
		</button>
	</td>
	'
fi


echo '
	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<button class="info" name="____ViewFilterGroups____" value="____ACTION____view____">
			<img src="'$ICON6'" alt="'$"View Filter Groups"'">
			<span>'$"View the filter groups."'</span><br>
			'$"View Filter Groups"'
		</button>
	</td>

</tr></tbody></table></form>'

[ "$MOBILE" = no ] && echo '</div><div id="infobox">'
}


function viewfilters {
#Show add filtergroup button
echo '<form name="myform" action="e2g_filtergroups.cgi" method="post">

<div class="sectiontitle">'$"Filter Management"' <a class="'"$HELPCLASS"'" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=Filter_Management"><img class="images" alt="" src="/images/help/info.png"><span>'$"This shows the internet filter groups that are available and the groups that are assigned to them."'</span></a></div>
<table class="tablesorter"><tbody><tr>

	<td style="vertical-align: top; height: 30px; white-space: nowrap; min-width: '$WIDTH'px; text-align:center;">
		<button class="info" name="____AddFilterGroup____" value="____ACTION____add____">
			<img src="'$ICON5'" alt="'$"Add Filter Group"'">
			<span>'$"Add a new filter group."'</span><br>
			'$"Add Filter Group"'
		</button>
	</td>

</tr></tbody></table><br>
'

#Show existing filtergroups

echo '<table id="myTable" class="tablesorter" style="text-align: left;" >
<thead><tr><th style="width: 50px;"><b>'$"Name"'</b></th>'
if [ "$MOBILE" = no ]
then
	echo '<th style="width: 150px;"><b>'$"Description"'</b></th><th style="width: 130px;"><b>'$"Assigned Groups"'</b></th>'
fi
echo '<th></th><th></th></tr></thead><tbody>'

for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/*
do
	FILTERGROUP=$(basename "$FILTERGROUPS")
	source /etc/e2guardian/lists/filtergroups/"$FILTERGROUP"/details
	echo "<tr><td style=\"height: 40px;\">$FILTERGROUP</td>" 
	if [ "$MOBILE" = no ]
	then
		echo "<td>$FILTERDESC</td>" 
		echo '<td>'

		#Get list of assigned groups

		if [ "$FILTERGROUP" = f1 ]
		then
			echo $"Default Filter Group"
		else
			if [ -d /etc/e2guardian/lists/filtergroups/"$FILTERGROUP"/assigned_groups ]
			then
				for ASSIGNEDGROUPS in /etc/e2guardian/lists/filtergroups/"$FILTERGROUP"/assigned_groups/*
				do
					ASSIGNEDGROUP=$(basename "$ASSIGNEDGROUPS")
					echo "$ASSIGNEDGROUP""<br>"
				done
			fi
		fi
		echo '</td>'
	fi
	#Show actions for the filter groups
	echo '<td style="vertical-align: top;"><input name="____ACTION____editfiltergroup____FILTERNAME____'"$FILTERGROUP"'____" type="submit" class="button" value="'$"Edit Filter Group"'"></td><td style="vertical-align: top;">'
	if [ "$FILTERGROUP" != f1 ]
	then
		echo '<input name="____ACTION____deletefiltergroup____FILTERNAME____'"$FILTERGROUP"'____" type="submit" class="button" value="'$"Delete Filter Group"'">'
	fi
	echo "</td></tr>"
done
echo "</tbody></table></form>"
}

function reallyeditlabels {

FILTERDESC="${FILTERDATA2//+/ }"

if [ ! -z "$FILTERDESC" ] 
then
	echo "FILTERDESC=\"$FILTERDESC\"" > /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details
	SOURCEPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"
	TARGETPATH=/etc/e2guardian/lists/filtergroups
	datasync
fi
}

function addfiltergroup {
#Show view filtergroup button
TITLE=$"Add Filter Group"
HELPMSG=$"Enter in the label and description of new group that you want to create. Choose the filter group that you want to clone the settings from."
SUBTITLE="#Adding_extra_filter_groups"
showtitle

echo '<form name="myform" action="e2g_filtergroups.cgi" method="post">'$"The filter lists are loaded into memory for each filter group so use as few filter groups as possible."'<br><br><input type="hidden" name="____ACTION____" value="reallyadd"><table class="'"$TABLECLASS"'" style="text-align: left;" ><tbody>
<tr><td style="width: 180px;">'$"Description"'</td><td><input tabindex= "1" name="____FILTERDATA2____" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td style="width: 180px;">'$"Filter group to clone from"'</td><td><select name="____FILTERDATA3____" style="width: 200px;">'

for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/*
do
	FILTERGROUP=$(basename "$FILTERGROUPS")
	echo "<option value=\"$FILTERGROUP\">$FILTERGROUP</option>"
done

echo '</select></tbody></table><br><br><input value="'$"Submit"'" class="button" type="submit"> <input value="'$"Reset"'" class="button" type="reset"></form>
'

}

function reallyaddfiltergroup {

FILTERCLONE="$FILTERDATA3"

#Get name of new filter group
FILTERCOUNT=$(ls -1 /etc/e2guardian/lists/filtergroups/ | wc -l)
let FILTERCOUNT="$FILTERCOUNT"+1

echo "$(date): e2g_filtergroups - adding new filter group f$FILTERCOUNT by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

#Copy filter group config folder
cp -f -R /etc/e2guardian/lists/filtergroups/"$FILTERCLONE" /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"

#Delete any assigned groups
[ -d /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/assigned_groups ] && rm -f -R /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/assigned_groups

#Copy e2guardian config file
cp -f /etc/e2guardian/e2guardian"$FILTERCLONE".conf /etc/e2guardian/e2guardianf"$FILTERCOUNT".conf
#Edit e2guardian config file to look at the correct filter folder
sed -i "s/$FILTERCLONE/f$FILTERCOUNT/g" /etc/e2guardian/e2guardianf"$FILTERCOUNT".conf

#Modifiy e2guardian.conf for correct number of filters
FILTERLINENO=`grep -n ^"filtergroups =" /etc/e2guardian/e2guardian.conf | cut -d: -f1`
sed -i $FILTERLINENO"c""filtergroups = $FILTERCOUNT" /etc/e2guardian/e2guardian.conf

#Modify config files to point at the correct filter group
sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERCLONE/%/etc/e2guardian/lists/filtergroups/f$FILTERCOUNT/%g" /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/bannedsitelist
sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERCLONE/%/etc/e2guardian/lists/filtergroups/f$FILTERCOUNT/%g" /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/bannedurllist
sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERCLONE/%/etc/e2guardian/lists/filtergroups/f$FILTERCOUNT/%g" /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/exceptionsitelist
sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERCLONE/%/etc/e2guardian/lists/filtergroups/f$FILTERCOUNT/%g" /etc/e2guardian/lists/filtergroups/f"$FILTERCOUNT"/exceptionurllist

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian
TARGETPATH=/etc
datasync

restarte2guardian

#Modify details file
FILTERNAME=f"$FILTERCOUNT"
reallyeditlabels
}

function deletefiltergroup {
#Show view filtergroup button
TITLE=$"Delete Filter Group"
HELPMSG=$"This will delete all of the configuration settings for this group."
showtitle

source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details

echo '<form name="myform" action="e2g_filtergroups.cgi" method="post">
<table class="'"$TABLECLASS"'" style="text-align: left;" >
<tr><td style="width: 180px;"><b>'$"Name"'</b></td><td>'"$FILTERNAME"'</td></tr>
<tr><td><b>'$"Description"'</b></td><td>'"$FILTERDESC"'</td></tr></tbody></table><br>
'$"Are you sure you want to delete this filter group?"'<br><br><input type="hidden" name="____ACTION____" value="reallydelete"><br><input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'"><input value="'$"Submit"'" class="button" type="submit"></form>'
}

function reallydelete {
echo "$(date): e2g_filtergroups - deleting filter group $FILTERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

#Delete filter folder
rm -f -R /etc/e2guardian/lists/filtergroups/"$FILTERNAME"
#Delete e2guardian config file
rm -f /etc/e2guardian/e2guardian"$FILTERNAME".conf
#Modify e2guardian.conf with correct filter count.
FILTERCOUNT=$(ls -1 /etc/e2guardian/lists/filtergroups/ | wc -l)
FILTERLINENO=$(grep -n ^"filtergroups =" /etc/e2guardian/e2guardian.conf | cut -d: -f1)
sed -i "$FILTERLINENO""cfiltergroups = $FILTERCOUNT" /etc/e2guardian/e2guardian.conf

#Rename all filter groups so that they are in sequence
COUNTER=1
for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/*
do
	FILTERGROUP=$(basename "$FILTERGROUPS")
	#Check that the filtergroup name is correct
	if [ "$FILTERGROUP" != f"$COUNTER" ]
	then
		mv /etc/e2guardian/lists/filtergroups/"$FILTERGROUP" /etc/e2guardian/lists/filtergroups/f"$COUNTER"
		sed -i "s/$FILTERGROUP/f$COUNTER/g" /etc/e2guardian/e2guardian"$FILTERGROUP".conf
		mv /etc/e2guardian/e2guardian"$FILTERGROUP".conf /etc/e2guardian/e2guardianf"$COUNTER".conf

		#Modify config files to point at the correct filter group
		sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERGROUP/%/etc/e2guardian/lists/filtergroups/f$COUNTER/%g" /etc/e2guardian/lists/filtergroups/f"$COUNTER"/bannedsitelist
		sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERGROUP/%/etc/e2guardian/lists/filtergroups/f$COUNTER/%g" /etc/e2guardian/lists/filtergroups/f"$COUNTER"/bannedurllist
		sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERGROUP/%/etc/e2guardian/lists/filtergroups/f$COUNTER/%g" /etc/e2guardian/lists/filtergroups/f"$COUNTER"/exceptionsitelist
		sed -i "s%/etc/e2guardian/lists/filtergroups/$FILTERGROUP/%/etc/e2guardian/lists/filtergroups/f$COUNTER/%g" /etc/e2guardian/lists/filtergroups/f"$COUNTER"/exceptionurllist

	fi
	let COUNTER="$COUNTER"+1
done 

#Regenerate filter lists
/opt/karoshi/serversetup/modules/squid/scripts/e2gupdatefilterlist

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian
TARGETPATH=/etc
datasync

restarte2guardian
}

function editfiltergroup {

TITLE=$"Edit Filter Group"
HELPMSG=$"This allows you assign user groups to filter groups. Groups that are not assigned to a filter group are automatically assigned to the default filter group."
SUBTITLE="#Edit_Filter_Group"
showtitle

source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details

#Show details for the group
echo '<form name="myform" action="e2g_filtergroups.cgi" method="post"><input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'"><input type="hidden" name="____ACTION____" value="reallyeditlable"><table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: '"$WIDTH1"'px;"><b>'$"Description"'</b></td><td><input tabindex= "2" value="'"$FILTERDESC"'" name="____FILTERDATA2____" style="width: '"$WIDTH2"'px;" size="20" type="text"></td><td><input value='$"Submit"' class="button" type="submit"></td></tr></tbody></table><br>'

#Show option to edit banned site lists and part banned site lists
echo '</form><form name="myform" action="e2g_filtergroups.cgi" method="post">
<input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'">
<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH6"'px;"><b>'$"Filter Group Options"'</b></th><th style="width: '"$WIDTH7"'px;"><b>'$"Edit"'</b></th></tr></thead><tbody>
<tr><td>'$"Custom Allowed Sites"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditCustomAllowedSites____" value="____ACTION____viewcustomsites____FILTERDATA____allowed____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Custom Allowed Sites"'">
	<span>'$"Edit"'<br>'$"Custom Allowed Sites"'</span>
	</button>
</td></tr>
<tr><td>'$"Custom Banned Sites"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditCustomBannedSites____" value="____ACTION____viewcustomsites____FILTERDATA____banned____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Custom Banned Sites"'">
	<span>'$"Edit"'<br>'$"Custom Banned Sites"'</span>
	</button>
</td></tr>
<tr><td>'$"Banned Categories"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditBannedDomains____" value="____ACTION____editfilterlists____FILTERDATA____domains____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Banned Categories"'">
	<span>'$"Edit"'<br>'$"Banned Categories"'</span>
	</button>
</td></tr>'
#echo "<tr><td>$"Part Banned Site Lists"</td><td style=\"vertical-align: top;\"><a class=\"info\" href=\"javascript:void(0)\"><input name=\"_ACTION_editfilterlists_FILTERDATA_urls_\" type=\"image\" class=\"images\" src=\"$ICON4\" value=\"\"><span>$"Edit"<br>$"Part Banned Site Lists"</span></a></td></tr>"
echo '<tr><td>'$"Banned Phrase Categories"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditBannedPhraseCategories____" value="____ACTION____editfilterlists____FILTERDATA____phraselists____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Banned Phrase Categories"'">
	<span>'$"Edit"'<br>'$"Banned Phrase Categories"'</span>
	</button>
</td></tr>
<tr><td>'$"Banned Extensions"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditBannedExtensions____" value="____ACTION____bannedextensionlists____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Banned Extensions"'">
	<span>'$"Edit"'<br>'$"Banned Extensions"'</span>
	</button>
</td></tr>
<tr><td>'$"Banned Mime Types"'</td><td style="vertical-align: top;">
	<button class="'"$HELPCLASS"'" name="____EditBannedMimeTypes____" value="____ACTION____bannedmimetypelists____">
	<img src="'"$ICON4"'" alt="'$"Edit" $"Banned Mime Types"'">
	<span>'$"Edit"'<br>'$"Banned Mime Types"'</span>
	</button>
</td></tr>
</tbody></table><br>
'

echo '</form><form name="myform" action="e2g_filtergroups.cgi" method="post">'

if [ "$FILTERNAME" != f1 ]
then
	#Show option to add in a group
	echo "<input type=\"hidden\" name=\"____FILTERNAME____\" value=\"$FILTERNAME\"><input type=\"hidden\" name=\"____ACTION____\" value=\"reallyaddgroup\">"
	echo '<b>'$"Add User Group"'</b><br><table class="tablesorter" style="text-align: left;" >
	<tr><td style="width: '$WIDTH1'px;">'$"Group"'</td><td>'

	/opt/karoshi/web_controls/group_dropdown_list | sed 's/_GROUP_/____FILTERDATA____/g' | sed 's/style="width: 200px;">/style="width: '"$WIDTH2"'px;">/g'

	echo '</td><td><input value="'$"Add Group"'" class="button" type="submit"></td></tr></tbody></table><br>'

	echo '</form><form name="myform" action="e2g_filtergroups.cgi" method="post">'


	#Show any existing groups that have been assigned.
	if [ -d /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups ]
	then
		echo '<table id="myTable2" class="tablesorter" style="text-align: left;" ><thead><tr><th style="width: '"$WIDTH6"'px;"><b>'$"Assigned User Groups"'</b></th><th style="width: '"$WIDTH7"'px;"><b>'$"Remove"'</b></th></tr></thead><tbody>
		'
		for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups/*
		do
			FILTERGROUP=$(basename "$FILTERGROUPS")
			echo '<tr><td style="width: 180px;">'"$FILTERGROUP"'</td><td>
				<button class="'"$HELPCLASS"'" name="____RemoveFilterGroup____" value="____ACTION____removegroup____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$FILTERGROUP"'____">
				<img src="'"$ICON1"'" alt="'"$FILTERGROUP" $"Remove"'">
				<span>'$"Remove"'<br>'"$FILTERGROUP"'</span>
				</button>
			</td></tr>'
			done
		echo '</tbody></table>'
	fi
fi
echo '</form>'
}

function removegroup {
FILTERGROUP="$FILTERDATA"
echo "$(date): e2g_filtergroups - removing $FILTERGROUP from filtergroup $FILTERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

#Remove filtergroup flag file
[ -f "/etc/e2guardian/lists/filtergroups/$FILTERNAME/assigned_groups/$FILTERGROUP" ] && rm -f "/etc/e2guardian/lists/filtergroups/$FILTERNAME/assigned_groups/$FILTERGROUP"

#Remove assigned_groups folder if it is empty
[[ $(ls -1 /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups | wc -l) = 0 ]] && rm -f -R /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups

#Regenerate filter lists
/opt/karoshi/serversetup/modules/squid/scripts/e2gupdatefilterlist

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroupslist
TARGETPATH=/etc/e2guardian/lists
datasync

}

function reallyaddgroup {
FILTERGROUP="$FILTERDATA"
echo "$(date): e2g_filtergroups - adding $FILTERGROUP to filter $FILTERNAME by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"


#Create flag file
[ ! -d /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups ] && mkdir -p /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/assigned_groups
touch /etc/e2guardian/lists/filtergroups/"$FILTERNAME/assigned_groups/$FILTERGROUP"

#Remove flag file from any other filtergroup.
for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/*
do
	GROUP=$(basename "$FILTERGROUPS")
	if [ "$GROUP" != "$FILTERNAME" ]
	then
		if [ -d /etc/e2guardian/lists/filtergroups/"$GROUP"/assigned_groups ]
		then
			[ -f "/etc/e2guardian/lists/filtergroups/$GROUP/assigned_groups/$FILTERGROUP" ] && rm -f "/etc/e2guardian/lists/filtergroups/$GROUP/assigned_groups/$FILTERGROUP"

			#Remove assigned_groups folder if it is empty
			[[ $(ls -1 /etc/e2guardian/lists/filtergroups/"$GROUP"/assigned_groups | wc -l) = 0 ]] && rm -f -R /etc/e2guardian/lists/filtergroups/"$GROUP"/assigned_groups
		fi
	fi
done

#Regenerate filter lists
/opt/karoshi/serversetup/modules/squid/scripts/e2gupdatefilterlist

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroupslist
TARGETPATH=/etc/e2guardian/lists
datasync
}

function editfilterlists {

FILENAME=bannedsitelist
FILTERTYPE=domains
SEARCHTERM=blacklists
COL1=6
COL2=7
TITLE=$"Banned Categories"
HELPMSG=$"This allows you to choose the domain categories that are added for filtering to the filter group."

if [ "$FILTERDATA" = urls ]
then
	FILENAME=bannedurllist
	FILTERTYPE=urls
	TITLE=$"Banned URL Lists"
	HELPMSG=$"This allows you to choose the url categories that are added for filtering to the filter group to block parts of websites."
fi

if [ "$FILTERDATA" = phraselists ]
then
	FILENAME=bannedphraselist
	FILTERTYPE=banned
	SEARCHTERM=phraselists
	TITLE=$"Banned Phrase Categories"
	HELPMSG=$"This allows you to choose the phraselists that are added for filtering to the filter group to block parts of websites."
fi

SUBTITLE="#Filter_Group_Options"
showtitle


source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details

#Show details for the group

echo '<form name="myform" action="e2g_filtergroups.cgi" method="post"><table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: 180px;"><b>'$"Name"'</b></td><td>'"$FILTERNAME"'</td></tr>
<tr><td><b>'$"Description"'</b></td><td>'"$FILTERDESC"'</td></tr></tbody></table><br>'

echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH6"'px;"><b>'$"Filter Category"'</b></th><th style="width: 60px;"><b>'$"Status"'</b></th><th></th></tr></thead><tbody>'

#Show categories that are currently active
for CATEGORIES in $(grep ^".Include</etc/e2guardian/lists/$SEARCHTERM/" "/etc/e2guardian/lists/filtergroups/$FILTERNAME/$FILENAME" | sed "s/>//g" | sed "s/<//g")
do
	CATEGORY=$(echo "$CATEGORIES" | cut -d"/" -f$COL1)
	SUBCATEGORY=$(echo "$CATEGORIES" | cut -d"/" -f$COL2)
	CATEGORYNAME="$CATEGORY"
	[ "$SUBCATEGORY" != "$FILTERTYPE" ] && CATEGORYNAME="$CATEGORY/$SUBCATEGORY"

	echo '<tr><td>'"$CATEGORYNAME"'</td><td>'$"denied"'</td><td>
			<button class="'"$HELPCLASS"'" name="____DeactivateFilter____" value="____ACTION____reallyeditfilterlists____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$FILTERDATA"'____FILTERDATA2____'"$CATEGORYNAME"'____FILTERDATA3____deactivate____">
			<img src="'"$ICON3"'" alt="'$"Deactivate Filter"'">
			<span>'$"Filter Category"' - '"$CATEGORYNAME"'<br>'$"Status"' - '$"denied"'<br><br>'$"Allow access for this filtering group?"'</span>
			</button>
		</td></tr>'
done

#Show inactive categories
for CATEGORIES in $(grep ^"#.Include</etc/e2guardian/lists/$SEARCHTERM/" "/etc/e2guardian/lists/filtergroups/$FILTERNAME/$FILENAME" | sed "s/>//g" | sed "s/<//g")
do
	CATEGORY=$(echo "$CATEGORIES" | cut -d"/" -f"$COL1")
	SUBCATEGORY=$(echo "$CATEGORIES" | cut -d"/" -f"$COL2")
	CATEGORYNAME="$CATEGORY"
	[ "$SUBCATEGORY" != "$FILTERTYPE" ] && CATEGORYNAME="$CATEGORY/$SUBCATEGORY"

	echo '<tr><td>'"$CATEGORYNAME"'</td><td>'$"allowed"'</td><td>

			<button class="'"$HELPCLASS"'" name="____ActivateFilter____" value="____ACTION____reallyeditfilterlists____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$FILTERDATA"'____FILTERDATA2____'"$CATEGORYNAME"'____FILTERDATA3____activate____">
			<img src="'"$ICON2"'" alt="'$"Activate Filter"'">
			<span>'$"Filter Category"' - '"$CATEGORYNAME"'<br>'$"Status"' - '$"allowed"'<br><br>'$"Deny access for this filtering group?"'</span>
			</button>
		</td></tr>'
done

echo "</tbody></table></form>"
}

function reallyeditfilterlists {
echo "$(date): e2g_filtergroups - $FILTERNAME $FILTERDATA3 $FILTERDATA2 by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"

FILTERDATA2=$(echo "$FILTERDATA2" | sed 's/%2F/\//g')
FILENAME=bannedsitelist
[ "$FILTERDATA" = urls ] && FILENAME=bannedurllist
[ "$FILTERDATA" = phraselists ] && FILENAME=bannedphraselist


#Get the line number of list
LINENUM=$(grep -n "/$FILTERDATA2" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/"$FILENAME" | cut -d: -f1 | sed -n 1,1p)

#Modify config file
if [ ! -z "$LINENUM" ]
then
	[ "$FILTERDATA3" = deactivate ] && sed -i "$LINENUM""s/^.Include/#.Include/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME/$FILENAME"
	[ "$FILTERDATA3" = activate ] && sed -i "$LINENUM""s/^#.Include/.Include/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME/$FILENAME"
fi

if [ "$FILENAME" = bannedsitelist ]
then
	#Do part banned sites as well
	#Get the line number of list
	LINENUM=$(grep -n "/$FILTERDATA2" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedurllist | cut -d: -f1 | sed -n 1,1p)
	if [ ! -z "$LINENUM" ]
	then
		[ "$FILTERDATA3" = deactivate ] && sed -i "$LINENUM""s/^.Include/#.Include/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedurllist
		[ "$FILTERDATA3" = activate ] && sed -i "$LINENUM""s/^#.Include/.Include/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedurllist
	fi
fi

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"
TARGETPATH=/etc/e2guardian/lists/filtergroups
datasync

activatechanges
ACTION=editfilterlists
}

function bannedextensionlists {
TITLE=$"Banned Extensions"
HELPMSG='$"This allows you to choose the extension lists that are allowed or denied when downloading files."'
SUBTITLE="#Filter_Group_Options"
showtitle

source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details

echo '<form name="myform" action="e2g_filtergroups.cgi" method="post"><table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: 180px;"><b>'$"Name"'</b></td><td>'"$FILTERNAME"'</td></tr>
<tr><td><b>'$"Description"'</b></td><td>'"$FILTERDESC"'</td></tr></tbody></table><br>'

#Show allowed extensions
echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH4"'px;"><b>'$"Extension"'</b></th>'
[ "$MOBILE" = no ] && echo '<th style="width: '"$WIDTH5"'px;"><b>'$"Description"'</b></th>'
echo '<th style="width: 60px;"><b>'$"Status"'</b></th><th></th></tr></thead><tbody>'

#Show denied extensions
for EXTENSIONS in $(grep ^"\." /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist | sed "s/ /_/g")
do
	LINEDATA="${EXTENSIONS//_/ }"
	FILEEXTENSION=$(echo "$LINEDATA" | sed "s/ //g" | cut -d"#" -f1 | sed "s/\.//g")
	[ "$MOBILE" = no ] && DESCRIPTION=$(echo "$LINEDATA" | cut -d"#" -f2)
	if [ ! -z "$FILEEXTENSION" ]
	then
	echo "<tr><td style=\"vertical-align:top\">$FILEEXTENSION</td>"
	[ "$MOBILE" = no ] && echo "<td>$DESCRIPTION</td>"
	echo '<td>'$"denied"'</td><td style="vertical-align:top">
			<button class="'"$HELPCLASS"'" name="____AllowExtension____" value="____ACTION____modifybannedextensionlists____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$FILEEXTENSION"'____FILTERDATA2____deactivate____">
			<img src="'$ICON3'" alt="'$"Allow Extension"'">
			<span>'$"Extension"' - '"$FILEEXTENSION"'<br>'$"Status"' - '$"denied"'<br><br>'$"Allow access for this filtering group?"'</span>
			</button>
		</td></tr>'
	fi
done

#Show allowed extensions
for EXTENSIONS in $(grep ^"#\." /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist | sed "s/ /_/g")
do
	LINEDATA="${EXTENSIONS//_/ }"
	FILEEXTENSION=$(echo "$LINEDATA" | sed "s/ //g" | cut -d"#" -f2 | sed "s/\.//g")
	[ "$MOBILE" = no ] && DESCRIPTION=$(echo "$LINEDATA" | cut -d"#" -f3)
	if [ ! -z "$FILEEXTENSION" ]
	then
		echo "<tr><td style=\"vertical-align:top\">$FILEEXTENSION</td>"
		[ "$MOBILE" = no ] && echo "<td>$DESCRIPTION</td>"
		echo '<td>'$"allowed"'</td><td style="vertical-align:top">

			<button class="'"$HELPCLASS"'" name="____DenyExtension____" value="____ACTION____modifybannedextensionlists____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$FILEEXTENSION"'____FILTERDATA2____activate____">
			<img src="'"$ICON2"'" alt="'$"Deny Extension"'">
			<span>'$"Extension"' - '"$FILEEXTENSION"'<br>'$"Status"' - '$"allowed"'<br><br>'$"Deny access for this filtering group?"'</span>
			</button>
		</td></tr>'
	fi
done
echo "</tbody></table></form>"
}

function modifybannedextensionlists {
echo "$(date): e2g_filtergroups - $FILTERNAME $FILTERDATA $FILTERDATA2 by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"

#Get the line number of list
LINENUM=$(grep -n -w "\.$FILTERDATA" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist | cut -d: -f1 | sed -n 1,1p)

if [ ! -z "$LINENUM" ]
then
	[ "$FILTERDATA2" = deactivate ] && sed -i "$LINENUM""s/^.$FILTERDATA/#\.$FILTERDATA/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist
	[ "$FILTERDATA2" = activate ] && sed -i "$LINENUM""s/^#.$FILTERDATA/.$FILTERDATA/" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist
fi

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedextensionlist
TARGETPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"
datasync

activatechanges
ACTION=bannedextensionlists
}

function bannedmimetypelists {
TITLE=$"Banned Mime Types"
HELPMSG=$"This allows you to choose the mime types that are allowed or denied."
SUBTITLE="#Filter_Group_Options"
showtitle

#Show details for the group
source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details


echo '<form name="myform" action="e2g_filtergroups.cgi" method="post"><table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: 180px;"><b>'$"Name"'</b></td><td>'"$FILTERNAME"'</td></tr>
<tr><td><b>'$"Description"'</b></td><td>'"$FILTERDESC"'</td></tr></tbody></table><br>'

echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH6"'px;"><b>'$"Mime Type"'</b></th><th style="width: 60px;"><b>'$"Status"'</b></th><th></th></tr></thead><tbody>'



#Show denied mimetypes
for MIMETYPE in $(grep -v ^"#" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist | sed "s/#//g" | sed 1d | sort)
do
	[ ! -z "$MIMETYPE" ] && echo '<tr><td style="vertical-align:top">'"$MIMETYPE"'</td><td>'$"denied"'</td><td style="vertical-align:top">

			<button class="'"$HELPCLASS"'" name="____AllowMimeType____" value="____ACTION____modifybannedmimetypes____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$MIMETYPE"'____FILTERDATA2____deactivate____">
			<img src="'"$ICON3"'" alt="'$"Allow Mime Type"'">
			<span>'$"Mime Type"' - '"$MIMETYPE"'<br>'$"Status"' - '$"denied"'<br><br>'$"Allow access for this filtering group?"'</span>
			</button>
		</td></tr>'
done

#Show allowed mimetypes
for MIMETYPE in $(grep ^"#" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist | sed "s/#//g" | sed 1d | sort)
do
	[ ! -z "$MIMETYPE" ] && echo '<tr><td style="vertical-align:top">'"$MIMETYPE"'</td><td>'$"allowed"'</td><td style="vertical-align:top">


			<button class="'"$HELPCLASS"'" name="____DenyMimeType____" value="____ACTION____modifybannedmimetypes____FILTERNAME____'"$FILTERNAME"'____FILTERDATA____'"$MIMETYPE"'____FILTERDATA2____activate____">
			<img src="'"$ICON2"'" alt="'$"Deny Mime Type"'">
			<span>'$"Mime Type"' - '"$MIMETYPE"'<br>'$"Status"' - '$"allowed"'<br><br>'$"Deny access for this filtering group?"'</span>
			</button>
		</td></tr>'
done
echo "</tbody></table></form>"
}

function modifybannedmimetypes {
FILTERDATA=$(echo "$FILTERDATA" | sed 's/%2F/\//g')

echo "$(date): e2g_filtergroups - $FILTERNAME $FILTERDATA $FILTERDATA2 by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"

#Get the line number of list
LINENUM=$(grep -n "$FILTERDATA" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist | cut -d: -f1 | sed -n 1,1p)

if [ ! -z "$LINENUM" ]
then
	[ "$FILTERDATA2" = deactivate ] && sed -i "$LINENUM""s%^$FILTERDATA%#$FILTERDATA%" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist
	[ "$FILTERDATA2" = activate ] && sed -i "$LINENUM""s%^#$FILTERDATA%$FILTERDATA%" /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist
fi

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"/bannedmimetypelist
TARGETPATH=/etc/e2guardian/lists/filtergroups/"$FILTERNAME"
datasync

activatechanges
ACTION=bannedmimetypelists
}

function viewcustomsites {

if [ "$FILTERDATA" = banned ]
then
	TITLE=$"Custom Banned Sites"
	HELPMSG=$"This allows you to view and add in websites that you want to deny access to."
	CUSTOMFILE1=bannedsites
	CUSTOMFILE2=bannedurls
	if [ ! -z "$FILTERDATA2" ]
	then
		[[ $(echo "$FILTERDATA2" | grep -F -c ".") -gt 0 ]] && BANSITE="$FILTERDATA2"
	fi
fi

if [ "$FILTERDATA" = allowed ]
then
	TITLE=$"Custom Allowed Sites"
	HELPMSG=$"This allows you to view and add in websites that you want to allow access to."
	CUSTOMFILE1=exceptionsites
	CUSTOMFILE2=exceptionurls
fi

if [ "$FILTERDATA" = partallowed ]
then
	TITLE=$"Part Allowed Sites"
	HELPMSG=$"This allows you to view and add in parts of websites that you want to allow access to."
	CUSTOMFILE=exceptionurls
fi

if [ "$FILTERDATA" = partbanned ]
then
	TITLE=$"Part Banned Sites"
	HELPMSG=$"This allows you to view and add in parts of websites that you want to deny access to."
	CUSTOMFILE=bannedurls
fi

#SUBTITLE="#Filter_Group_Options"
showtitle

source /etc/e2guardian/lists/filtergroups/"$FILTERNAME"/details

#Show details for the group

echo '<table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: '"$WIDTH1"'px;"><b>'$"Name"'</b></td><td>'"$FILTERNAME"'</td></tr>
<tr><td><b>'$"Description"'</b></td><td>'"$FILTERDESC"'</td></tr></tbody></table><br><br>'

#Show banned sites for the chosen filtergroup
SEARCH="$FILTERDATA2"

#Show option to edit banned site lists and part banned site lists
echo '<form name="myform" action="e2g_filtergroups.cgi" method="post">
<input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'">
<input type="hidden" name="____FILTERDATA____" value="'"$FILTERDATA"'">
<table class="'"$TABLECLASS"'" style="text-align: left;" ><tbody>
<tr><td style="width: '"$WIDTH1"'px;">'$"Add Site"'</td><td><input tabindex= "1" name="____ACTION____modifycustomsite____FILTERDATA3____add____FILTERDATA2____" style="width: '"$WIDTH2"'px;" value="'"$BANSITE"'" size="20" type="text"></td>
<td><input value="Submit" class="button" type="submit"></td><td style="vertical-align: top;"><a class="'"$HELPCLASS"'" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=Filter_Management#Filter_Group_Options"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enter in the name of the site that you want to ban or allow."'</span></a></td></tr>
<tr><td></td><td colspan="2">'


#Show lists of filter groups to add the site to
for FILTERGROUPS in /etc/e2guardian/lists/filtergroups/*
do
	FILTERGROUP=$(basename "$FILTERGROUPS")
	echo "$FILTERGROUP<input type=\"checkbox\" name=\"____FILTERDATA4____\" value=\"$FILTERGROUP\" checked>"
done

echo '</td><td></td></tr></tbody></table></form>

<form name="myform" action="e2g_filtergroups.cgi" method="post">
<input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'">
<input type="hidden" name="____FILTERDATA____" value="'"$FILTERDATA"'">
<table class="'"$TABLECLASS"'" style="text-align: left;" ><tbody>

<tr><td style="width: '"$WIDTH1"'px;">'$"Search"'</td><td><input tabindex= "2" name="____ACTION____viewcustomsites____FILTERDATA2____" value="'"$SEARCH"'" style="width: '"$WIDTH2"'px;" size="20" type="text"></td><td><input value="'$"Submit"'" class="button" type="submit"></td><td style="vertical-align: top;"><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=Filter_Management#Filter_Group_Options"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enter in a search term to filter the results."'</span></a></td></tr>
</tbody></table><br></form>
<form name="myform" action="e2g_filtergroups.cgi" method="post">
<input type="hidden" name="____FILTERNAME____" value="'"$FILTERNAME"'">
<input type="hidden" name="____FILTERDATA____" value="'"$FILTERDATA"'">
<input type="hidden" name="____FILTERDATA3____" value="delete">
<input type="hidden" name="____FILTERDATA4____" value="delete">
<input type="hidden" name="____ACTION____" value="modifycustomsite">
'

echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
<tr><th style="width: '"$WIDTH6"'px;"><b>'$"Site"'</b></th><th style="width: '"$WIDTH7"'px;"><b>'$"Remove"'</b></th></tr></thead><tbody>'
for SITE in $(cat "/etc/e2guardian/lists/filtergroups/$FILTERNAME/$CUSTOMFILE1" "/etc/e2guardian/lists/filtergroups/$FILTERNAME/$CUSTOMFILE2" | sort | grep "$SEARCH")
do
	echo '<tr><td>'"$SITE"'</td><td>

		<button class="'"$HELPCLASS"'" name="____DeleteSite____" value="____FILTERDATA2____'"$SITE"'____">
		<img src="'"$ICON3"'" alt="'$"Delete"' '"$SITE"'">
		<span>'$"Delete"' '"$SITE"'</span>
		</button>
	</td></tr>'
done
echo '</tbody></table>'

echo "</form>"
}

function modifycustomsite {

if [ ! -z "$FILTERNAME" ] && [ ! -z "$FILTERDATA" ] && [ ! -z "$FILTERDATA2" ] && [ ! -z "$FILTERDATA4" ]
then
	FILTERDATA2=$(echo "$FILTERDATA2" | sed "s/^https//g" | sed "s/^http//g" | sed "s/%3A//g" | sed "s/%2F%2F//g" | sed "s/^www.//g" | sed "s/%2F/\//g")
	#Check url

	if [ "$FILTERDATA" = banned ]
	then
		CUSTOMFILE=bannedsites
		[[ $(echo "$FILTERDATA2" | grep -F -c "/") != 0 ]] && CUSTOMFILE=bannedurls
	fi

	if [ "$FILTERDATA" = allowed ]
	then
		CUSTOMFILE=exceptionsites
		[[ $(echo "$FILTERDATA2" | grep -F -c "/") != 0 ]] && CUSTOMFILE=exceptionurls
	fi

	#Add site to the banned or allowed lists
	if [ "$FILTERDATA" = banned ] || [ "$FILTERDATA" = partbanned ] || [ "$FILTERDATA" = allowed ] || [ "$FILTERDATA" = partallowed ]
	then
		if [ "$FILTERDATA3" = add ]
		then
			for FILTERGROUP in $(echo "$FILTERDATA4" | sed "s/_/ /g" | sed "s/^ //g")
			do
				echo "$(date): e2g_filtergroups - adding $FILTERDATA2 to $FILTERGROUP $CUSTOMFILE by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
				echo "$FILTERDATA2" >> "/etc/e2guardian/lists/filtergroups/$FILTERGROUP/$CUSTOMFILE"
				sort --unique "/etc/e2guardian/lists/filtergroups/$FILTERGROUP/$CUSTOMFILE" -o "/etc/e2guardian/lists/filtergroups/$FILTERGROUP/$CUSTOMFILE"
			done
		fi

		#Delete site from the banned list
		if [ "$FILTERDATA3" = delete ]
		then
			echo "$(date): e2g_filtergroups - deleting $FILTERDATA2 from $FILTERGROUP $CUSTOMFILE by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
			SITELINENUMBER=$(grep -n -w ^"$FILTERDATA2" /etc/e2guardian/lists/filtergroups/"$FILTERNAME/$CUSTOMFILE" | cut -d: -f1)
			[ ! -z "$SITELINENUMBER" ] && sed -i "$SITELINENUMBER""d" /etc/e2guardian/lists/filtergroups/"$FILTERNAME/$CUSTOMFILE"
			#Remove blank lines
			sed -i "/^$/d" "/etc/e2guardian/lists/filtergroups/$FILTERNAME/$CUSTOMFILE"
		fi
	fi
fi

#Filter data if the file is too large
FILTER_RESULTS=no

[[ $(wc -l < /etc/e2guardian/lists/filtergroups/"$FILTERNAME/$CUSTOMFILE") -gt 15 ]] && FILTER_RESULTS=yes

if [ $FILTER_RESULTS = yes ]
then
	FILTERDATA2=${FILTERDATA2:0:2}
else
	FILTERDATA2=""
fi

ACTION=viewcustomsites

#Sync the data to all proxy servers
SOURCEPATH=/etc/e2guardian/lists/filtergroups
TARGETPATH=/etc/e2guardian/lists
datasync

activatechanges
}

[ "$ACTION" = reallyeditlable ] && ( reallyeditlabels ; viewfilters )
[ "$ACTION" = add ] && addfiltergroup 
[ "$ACTION" = reallyadd ] && ( reallyaddfiltergroup ; viewfilters )
[ "$ACTION" = deletefiltergroup ] && deletefiltergroup
[ "$ACTION" = reallydelete ] && ( reallydelete ; viewfilters )
[ "$ACTION" = editfiltergroup ] && editfiltergroup
[ "$ACTION" = removegroup ] && ( removegroup ; editfiltergroup )
[ "$ACTION" = reallyaddgroup ] && ( reallyaddgroup ; editfiltergroup )
[ "$ACTION" = editfilterlists ] && editfilterlists
[ "$ACTION" = reallyeditfilterlists ] && ( reallyeditfilterlists ; editfilterlists )
[ "$ACTION" = bannedextensionlists ] && bannedextensionlists
[ "$ACTION" = modifybannedextensionlists ] && ( modifybannedextensionlists ; bannedextensionlists )
[ "$ACTION" = bannedmimetypelists ] && bannedmimetypelists
[ "$ACTION" = modifybannedmimetypes ] && ( modifybannedmimetypes ; bannedmimetypelists )
[ "$ACTION" = view ] && viewfilters
[ "$ACTION" = viewcustomsites ] && viewcustomsites
[ "$ACTION" = modifycustomsite ] && ( modifycustomsite ; viewcustomsites )
[ "$ACTION" = activatechanges ] && ( activatechanges ; viewfilters )

exit

