#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_control_queue_cgi
then
echo `date`: email_control_queue - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_control_queue_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/email_control_queue.cgi | cut -d' ' -f1`
[ $Checksum'null' = null ] && Checksum=not_set
if [ $Checksum'check' != $email_control_queue_cgi'check' ]
then
echo `date`: email_control_queue - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: email_control_queue - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: email_control_queue - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
MAILID=`echo "$DATA" | cut -s -d: -f5`

########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
echo `date`: email_control_queue - Not called by email_control_queue.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: email_control_queue - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: email_control_queue - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ ACTION'null' = null ]
then
echo `date`: email_control_queue - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $MAILID'null' = null ]
then
echo `date`: email_control_queue - Blank mailid by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: email_control_queue - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

#Get mail server
if [ -f /opt/karoshi/server_network/emailserver ]
then
EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
else
echo `date`: email_control_queue - no email server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi


if [ $ACTION = FLUSH ]
then
echo `date`: email_control_queue - flushing queue by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $EMAILSERVER = `hostname-fqdn` ]
then
postsuper -H ALL
else
ssh -x -o PasswordAuthentication=no $EMAILSERVER '
postsuper -H ALL
'
fi
fi

if [ $ACTION = DELETE ]
then
echo `date`: email_control_queue - deleting $MAILID by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $EMAILSERVER = `hostname-fqdn` ]
then
postsuper -d $MAILID
else
ssh -x -o PasswordAuthentication=no $EMAILSERVER '
postsuper -d '$MAILID'
'
fi
fi

if [ $ACTION = DELETEALL ]
then
echo `date`: email_control_queue - deleting ALL queued email by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $EMAILSERVER = `hostname-fqdn` ]
then
postsuper -d ALL
else
ssh -x -o PasswordAuthentication=no $EMAILSERVER '
postsuper -d ALL
'
fi
fi

