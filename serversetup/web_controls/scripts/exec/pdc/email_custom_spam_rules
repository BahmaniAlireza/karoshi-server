#!/bin/bash
#Copyright (C) 2017  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_custom_spam_rules_cgi
then
	echo `date`: email_custom_spam_rules - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_custom_spam_rules_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/email_custom_spam_rules.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $email_custom_spam_rules_cgi'check' ]
then
	echo `date`: email_custom_spam_rules - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: email_custom_spam_rules - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ -z "$DATA" ]
then
	echo `date`: email_custom_spam_rules - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
echo $DATA"<br>"
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
RULEDATA=`echo "$DATA" | cut -s -d: -f5`
RULESCORE=`echo "$DATA" | cut -s -d: -f6`
MOBILE=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: email_custom_spam_rules - Not called by email_custom_spam_rules.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: email_custom_spam_rules - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: email_custom_spam_rules - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: email_custom_spam_rules - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z $ACTION ]
then
	ACTION=view
fi

############################
#Language
############################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server
source /opt/karoshi/server_network/domain_information/domain_name

EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
if [ "$MOBILE" = no ]
then
	USERNAMEMSG=$"Username"
	TABLECLASS=standard
	WIDTH1=300
	WIDTH2=80
	WIDTH3=80
	ICON1="/images/submenus/file/edit.png"
	ICON2="/images/submenus/file/delete.png"
else
	USERNAMEMSG=$"User"
	TABLECLASS=mobilestandard
	WIDTH1=100
	WIDTH2=40
	WIDTH3=80
	ICON1="/images/submenus/file/editm.png"
	ICON2="/images/submenus/file/deletem.png"
fi

function completed_status {
echo '<SCRIPT language="Javascript">'
echo 'window.location = "/cgi-bin/admin/email_custom_spam_rules.cgi";'
echo '</script>'
echo "</body></html>"
exit
}

if [ "$ACTION" = reallydelete ]
then
	echo `date`: "email_custom_spam_rules - deleting $RULEDATA by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	echo ruledata $RULEDATA
	sed -i '/^'$RULEDATA',/d' /opt/karoshi/server_network/email/custom_spam_rules
	ACTION=view
fi

if [ "$ACTION" = delete ]
then
	#Confirm delete request
	echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead><tr><th style="width: '$WIDTH1'px;"><b>'$"Criteria"'</b></th><th style="width: '$WIDTH2'px;"><b>'$"Score"'</b></th></thead><tbody>
	<tr><td>'$RULEDATA'</td><td>'$RULESCORE'</td></tr>
	</tbody></table><br>
	'$"Are you sure that you want to delete this rule?"'
	<br><br>
	<form style="display: inline;" action="/cgi-bin/admin/email_custom_spam_rules.cgi" method="post">
	<input type="hidden" name="_ACTION_" value="reallydelete">
	<input type="hidden" name="_RULEDATA_" value="'$RULEDATA'">
	<input value="'$"Submit"'" class="button" type="submit"></form>
	<form style="display: inline;" action="/cgi-bin/admin/email_custom_spam_rules.cgi" method="post"><input value="'$"Cancel"'" class="button" type="submit"></form>'
fi

#View custom spam rules
if [ "$ACTION" = view ]
then
	if [ -f /opt/karoshi/server_network/email/custom_spam_rules ]
	then
		echo '<form action="/cgi-bin/admin/email_custom_spam_rules.cgi" method="post"><table id="myTable" class="tablesorter" style="text-align: left;" ><thead><tr><th style="width: '$WIDTH1'px;"><b>'$"Criteria"'</b></th><th style="width: '$WIDTH2'px;"><b>'$"Score"'</b></th><th style="width: '$WIDTH3'px;"><b>'$"Edit"'</b></th><th style="width: '$WIDTH3'px;"><b>'$"Delete"'</b></th></tr></thead><tbody>'

		input="/opt/karoshi/server_network/email/custom_spam_rules"
		while IFS= read -r data
		do
			if [ ! -z "$data" ]
			then
				RULEDATA=$(echo "$data" | cut -d, -f1)
				SCORE=$(echo "$data" | cut -d, -f2)
				echo '<tr><td>'"$RULEDATA"'</td><td>'"$SCORE"'</td><td>
				<button class="info" name="_Edit" value="_ACTION_edit_'"$RULEDATA"'_">
				<img src="'$ICON1'" alt="'$"Edit"'">
				<span>'$"Edit"'<br>'"$RULEDATA"'</span>
				</button>
				</td><td>
				<button class="info" name="_Delete" value="_ACTION_delete_RULEDATA_'$RULEDATA'_RULESCORE_'$SCORE'_">
				<img src="'$ICON2'" alt="'$"Delete"'">
				<span>'$"Delete"'<br>'"$RULEDATA"'</span>
				</button>
				</td></tr>'
			fi
		done < "$input"
		echo "</tbody></table></form>"
	else
		echo $"No custom spam rules have been added."
	fi
fi

if [ $ACTION = add ]
then
	echo '<form  style="display: inline;" action="/cgi-bin/admin/email_custom_spam_rules.cgi" method="post"><input name="_ACTION_" value="reallyadd" type="hidden">'
	if [ "$MOBILE" = no ]
	then
		echo '<table class="'$TABLECLASS'" style="text-align: left;" >
<tbody><tr><td style="width: '$WIDTH2'px;">'$"Username"'</td>
<td><div id="suggestions"></div><input tabindex= "1" name="_USERNAME_" style="width: '$WIDTH5'px; height: '$HEIGHT2'px;" size="20" type="text" id="inputString" onkeyup="lookup(this.value);"></td><td>
<a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=E-Mail_Aliases"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enter in the username that you want to add an alias to. This username has to exist on the system."'</span></a>
</td></tr>
 <tr><td>'$"Alias"'</td><td><input tabindex= "2" name="_ALIAS_" style="width: '$WIDTH5'px; height: '$HEIGHT2'px;" size="20" type="text"></td><td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=E-Mail_Aliases"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enter in the alias that you want for the username."'</span></a></td></tr>
<tr><td>'$"Domain"'</td><td>'
	else
		echo ''$"Username"'<br>
		<div id="suggestions"></div><input tabindex= "1" name="_USERNAME_" style="width: '$WIDTH2'px; height: '$HEIGHT'px;" size="20" type="text" id="inputString" onkeyup="lookup(this.value);"><br>
		'$"Alias"'<br>
		<input tabindex= "2" name="_ALIAS_" style="width: '$WIDTH2'px; height: '$HEIGHT'px;" size="20" type="text"><br>
		'$"Domain"'<br>
		'
	fi

	#Show a list of domains for the alias
	echo '<select name="_DOMAIN_" style="width: '$WIDTH2'px; height: 30px;">
	<option value="'$REALM'">'$REALM'</option>'

	if [ -d /opt/karoshi/server_network/email/virtual_domains ]
	then
		for VIRTUAL_DOMAIN in $(ls -1 /opt/karoshi/server_network/email/virtual_domains)
		do
			echo '<option value="'$VIRTUAL_DOMAIN'">'$VIRTUAL_DOMAIN'</option>'
		done
	fi

	echo '</select>'
	if [ "$MOBILE" = no ]
	then
		echo '</td><td><a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=E-Mail_Aliases"><img class="images" alt="" src="/images/help/info.png"><span>'$"Choose the domain that you want for the username."'</span></a></td></tr></tbody></table><br><br>'
	else
		echo '<br><br>'
	fi
	echo '<input class="button" value="'$"Submit"'" type="submit">'
	echo '</form><form  style="display: inline;" action="/cgi-bin/admin/email_custom_spam_rules.cgi" method="post"><input value="'$"Cancel"'" class="button" type="submit"></form>'
fi

exit

