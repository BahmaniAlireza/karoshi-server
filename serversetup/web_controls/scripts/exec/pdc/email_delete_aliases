#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_view_aliases2_cgi
then
echo `date`: email_view_aliases2 - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_view_aliases2_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/email_view_aliases2.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $email_view_aliases2_cgi'check' ]
then
echo `date`: email_view_aliases2 - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: email_delete_aliases - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo $* | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | cut -s -d: -f2`
REMOTE_MD5=`echo $* | cut -s -d: -f3`
ALIASARRAY=( `echo $* | cut -s -d: -f4- | sed 's/:/ /g'` )
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: email_delete_aliases - Not called by email_view_aliases2.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: email_delete_aliases - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: email_delete_aliases - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: email_delete_aliases - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $ALIASARRAY'null' = null ]
then
echo `date`: email_delete_aliases - No sites chosen by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

ALIASCOUNT=`echo ${#ALIASARRAY[@]}`
COUNTER=0
#Log event
while [ $COUNTER -lt $ALIASCOUNT ]
do
ALIASNAME=`echo ${ALIASARRAY[$COUNTER]}`
echo `date`: email_delete_aliases - removing $ALIASNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
let COUNTER=$COUNTER+1
done


EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
if [ `echo $EMAILSERVER'null' | sed 's/ //g'` = null ] 
then
echo `date`: email_over_quota_report - blank email server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $EMAILSERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $EMAILSERVER '
ALIASARRAY=( `echo '${ALIASARRAY[@]:0}'` )
COUNTER=0
while [ $COUNTER -lt '$ALIASCOUNT' ]
do
#Delete alias
ALIASNAME=`echo ${ALIASARRAY[$COUNTER]}`
#Get line number of alias
ALIASLINENUMBER=`grep -n ^$ALIASNAME: /etc/postfix/aliases | cut -d: -f1`
if [ $ALIASLINENUMBER"null" != null ]
then
sed -i $ALIASLINENUMBER"d" /etc/postfix/aliases
fi
let COUNTER=$COUNTER+1
done
#Remove blank lines
sed -i "/^$/d" /etc/postfix/aliases
#Update alias db
newaliases
'
#Copy in aliases list from email server to pdc
scp  root@$EMAILSERVER:"/etc/postfix/aliases" /etc/postfix/
else
COUNTER=0
while [ $COUNTER -lt $ALIASCOUNT ]
do
#Delete alias
ALIASNAME=`echo ${ALIASARRAY[$COUNTER]}`
#Get line number of alias
ALIASLINENUMBER=`grep -n ^$ALIASNAME: /etc/postfix/aliases | cut -d: -f1`
if [ $ALIASLINENUMBER="null" != null ]
then
sed -i $ALIASLINENUMBER"d" /etc/postfix/aliases
fi
let COUNTER=$COUNTER+1
done
#Remove blank lines
sed -i "/^$/d" /etc/postfix/aliases
#Update alias db
newaliases
fi
exit

