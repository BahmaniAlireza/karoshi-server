#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_over_quota_report_cgi
then
	echo "$(date): email_over_quota_report - No MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_over_quota_report_cgi
Checksum=$(sha256sum /var/www/cgi-bin_karoshi/admin/email_over_quota_report.cgi | cut -d' ' -f1)
[ "$Checksum"'null' = null ] && Checksum=not_set
if [ "$Checksum"'check' != "$email_over_quota_report_cgi"'check' ]
then
	echo "$(date): email_over_quota_report - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo "$(date): email_over_quota_report - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1)
REMOTE_ADDR=$(echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2)
RemoteCheckSum=$(echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3)
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo "$(date): email_over_quota_report - Not called by email_over_quota_report.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): email_over_quota_report - Blank remote use"r >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): email_over_quota_report - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]
then
	echo "$(date): email_over_quota_report - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
echo "$(date): email_over_quota_report - viewing by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
############################
#Language
############################

[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


############################
#View over quota log
############################

EMAILSERVER=$(sed -n 1,1p /opt/karoshi/server_network/emailserver)

if [ -z "$EMAILSERVER" ] 
then
	echo "$(date): email_over_quota_report - blank email server by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$EMAILSERVER" != $(hostname-fqdn) ]
then
	ssh -x -o PasswordAuthentication=no "$EMAILSERVER" '
	if [ -f /opt/karoshi/postfixdata/quota_warnings ]
	then
		LINECOUNT=$(cat /opt/karoshi/postfixdata/quota_warnings | wc -l)
		if [ "$LINECOUNT" = 0 ]
		then
			echo '$"No users are over quota."'
			exit
		fi
		echo "<table class=\"standard\"><tbody><tr><td style=\"width: 200px;\"><b>'$"Username"'</b></td><td style=\"width: 150px;\"><b>'$"Threshold Level"'</b><td><td style=\"width: 150px;\"><b>'$"Inbox Size"' (MB)</b></td><td><b>'$"Days to next warning"'</b></td></tr>"
		COUNTER=1
		while [ "$COUNTER" -le "$LINECOUNT" ]
		do
			DATA=$(sed -n "$COUNTER,$COUNTER""p" /opt/karoshi/postfixdata/quota_warnings)
			EMAILADDRESS=$(echo "$DATA" | cut -d, -f1)
			LEVEL=$(echo "$DATA" | cut -d, -f2)
			MBOXSIZE=$(echo "$DATA" | cut -d, -f3)
			DAYS=$(echo "$DATA" | cut -d, -f4)
			echo "<tr><td>'"$EMAILADDRESS"'</td><td>'"$LEVEL"'</td><td>'"$MBOXSIZE"'</td><td>'"$DAYS"'</td></tr>"
			let COUNTER="$COUNTER"+1
		done
		echo "</tbody></table>"
	else
		echo '$"The quota log does not exist."'
		exit
	fi
	'
else
	if [ -f /opt/karoshi/postfixdata/quota_warnings ]
	then
		LINECOUNT=$(cat /opt/karoshi/postfixdata/quota_warnings | wc -l)
		if [ "$LINECOUNT" = 0 ]
		then
			echo $"No users are over quota."
			exit
		fi
		echo '<table class="standard"><tbody><tr><td style="width: 200px;"><b>'$"Username"'</b></td><td style="width: 150px;"><b>'$"Threshold Level"'</b><td><td style="width: 150px;"><b>'$"Inbox Size"' (MB)</b></td><td><b>'$"Days to next warning"'</b></td></tr>'
		COUNTER=1
		while [ "$COUNTER" -le "$LINECOUNT" ]
		do
			DATA=$(sed -n "$COUNTER,$COUNTER""p" /opt/karoshi/postfixdata/quota_warnings)
			EMAILADDRESS=$(echo "$DATA" | cut -d, -f1)
			LEVEL=$(echo "$DATA" | cut -d, -f2)
			MBOXSIZE=$(echo "$DATA" | cut -d, -f3)
			DAYS=$(echo "$DATA" | cut -d, -f4)
			echo '<tr><td>"'"$EMAILADDRESS"'"</td><td>"'"$LEVEL"'"</td><td>"'"$MBOXSIZE"'"</td><td>"'"$DAYS"'"</td></tr>'
			let COUNTER="$COUNTER"+1
		done
		echo '</tbody></table>'
	else
		echo $"The quota log does not exist."
		exit
	fi
fi
exit

