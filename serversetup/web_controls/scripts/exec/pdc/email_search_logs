#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_search_logs_cgi
then
echo `date`: email_search_logs - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_search_logs_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/email_search_logs.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $email_search_logs_cgi'check' ]
then
echo `date`: email_search_logs - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: email_search_logs - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$*" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$*" | cut -s -d: -f2`
REMOTE_MD5=`echo "$*" | cut -s -d: -f3`
USERNAME=`echo "$*" | cut -s -d: -f4`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: email_search_logs - Not called by email_search_logs.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: email_search_logs - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: email_search_logs - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $USERNAME'null' = null ]
then
echo `date`: email_search_logs - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: email_search_logs - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

USERNAME=`echo $USERNAME | sed 's/%40/@/g'`

EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`

if [ `echo $EMAILSERVER'null' | sed 's/ //g'` = null ] 
then
echo `date`: email_search_logs - blank email server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
if [ $EMAILSERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $EMAILSERVER '

if [ -f /var/log/mail.info ]
then
echo "<li>"mail.info"</li><br>"
grep -A 2 '$USERNAME' /var/log/mail.info
fi

if [ -f /var/log/mail.warn ]
then
echo "<li>"mail.warn"</li><br>"
grep -A 2 '$USERNAME' /var/log/mail.warn
fi

if [ -f /var/log/mail.err ]
then
echo "<li>"mail.err"</li><br>"
grep -A 2 '$USERNAME' /var/log/mail.err
fi

if [ -f /var/log/mail.log ]
then
echo "<li>"mail.log"</li><br>"
grep -A 2 '$USERNAME' /var/log/mail.log
fi

'
else

if [ -f /var/log/mail.info ]
then
echo "<li>"mail.info"</li><br>"
grep -A 2 $USERNAME /var/log/mail.info
fi

if [ -f /var/log/mail.warn ]
then
echo "<li>"mail.warn"</li><br>"
grep -A 2 $USERNAME /var/log/mail.warn
fi

if [ -f /var/log/mail.err ]
then
echo "<li>"mail.err"</li><br>"
grep -A 2 $USERNAME /var/log/mail.err
fi

if [ -f /var/log/mail.log ]
then
echo "<li>"mail.log"</li><br>"
grep -A 2 $USERNAME /var/log/mail.log
fi

fi
echo '</pre>'
exit
