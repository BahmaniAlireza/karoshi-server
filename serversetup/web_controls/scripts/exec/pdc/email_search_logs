#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_search_logs_cgi
then
	echo `date`: email_search_logs - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_search_logs_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/email_search_logs.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $email_search_logs_cgi'check' ]
then
	echo `date`: email_search_logs - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-@'`
if [[ -z "$DATA" ]]
then
	echo `date`: email_search_logs - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
DATE=`echo "$DATA" | cut -s -d: -f4`
HOURS=`echo "$DATA" | cut -s -d: -f5`
MINUTES=`echo "$DATA" | cut -s -d: -f6`
SEARCH1=`echo "$DATA" | cut -s -d: -f7`
SEARCH2=`echo "$DATA" | cut -s -d: -f8`
SEARCH3=`echo "$DATA" | cut -s -d: -f9`
SEARCH4=`echo "$DATA" | cut -s -d: -f10`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: email_search_logs - Not called by email_search_logs.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: email_search_logs - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: email_search_logs - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$DATE" ]
then
	echo `date`: email_search_logs - Blank "date" by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: email_search_logs - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`

DAY=`echo "$DATE" | cut -d"-" -f1 | sed 's/^0/ /g'`
MONTH=`echo "$DATE" | cut -d"-" -f2`
YEAR=`echo "$DATE" | cut -d"-" -f3`

#Convert date to match log style
[ "$MONTH" = 01 ] && MONTH=Jan
[ "$MONTH" = 02 ] && MONTH=Feb
[ "$MONTH" = 03 ] && MONTH=Mar
[ "$MONTH" = 04 ] && MONTH=Apr
[ "$MONTH" = 05 ] && MONTH=May
[ "$MONTH" = 06 ] && MONTH=Jun
[ "$MONTH" = 07 ] && MONTH=Jul
[ "$MONTH" = 08 ] && MONTH=Aug
[ "$MONTH" = 09 ] && MONTH=Sep
[ "$MONTH" = 10 ] && MONTH=Oct
[ "$MONTH" = 11 ] && MONTH=Nov
[ "$MONTH" = 12 ] && MONTH=Dec

echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'

#Create stage one search criteria
GREPSEARCH1="$MONTH $DAY"
if [ ! -z "$HOURS" ]
then
	GREPSEARCH1="$MONTH $DAY $HOURS:"
fi

if [ ! -z "$HOURS" ] && [ ! -z "$MINUTES" ]
then
	GREPSEARCH1="$MONTH $DAY $HOURS:$MINUTES"
fi

#Create stage 2 search criteria
GREPSEARCH2=""
if [ ! -z $EMAILADDR ]
then
	GREPSEARCH2="$EMAILADDR"
fi

if [ ! -z $SEARCH1 ]
then
	GREPSEARCH2="$GREPSEARCH2\|$SEARCH1"
fi

if [ ! -z $SEARCH2 ]
then
	GREPSEARCH2="$GREPSEARCH2\|$SEARCH2"
fi

if [ ! -z $SEARCH3 ]
then
	GREPSEARCH2="$GREPSEARCH2\|$SEARCH3"
fi

if [ ! -z $SEARCH4 ]
then
	GREPSEARCH2="$GREPSEARCH2\|$SEARCH4"
fi

GREPSEARCH2=$(echo $GREPSEARCH2 | sed 's/^\\|//g')

echo `date`: "email_search_logs for $GREPSEARCH1 $GREPSEARCH2 by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

if [ $EMAILSERVER = $(hostname-fqdn) ]
then
	#Do the search on all mail logs.
	for MAIL_LOG in $(ls /var/log/mail.log*)
	do
		#Check if log is compressed or not.
		if [ $(echo "$MAIL_LOG" | grep -c .gz$) = 0 ]
		then
			if [ -z "$GREPSEARCH2" ]
			then
				grep  ^"$GREPSEARCH1" "$MAIL_LOG" | sed "s/<//g" | sed "s/>//g"
			else
				grep  ^"$GREPSEARCH1" "$MAIL_LOG" | grep "$GREPSEARCH2" | sed "s/<//g" | sed "s/>//g"
			fi
		else
			if [ -z "$GREPSEARCH2" ]
			then
				zgrep -a ^"$GREPSEARCH1" "$MAIL_LOG" | sed "s/<//g" | sed "s/>//g"
			else
				zgrep -a ^"$GREPSEARCH1" "$MAIL_LOG" | grep "$GREPSEARCH2" | sed "s/<//g" | sed "s/>//g"
			fi
		fi
	done
else
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $EMAILSERVER '
	#Do the search on all mail logs.
	for MAIL_LOG in $(ls /var/log/mail.log*)
	do
		#Check if log is compressed or not.
		if [ $(echo "$MAIL_LOG" | grep -c .gz$) = 0 ]
		then
			if [ -z "'$GREPSEARCH2'" ]
			then
				grep ^"'"$GREPSEARCH1"'" "$MAIL_LOG" | sed "s/<//g" | sed "s/>//g"
			else
				grep ^"'"$GREPSEARCH1"'" "$MAIL_LOG" | grep "'$GREPSEARCH2'" | sed "s/<//g" | sed "s/>//g"
			fi
		else
			if [ -z "'$GREPSEARCH2'" ]
			then
				zgrep -a ^"'"$GREPSEARCH1"'" "$MAIL_LOG" | sed "s/<//g" | sed "s/>//g"
			else
				zgrep -a ^"'"$GREPSEARCH1"'" "$MAIL_LOG" | grep "'$GREPSEARCH2'" | sed "s/<//g" | sed "s/>//g"
			fi
		fi
	done
	'
fi
echo '</pre>'
exit
