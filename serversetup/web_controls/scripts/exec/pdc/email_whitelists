#!/bin/bash
#Copyright (C) 2015  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/email_whitelists_cgi
then
	echo `date`: email_whitelists - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/email_whitelists_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/email_whitelists.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $email_whitelists_cgi'check' ]
then
	echo `date`: email_whitelists - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: email_whitelists - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-%'`
if [ -z "$DATA" ]
then
	echo `date`: email_whitelists - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
ADDRESS=`echo "$DATA" | cut -s -d: -f5`
MOBILE=`echo "$DATA" | cut -s -d: -f6`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: email_whitelists - Not called by email_whitelists.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: email_whitelists - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: email_whitelists - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: email_whitelists - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ ! -z "$ACTION" ]
then
	if [ "$ACTION" = delete ] || [ "$ACTION" = reallyadd ]
	then
		if [ -z "$ADDRESS" ]
		then
		echo `date`: email_whitelists - Blank address by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
		fi
	fi
else
	ACTION=view
fi

############################
#Language
############################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
if [ $MOBILE = no ]
then
	TABLECLASS=standard
	WIDTH1=200
	ICON1="/images/submenus/email/email_delete.png"
	ICON2="/images/submenus/email/alias_add.png"
	ICON3="/images/submenus/email/alias_view.png"
else
	TABLECLASS=mobilestandard
	WIDTH1=160
	ICON1="/images/submenus/email/email_deletem.png"
	ICON2="/images/submenus/email/alias_addm.png"
	ICON3="/images/submenus/email/alias_viewm.png"
fi

function completed_status {
echo '<SCRIPT language="Javascript">'
echo 'window.location = "/cgi-bin/admin/email_whitelists.cgi";'
echo '</script>'
echo "</body></html>"
exit
}

if [ "$ACTION" = reallyadd ]
then
	ADDRESS=`echo "$ADDRESS" | sed "s/%40/@/g" | sed "s/%3A/:/g"`
	if [ "$EMAILSERVER" = `hostname-fqdn` ]
	then
		if [ `grep -c -w "$ADDRESS" /etc/MailScanner/rules/spam.whitelist.rules.karoshi` = 0 ]
		then
			echo "From:	$ADDRESS yes" >> /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			sort /etc/MailScanner/rules/spam.whitelist.rules.karoshi > /etc/MailScanner/rules/spam.whitelist.rules.karoshi.$$
			rm -f /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			mv /etc/MailScanner/rules/spam.whitelist.rules.karoshi.$$ /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			cat  /etc/MailScanner/rules/spam.whitelist.rules.karoshi /etc/MailScanner/rules/spam.whitelist.rules.additional > /etc/MailScanner/rules/spam.whitelist.rules
			echo "FromOrTo:	default		no" >> /etc/MailScanner/rules/spam.whitelist.rules
			service mailscanner reload 1>/dev/null
		fi
	else
		ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $EMAILSERVER '
		if [ `grep -c -w "'$ADDRESS'" /etc/MailScanner/rules/spam.whitelist.rules.karoshi` = 0 ]
		then
			echo "From:	'$ADDRESS' yes" >> /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			sort /etc/MailScanner/rules/spam.whitelist.rules.karoshi > /etc/MailScanner/rules/spam.whitelist.rules.karoshi.$$
			rm -f /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			mv /etc/MailScanner/rules/spam.whitelist.rules.karoshi.$$ /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			cat  /etc/MailScanner/rules/spam.whitelist.rules.karoshi /etc/MailScanner/rules/spam.whitelist.rules.additional > /etc/MailScanner/rules/spam.whitelist.rules
			echo "FromOrTo:	default		no" >> /etc/MailScanner/rules/spam.whitelist.rules
			service mailscanner reload 1>/dev/null
		fi
		'
	fi
	ACTION=view
fi

#Delete whitelist entry
if [ "$ACTION" = delete ]
then
	ADDRESS=`echo "$ADDRESS" | sed "s/%40/@/g" | sed "s/%3A/:/g"`
	if [ "$EMAILSERVER" = `hostname-fqdn` ]
	then
		#Get line number for the address
		LINENUM=`grep -n -w "$ADDRESS" /etc/MailScanner/rules/spam.whitelist.rules.karoshi | cut -d: -f1 | sed -n 1,1p`
		if [ ! -z "$LINENUM" ]
		then
			sed -i "$LINENUM"d /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			sed -i "/^$/d" /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			cat  /etc/MailScanner/rules/spam.whitelist.rules.karoshi /etc/MailScanner/rules/spam.whitelist.rules.additional > /etc/MailScanner/rules/spam.whitelist.rules
			echo "FromOrTo:	default		no" >> /etc/MailScanner/rules/spam.whitelist.rules
			service mailscanner reload 1>/dev/null
		fi
	else
		ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $EMAILSERVER '
		#Get line number for the address
		LINENUM=`grep -n -w "'$ADDRESS'" /etc/MailScanner/rules/spam.whitelist.rules.karoshi | cut -d: -f1 | sed -n 1,1p`
		if [ ! -z "$LINENUM" ]
		then
			sed -i "$LINENUM"d /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			sed -i "/^$/d" /etc/MailScanner/rules/spam.whitelist.rules.karoshi
			cat  /etc/MailScanner/rules/spam.whitelist.rules.karoshi /etc/MailScanner/rules/spam.whitelist.rules.additional > /etc/MailScanner/rules/spam.whitelist.rules
			echo "FromOrTo:	default		no" >> /etc/MailScanner/rules/spam.whitelist.rules
			service mailscanner reload 1>/dev/null
		fi
		'
	fi
	ACTION=view
fi


#View whitelist
if [ "$ACTION" = view ]
then
	if [ "$EMAILSERVER" = `hostname-fqdn` ]
	then
		touch /etc/MailScanner/rules/spam.whitelist.rules.karoshi
		touch /etc/MailScanner/rules/spam.whitelist.rules.additional
		if [ `cat /etc/MailScanner/rules/spam.whitelist.rules.karoshi | wc -l` -gt 0 ]
		then
			echo '<table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="2" cellspacing="2"><tbody><tr><td style="width: '$WIDTH1'px;"><b>'$"Address"'</b></td><td><b>'$"Delete"'</b></td></tr>'
			for ADDRESS in `cat /etc/MailScanner/rules/spam.whitelist.rules.karoshi | cut -f2 | cut -d" " -f1 | sed "s/\t//g"`
			do
				echo "<tr><td>"$ADDRESS"</td><td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"_ACTION_delete_ADDRESS_$ADDRESS"_"\" type=\"image\" class=\"images\" src=\"$ICON1\" value=\"\"><span>$ADDRESS</span></a></td></tr>"
			done
			echo "</tbody></table>"
		fi
	else
		ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$EMAILSERVER" '
		touch /etc/MailScanner/rules/spam.whitelist.rules.karoshi
		touch /etc/MailScanner/rules/spam.whitelist.rules.additional
		if [ `cat /etc/MailScanner/rules/spam.whitelist.rules.karoshi | wc -l` -gt 0 ]
		then
			echo "<table class=\"'$TABLECLASS'\" style=\"text-align: left;\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\"><tbody><tr><td style=\"width: '$WIDTH1'px;\"><b>'$"Address"'</b></td><td><b>'$"Delete"'</b></td></tr>"
			for ADDRESS in `cat /etc/MailScanner/rules/spam.whitelist.rules.karoshi | cut -f2 | cut -d" " -f1 | sed "s/\t//g"`
			do
				echo "<tr><td>"$ADDRESS"</td><td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"_ACTION_delete_ADDRESS_$ADDRESS"_"\" type=\"image\" class=\"images\" src=\"'$ICON1'\" value=\"\"><span>$ADDRESS</span></a></td></tr>"
			done
		fi
	'
	fi
fi


if [ $ACTION = add ]
then

	echo '
	<input name="_ACTION_" value="reallyadd" type="hidden"><table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="2" cellspacing="2">
	<tbody><tr><td style="width: 180px;">'$"E-Mail Address or domain"'</td>
	<td><input tabindex= "1" name="_ADDRESS_" style="width: '$WIDTH1'px;" size="20" type="text"></td><td>
	<a class="info" target="_blank" href="http://www.linuxschools.com/karoshi/documentation/wiki/index.php?title=E-Mail_whitelists"><img class="images" alt="" src="/images/help/info.png"><span>'$"Enter in the E-Mail address or domain that you want to add to the whitelist."'</span></a>
	</td></tr></tbody></table>'

	if [ $MOBILE = yes ]
	then
		echo "<br>"
	else
		echo '</div> <div id="submitbox">'
	fi
	echo '<input class="button" value="'$"Submit"'" type="submit">'
fi

exit

