#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/exam_accounts_archive_cgi
then
	echo "$(date): exam_accounts_archive - No MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/exam_accounts_archive_cgi
MD5Sum=$(MD5Sum /var/www/cgi-bin_karoshi/admin/exam_accounts_archive.cgi | cut -d' ' -f1)
[ -z "$MD5Sum" ] && MD5Sum=not_set
if [ "$MD5Sum"'check' != "$exam_accounts_archive_cgi"'check' ]
then
	echo "$(date): exam_accounts_archive - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 1 ]
then
	echo "$(date): exam_accounts_archive - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
RemoteUser=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f1)
RemoteAddress=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f2)
RemoteMD5=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f3)
Exceptionlist=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f4)
########################
#Check data
########################
if [ "$RemoteMD5"'check' != "$MD5Sum"'check' ]
then
	echo "$(date): exam_accounts_archive - Not called by exam_accounts_archive.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$RemoteUser" ]
then
	echo "$(date): exam_accounts_archive - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$RemoteAddress" ]
then
	echo "$(date): exam_accounts_archive - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [[ $(grep -c ^"$RemoteUser:" /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): exam_accounts_archive - access denied to $RemoteUser from $RemoteAddress" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Archive the exam accounts to /home/staffshare/examfiles/todays date
########################

if [ ! -d /home/staffshare ]
then
	mkdir /home/staffshare
	chmod 0750 /home/staffshare
	chown root.staff /home/staffshare
fi

if [ ! -d /home/staffshare/examfiles ]
then
	mkdir /home/staffshare/examfiles
	chmod 0750 /home/staffshare/examfiles
	chown root.itadmin /home/staffshare/examfiles
fi

DAY=$(date +%d)
MONTH=$(date +%b)
TIME=$(date +%T)
YEAR=$(date +%Y)
ArchiveFolder=$(echo "$DAY""_$MONTH""_$YEAR""_$TIME" | sed 's/:/_/g')

echo "$(date): exam_accounts_archive - Archiving all exam accounts by $RemoteUser from $RemoteAddress" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
echo "$(date): exam_accounts_archive - Archive path: /home/staffshare/examfiles/$ArchiveFolder" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

mkdir /home/staffshare/examfiles/"$ArchiveFolder"
chown root.itadmin /home/staffshare/examfiles/"$ArchiveFolder"
chmod 0640 /home/staffshare/examfiles/"$ArchiveFolder"
chmod u+X,g+X /home/staffshare/examfiles/"$ArchiveFolder"

ExamCount=$(ls -1 /home/users/exams/ | wc -l)
Counter=1
while [ "$Counter" -le "$ExamCount" ]
do
	if [[ $(echo "$Exceptionlist" | grep -c -w exam"$Counter") = 0 ]]
	then 
		echo "Archiving exam$Counter<br>"
		cp -f -R /home/users/exams/exam$Counter /home/staffshare/examfiles/"$ArchiveFolder"/
		echo "Clearing exam$Counter<br><br>"
		rm -R -f /home/users/exams/exam"$Counter"
		mkdir /home/users/exams/exam"$Counter"
		chmod 0700 /home/users/exams/exam"$Counter"
		chown exam"$Counter".exams /home/users/exams/exam"$Counter"
	fi

	let Counter=Counter+1
done
chown -R root.itadmin /home/staffshare/examfiles/"$ArchiveFolder"
chmod -R 0640 /home/staffshare/examfiles/"$ArchiveFolder"
chmod -R u+X,g+X /home/staffshare/examfiles/"$ArchiveFolder"
exit
