#!/bin/bash
#Copyright (C) 2007  The karoshi Team

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/exam_accounts_reset_passwords_cgi
then
	echo `date`: exam_accounts_reset_passwords - No MD5Checksum >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/exam_accounts_reset_passwords_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/exam_accounts_reset_passwords.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM" != "$exam_accounts_reset_passwords_cgi" ]
then
	echo "$(date): exam_accounts_reset_passwords - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 1 ]
then
	echo "$(date): exam_accounts_reset_passwords - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f2)
REMOTE_MD5=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f3)
EXCEPTIONLIST=$(echo "$*" | tr -cd 'A-Za-z0-9\._:\-+' | cut -s -d: -f4)
########################
#Check data
########################
if [ "$REMOTE_MD5" != "$MD5SUM" ]
then
	echo "$(date): exam_accounts_reset_passwords - Not called by exam_accounts_reset_passwords.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): exam_accounts_reset_passwords - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): exam_accounts_reset_passwords - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ $(grep -c ^"$REMOTE_USER": /opt/karoshi/web_controls/web_access_admin) != 1 ]
then
	echo "$(date): exam_accounts_reset_passwords - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

############################
#Language
############################

STYLESHEET=defaultstyle.css
[ -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER" ] && source "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


########################
#Reset the passwords
########################
echo "$(date): exam_accounts_reset_passwords - Resetting passwords for all exam accounts by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

if [ ! -d /home/staffshare/examfiles ]
then
	mkdir -p /home/staffshare/examfiles
	chmod 0750 /home/staffshare/examfiles
	chown root.staff /home/staffshare/examfiles
fi

[ -f /home/staffshare/examfiles/exampasswords.txt ] && rm -f /home/staffshare/examfiles/exampasswords.txt
[ -f /home/staffshare/examfiles/exampasswords_print.txt ] && rm -f /home/staffshare/examfiles/exampasswords_print.txt
date > /home/staffshare/examfiles/exampasswords.txt
date > /home/staffshare/examfiles/exampasswords_print.txt
echo ----------------------------------------------------- >> /home/staffshare/examfiles/exampasswords_print.txt
EXAMACCOUNTS=$(ls -1 /home/users/exams/ | wc -l)

#Check password settings
source /opt/karoshi/server_network/security/password_settings
[ -z "$PASSWORDCOMPLEXITY" ] && PASSWORDCOMPLEXITY=no
[ -z "$MINPASSWORDLENGTH" ] && MINPASSWORDLENGTH=6

COUNTER=1
while [ "$COUNTER" -le "$EXAMACCOUNTS" ]
do
	if [ $(echo "$EXCEPTIONLIST" | grep -c -w exam"$COUNTER") = 0 ]
	then
		if [ "$PASSWORDCOMPLEXITY" = on ]
		then
			PASSWORD=$(openssl rand -base64 24 | head -c"$MINPASSWORDLENGTH" 2>/dev/null)
		else
			PASSWORD=$(shuf -i 10000000000000-99999999999999 -n 1 | head -c"$MINPASSWORDLENGTH")
		fi

		echo '<ul><li>exam'"$COUNTER"' - '$"password reset"'</li></ul>'
		samba-tool user setpassword exam"$COUNTER" --newpassword="$PASSWORD" 1>/dev/null 2>>"/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
		echo "exam$COUNTER $PASSWORD" >> /home/staffshare/examfiles/exampasswords.txt
		echo "Username: exam$COUNTER Password: $PASSWORD" >> /home/staffshare/examfiles/exampasswords_print.txt
		echo >> /home/staffshare/examfiles/exampasswords_print.txt
		echo >> /home/staffshare/examfiles/exampasswords_print.txt
		echo ----------------------------------------------------- >> /home/staffshare/examfiles/exampasswords_print.txt
	fi
	let COUNTER=$COUNTER+1
done
exit $?
