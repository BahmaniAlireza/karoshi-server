#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/incident_log_view_cgi
then
	echo `date`: incident_log_view - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/incident_log_view_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/incident_log_view.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $incident_log_view_cgi'check' ]
then
	echo `date`: incident_log_view - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/incident_log_view_cgi
then
	echo `date`: incident_log_view - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/incident_log_view_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/incident_log_view.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $incident_log_view_cgi'check' ]
then
	echo `date`: incident_log_view - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo `date`: incident_log_view - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
REMOTE_MD5=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
ALPHABET=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f4`
ALPHABET2=`echo $ALPHABET | tr 'A-Z' 'a-z'`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
	echo `date`: incident_log_view - Not called by incident_log_view.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: incident_log_view - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: incident_log_view - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
	echo `date`: incident_log_view - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ -z "$ALPHABET" ]
then
	echo `date`: incident_log_view - No letter chosen by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

echo `date`: "incident_log_view - viewing incident log for the letter $ALPHABET by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -d /opt/karoshi/.tempdata ] || mkdir /opt/karoshi/.tempdata
chmod 0700 /opt/karoshi/.tempdata

if [ $ALPHABET = ALL ]
then
	cat /opt/karoshi/logs/incident_logs/* > /opt/karoshi/.tempdata/incident_log.$$ 2>/dev/null
else
	#Get line numbers of matching records
	cat /opt/karoshi/logs/incident_logs/$ALPHABET* > /opt/karoshi/.tempdata/incident_log.$$ 2>/dev/null
	if [ $ALPHABET != $ALPHABET2 ]
	then
		cat /opt/karoshi/logs/incident_logs/$ALPHABET2* >> /opt/karoshi/.tempdata/incident_log.$$ 2>/dev/null
	fi
fi
############################
#Language
############################

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER/language_choice
TEXTDOMAIN=karoshi-server

############################
#Show page
############################
LOGCOUNT=`cat /opt/karoshi/.tempdata/incident_log.$$ | wc -l`
COUNTER=1
if [ $LOGCOUNT -gt 0 ]
then
	#Show table of sites
	echo '<table class="standard" style="text-align: left; width: 1000px; height: 100px;" border="0" cellpadding="2" cellspacing="2">
	<tbody><tr><td style="width: 70px;"><b>'$"Date"'</b></td><td style="width: 45px;"><b>'$"Time"'</b></td><td><b>'$"Incident"'</b></td><td><b>'$"Action Taken"'</b></td><td><b>'$"Users Involved"'</b></td></tr>'
	while [ $COUNTER -le $LOGCOUNT ]
	do
		LOGDATA=`sed -n $COUNTER,$COUNTER"p" /opt/karoshi/.tempdata/incident_log.$$`

		DATE=`echo $LOGDATA | cut -d: -f2-4`
		TIME=`echo $LOGDATA | cut -d: -f5-6`
		INCIDENT=`echo $LOGDATA | cut -d: -f7`
		ACTION=`echo $LOGDATA | cut -d: -f8`
		USERS=`echo $LOGDATA | cut -d: -f9`
		echo "<tr><td" style='"width: 70px;"'">"$DATE"</td><td" style='"width: 45px;"'">"$TIME"</td><td>"$INCIDENT"</td><td>"$ACTION"</td><td>"$USERS"</td></tr>"
		let COUNTER=$COUNTER+1
	done
	echo '</tbody></table>'
	rm -f /opt/karoshi/.tempdata/incident_log.$$
else
	echo $"There are no incident logs available."'<br>'
	rm -f /opt/karoshi/.tempdata/incident_log.$$
	exit 101
fi
exit
