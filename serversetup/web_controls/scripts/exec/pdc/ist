#!/bin/bash
#Copyright (C) 2015 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
FAILED_SERVER=no
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/ist_cgi
then
	echo `date`: ist - No admin Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/ist_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/ist.cgi | cut -d' ' -f1`
[[ -z "$Checksum" ]] && Checksum=not_set
if [[ $Checksum'check' != $ist_cgi'check' ]]
then
	echo `date`: ist - Incorrect admin Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [[ $numArgs != 0 ]]
then
	echo `date`: ist - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-'`
if [[ -z "$DATA" ]]
then
	echo `date`: ist - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
MOBILE=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f5`
CATEGORY=`echo "$DATA" | cut -s -d: -f6`
SEARCHTERMS=`echo "$DATA" | cut -s -d: -f7`
USERNAME=`echo "$DATA" | cut -s -d: -f8`
SEARCHDATE=`echo "$DATA" | cut -s -d: -f9`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: ist - Not called by ist.cgi or bulk_user_creation_create.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: ist - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: ist - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo `date`: ist - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$CATEGORY" ]
then
	echo `date`: ist - Blank category by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ $CATEGORY = addcategory ]
then
	if [ -z "$SEARCHTERMS" ]
	then
		echo `date`: ist - Blank searchterms by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
fi

##########################
#Language
##########################

TEXTDOMAIN=karoshi-server

if [ $ACTION = reallydeletecategory ]
then
	if [ -f "/opt/karoshi/server_network/ist/categories/$CATEGORY" ]
	then
		echo `date`: ist - Removing category: "$CATEGORY" by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		rm -f "/opt/karoshi/server_network/ist/categories/$CATEGORY"
	fi
fi

if [ $ACTION = reallyaddcategory ]
then
	if [ ! -d /opt/karoshi/server_network/ist/categories ]
	then
		mkdir -p /opt/karoshi/server_network/ist/categories
		chmod 0750 /opt/karoshi/server_network/ist/categories
		chown root.apache_karoshi /opt/karoshi/server_network/ist/categories
	fi
	echo `date`: ist - Addding category: "$CATEGORY" searchterms: "$SEARCHTERMS" by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	echo "$SEARCHTERMS" | sed 's/+/\\|/g' > "/opt/karoshi/server_network/ist/categories/$CATEGORY"
fi

if [ $ACTION = viewuserdata ]
then
	#Get the date to do the search on
	TODAY=$(date +%Y-%m-%d)
	CATEGORY=$(echo $CATEGORY | sed 's/%2B/+/g')
	CATEGORY2=$(echo "$CATEGORY" | sed 's/+/ /g')

	#Get the search criteria for the category
	CRITERIA=$(cat /opt/karoshi/server_network/ist/categories/"$CATEGORY")
	CRITERIA2=$(echo "$CRITERIA" | sed 's/\\|/ /g')

	#Default to getting data for the last 5 days
	DATE_RANGE=4
	let DATE_RANGE_VIEW=$DATE_RANGE+1

	echo '<table class="standard" style="text-align: left;" ><tbody>
	<tr><td style="width: 180px;"><b>'$"Category"'</b></td><td>'$CATEGORY2'</td></tr>
	<tr><td><b>'$"Search Criteria"'</b></td><td>'$CRITERIA2'</td></tr>
	<tr><td><b>'$"Search Date"'</b></td><td>'$TODAY'</td></tr>
	<tr><td><b>'$"Date Range"'</b></td><td>'$DATE_RANGE_VIEW'</td></tr>
	<tr><td><b>'$"Username"'</b></td><td>'$USERNAME'</td></tr>
	</tbody></table><br>'



	echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
	<tr><th style="width: 70px;"><b>Filter</b></th><th style="width: 90px;"><b>Time</b></th><th></th><th style="width: 110px;"><b>Client</b></th><th></th><th style="width: 600px;"><b>Website</b></th></tr></thead><tbody>
	'
	for d in $(seq 0 $DATE_RANGE)
	do
		SEARCHDATE=$(date -d "$TODAY - $d days" +'%d-%m-%Y')
		#Do the search on each proxy server and collate the info
		for PROXYSERVER in `ls -1 /opt/karoshi/server_network/proxyservers/`
		do
			if [ $PROXYSERVER = $(hostname-fqdn) ]
			then
				#Check if the folder log exists for the day we are searching on.
				if [ -f /opt/karoshi/logs/internetlogs/$SEARCHDATE/users_detailed/$USERNAME ]
				then
					zgrep -i "'$CRITERIA'" /opt/karoshi/logs/internetlogs/$SEARCHDATE/users_detailed/$USERNAME | cut -d"/" -f8 | sed 's/.tar.gz//g' >> /opt/karoshi/server_network/ist/temp-user-data-$CATEGORY.$$
				fi
				#Check if the folder log exists for the day we are searching on.
				if [ -f /opt/karoshi/logs/internetlogs/$SEARCHDATE/users_detailed/$USERNAME.tar.gz ]
				then
					zgrep -i "'$CRITERIA'" /opt/karoshi/logs/internetlogs/$SEARCHDATE/users_detailed/$USERNAME.tar.gz | cut -d"/" -f8 | sed 's/.tar.gz//g'
				fi
			else
				ssh -x -o PasswordAuthentication=no $PROXYSERVER '
				#Check if the folder log exists for the day we are searching on.
				if [ -f /opt/karoshi/logs/internetlogs/'$SEARCHDATE'/users_detailed/'$USERNAME' ]
				then
					zgrep -a -i "'$CRITERIA'" /opt/karoshi/logs/internetlogs/'$SEARCHDATE'/users_detailed/'$USERNAME'
				fi
				if [ -f /opt/karoshi/logs/internetlogs/'$SEARCHDATE'/users_detailed/'$USERNAME'.tar.gz ]
				then
					zgrep -a -i "'$CRITERIA'" /opt/karoshi/logs/internetlogs/'$SEARCHDATE'/users_detailed/'$USERNAME'.tar.gz
				fi'
			fi
		done
	done
	echo '</tbody></table>'
fi

if [ $ACTION = viewdata ]
then
	ICON3=/images/submenus/internet/detailed_logs.png

	#Get the date to do the search on
	if [ -z "$SEARCHDATE" ]
	then

		EPOCH_TODAY=`date +%s`
		let ONEDAY=60*60*24
		let EPOCH_YESTERDAY=$EPOCH_TODAY-$ONEDAY
		SEARCHDATE=`date +%d-%m-%Y -d @$EPOCH_YESTERDAY`

	fi
	CATEGORY=$(echo $CATEGORY | sed 's/%2B/+/g')
	CATEGORY2=$(echo "$CATEGORY" | sed 's/+/ /g')

	#Get the search criteria for the category
	CRITERIA=$(cat /opt/karoshi/server_network/ist/categories/"$CATEGORY")
	CRITERIA2=$(echo "$CRITERIA" | sed 's/\\|/ /g')

	#View the data
	echo '<form id="testform" name="testform" action="/cgi-bin/admin/ist.cgi" method="post">
	<table class="standard" style="text-align: left;" ><tbody>
	<tr><td style="width: 180px;"><b>'$"Category"'</b></td><td>'$CATEGORY2'</td><td></td><td></td></tr>
	<tr><td><b>'$"Search Criteria"'</b></td><td colspan="3">'$CRITERIA2'</td></tr>
	<tr><td><b>'$"Search Date"'</b></td><td>'
	echo "<!-- calendar attaches to existing form element -->
	<input type=\"text\" value=\"$SEARCHDATE\" style=\"width: 200px\" size=14 maxlength=10 name=\"_SEARCHDATE_\"></td><td style=\"vertical-align: top; text-align: center;\">
	<script>
	new tcal ({
		// form name
		'formname': 'testform',
		// input name
		'controlname': '_SEARCHDATE_'
	});
	</script></td><td><button class=\"button\" name=\"_View_\" value=\"_ACTION_viewdata_CATEGORY_$CATEGORY"_"\">Show data</button></td></tr></tbody></table></form><br>"

	echo '<form action="/cgi-bin/admin/ist.cgi" method="post" target="_blank"><table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
	<tr><th style="width: 180px;"><b>'$"Username"'</b></th><th style="width: 80px;"><b>'$"Score"'</b></th><th></th></tr></thead><tbody>'
	for SORTDATA in $(sort -k2 -n -r --field-separator=',' /opt/karoshi/server_network/ist/logs/$SEARCHDATE/$CATEGORY)
	do
		USERNAME=$(echo "$SORTDATA" | cut -d, -f1)
		SCORE=$(echo "$SORTDATA" | cut -d, -f2)
		echo '<tr><td>'$USERNAME'</td><td>'$SCORE'</td><td>
		<button class="info" name="_View_" value="_ACTION_viewuserdata_CATEGORY_'$CATEGORY2'_USERNAME_'$USERNAME'_">
		<img src="'$ICON3'" alt="'$"View"'">
		<span>'$"View"'<br>'$USERNAME'</span>
		</button>
		</tr>'
	done
	echo '</tbody></table></form>'
fi


