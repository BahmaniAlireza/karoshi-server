#!/bin/bash
#Copyright (C) 2008 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/label_groups_cgi
then
	echo `date`: label_groups - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/label_groups_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/label_groups.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $label_groups_cgi'check' ]
then
	echo `date`: label_groups - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: label_groups - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\-+'`

if [ -z "$DATA" ]
then
	echo `date`: label_groups - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
LABELDATA=`echo "$DATA" | cut -s -d: -f4`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: label_groups - Not called by label_groups.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: label_groups - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: label_groups - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: label_groups - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
echo `date`: label_groups - by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/group_dropdown_def ] && rm -f /opt/karoshi/web_controls/group_dropdown_def

function special_chars {
LABEL=`echo $LABEL | sed 's/+/ /g' | sed 's/%27/ /g' | sed 's/%22/ /g' | sed 's/%23/#/g' | sed 's/%25/%/g' | sed 's/%26/&/g'  | sed 's/%28/ /g' | sed 's/%29/ /g' | sed 's/%21/ /g' | sed 's/%40/ /g' | sed 's/%24/ /g' | sed 's/%3C/ /g' | sed 's/%3E/ /g' | sed 's/%3F/?/g' | sed 's/%2F/ /g' | sed 's/%3E/ /g' | sed 's/%7C/ /g' | sed 's/%5C/ /g' | sed 's/%3C/,/g' | sed 's/%7E/~/g' | sed 's/%7B/ /g' | sed 's/%7D/ /g'`
}


#Sort out underscores
LABELARRAY=( `echo $LABELDATA | sed 's/____/ /g' | sed 's/%3A/:/g'` )

LABELARRYCOUNT=`echo ${#LABELARRAY[@]}`
COUNTER=0
while [ $COUNTER -lt $LABELARRYCOUNT ]
do
	GROUP=`echo ${LABELARRAY[$COUNTER]} | cut -d: -f1 | sed 's/-/HYPHEN/g'`
	LABEL=`echo ${LABELARRAY[$COUNTER]} | cut -d: -f2`
	special_chars
	echo $GROUP='"'"$LABEL"'"' >> /opt/karoshi/web_controls/group_dropdown_def
	let COUNTER=$COUNTER+1
done
exit

