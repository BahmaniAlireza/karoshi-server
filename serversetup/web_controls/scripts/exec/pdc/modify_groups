#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/modify_groups_cgi
then
echo `date`: modify_groups - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/modify_groups_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/modify_groups.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $modify_groups_cgi'check' ]
then
echo `date`: modify_groups - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: modify_groups - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+'`
if [ $DATA'null' = null ]
then
echo `date`: modify_groups - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
OPTIONCHOICE=`echo "$DATA" | cut -s -d: -f4`
PRIMARYGROUP=`echo "$DATA" | cut -s -d: -f5`
NEWPASSWORD=`echo "$DATA" | cut -s -d: -f6`
EXCEPTIONLIST=`echo "$DATA" | cut -s -d: -f7`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: modify_groups - Not called by modify_groups.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: modify_groups - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: modify_groups - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $OPTIONCHOICE'null' = null ]
then
echo `date`: modify_groups - Blank optionchoice by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $PRIMARYGROUP'null' = null ]
then
echo `date`: modify_groups - Blank group by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $OPTIONCHOICE = changepasswords ]
then
if [ $NEWPASSWORD'null' = null ]
then
echo `date`: modify_groups - Blank password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: modify_groups - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

############################
#Language
############################
LANGCHOICE=englishuk
STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/user/modify_groups ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/user/modify_groups
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all
#########################
#Get a list of users for the chosen group
#########################
[ $PRIMARYGROUP = tech ] && PRIMARYGROUP=techstaff
[ $PRIMARYGROUP = itadmin ] && PRIMARYGROUP=itadminstaff

USERLIST=( `getent passwd | grep /$PRIMARYGROUP/ | cut -d: -f1` )


#Scroll the page
echo "    <script type = \"text/javascript\" >

    var x;
    function autoscroll(){
    self.scrollBy(0,x)
    }

    function playautoscroll(){
    x = 5;
    setInterval('autoscroll()',0.01);
    stop();}

    function onetozero(){
    x=0;
    }

    function stop(){
    setTimeout (\"onetozero()\",600000000);
    }
    window.onload=playautoscroll

    </script>"

#########################
#enable accounts
#########################
if [ $OPTIONCHOICE = enable ] || [ $OPTIONCHOICE = disable ]
then

if [ $OPTIONCHOICE = enable ]
then
ACTION=enable
ACTIONLANG=Enabling
fi
if [ $OPTIONCHOICE = disable ]
then
ACTION=disable
ACTIONLANG=Disabling
fi
COUNTER=0
while [ $COUNTER -lt ${#USERLIST[@]} ]
do
USERNAME=`echo ${USERLIST[$COUNTER]}`
if [ `echo $EXCEPTIONLIST | grep -c -w $USERNAME` = 0 ]
then
=`echo $RANDOM`
echo $ACTIONLANG $USERNAME '<br>'
#Enable account
samba-tool user $ACTION $USERNAME
fi
let COUNTER=$COUNTER+1
done
fi

#########################
#Reset passwords
#########################
if [ $OPTIONCHOICE = resetpasswords ]
then
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/reset_password.cgi | cut -d' ' -f1`
COUNTER=0
while [ $COUNTER -lt ${#USERLIST[@]} ]
do
USERNAME=`echo ${USERLIST[$COUNTER]}`
if [ `echo $EXCEPTIONLIST | grep -c -w $USERNAME` = 0 ]
then
PASSWORD1=$RANDOM
echo Reseting password "for" $USERNAME to $PASSWORD1'<br>'
#reset password
echo "$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$USERNAME:$PASSWORD1" | /opt/karoshi/web_controls/exec/reset_password
fi
let COUNTER=$COUNTER+1
done
fi

#########################
#Delete users
#########################
if [ $OPTIONCHOICE = deleteaccounts ]
then
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/delete_user.cgi | cut -d' ' -f1`
COUNTER=0
while [ $COUNTER -lt ${#USERLIST[@]} ]
do
USERNAME=`echo ${USERLIST[$COUNTER]}`
if [ `echo $EXCEPTIONLIST | grep -c -w $USERNAME` = 0 ]
then
echo Deleting $USERNAME '<br>'
echo "$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$USERNAME:$DOMAINPASSWORD:$REQUESTFILE:" | /opt/karoshi/web_controls/exec/delete_user
fi
let COUNTER=$COUNTER+1
done
fi
exit
