#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_moodle_cgi
then
echo `date`: module_extra_domain_controler- No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_moodle_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/module_moodle.cgi | cut -d' ' -f1`
[ $Checksum'null' = null ] && Checksum=not_set
if [ $Checksum'check' != $module_moodle_cgi'check' ]
then
echo `date`: module_extra_domain_controler- Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_extra_domain_controler- incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ $DATA'null' = null ]
then
echo `date`: module_extra_domain_controler- no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
DOMAINNAME=`echo "$DATA" | cut -s -d: -f4 | tr -cd 'A-Za-z0-9'`
DOMAINPASS=`echo "$DATA" | cut -s -d: -f5`
DOMAINSERVER=`echo "$DATA" | cut -s -d: -f6`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
echo `date`: module_extra_domain_controler- Not called by module_extra_domain_controller.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_extra_domain_controler- Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_extra_domain_controler- Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $DOMAINNAME'null' = null ]
then
echo `date`: module_extra_domain_controler- Blank domain name by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $DOMAINPASS'null' = null ]
then
echo `date`: module_extra_domain_controler- Blank domain password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

if [ $DOMAINSERVER'null' = null ]
then
echo `date`: module_extra_domain_controler- Blank domain server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: module_extra_domain_controler- access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
echo `date`: module_extra_domain_controller by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER

#Setup shorewall

#Setup samba

#Setup ldap


#Copy ldap user data to extra ldap server

#Copy in /etc/ldap.secret
scp -p /etc/ldap.secret root@$DOMAINSERVER:/etc/ 1> /dev/null
#Copy in ldap module
scp -p -r /opt/karoshi/serversetup/modules/ldap root@$DOMAINSERVER:/opt/karoshi/serversetup/modules/ 1> /dev/null
scp -p -r /opt/karoshi/serversetup/distro/ubuntu/extra_server/software root@$DOMAINESERVER:/opt/karoshi/serversetup/distro/ubuntu/extra_server/ 1> /dev/null
scp -p -r /opt/karoshi/serversetup/distro/pclinuxos/extra_server/software root@$DOMAINSERVER:/opt/karoshi/serversetup/distro/pclinuxos/extra_server/ 1> /dev/null
#Transfer ldap information to the slave ldap server
[ -f /opt/karoshi/.tempdata/master.ldif ] && rm -f /opt/karoshi/.tempdata/master.ldif
touch /opt/karoshi/.tempdata/master.ldif
chown root.root /opt/karoshi/.tempdata/master.ldif
chmod 0600 /opt/karoshi/.tempdata/master.ldif
slapcat -s "ou=People,dc=karoshi,dc=local" -l /opt/karoshi/.tempdata/master.ldif
scp /opt/karoshi/.tempdata/master.ldif root@$DOMAINSERVER:"/opt/karoshi/.tempdata/"
rm -f /opt/karoshi/.tempdata/master.ldif
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
/opt/karoshi/serversetup/modules/ldap/setupslaveldapserver
'
[ ! -d /opt/karoshi/server_network/slave_ldap_servers ] && mkdir -p /opt/karoshi/server_network/slave_ldap_servers
touch /opt/karoshi/server_network/slave_ldap_servers/$DOMAINSERVER
[ ! -d /opt/karoshi/server_network/servers/$DOMAINSERVER ] && mkdir -p /opt/karoshi/server_network/servers/$DOMAINSERVER
echo $ROLE3"<br>" > /opt/karoshi/server_network/servers/$MOODLESERVER/ldapserver

[ ! -d /opt/karoshi/server_network/ldap_clients/ ] && mkdir -p /opt/karoshi/server_network/ldap_clients/
touch /opt/karoshi/server_network/ldap_clients/$DOMAINSERVER
exit

