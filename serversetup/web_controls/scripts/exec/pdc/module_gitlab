#!/bin/bash
#Copyright (C) 2015 Matthew Jowett
#
#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_gitlab_cgi
then
	echo `date`: module_gitlab - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

source /opt/karoshi/web_controls/checksums/admin_checksums/module_gitlab_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_gitlab.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $module_gitlab_cgi'check' ]; then
	echo `date`: module_gitlab - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]; then
	echo `date`: module_gitlab - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ -z "$DATA" ]; then
	echo `date`: module_gitlab - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ALIAS=`echo "$DATA" | cut -s -d: -f4 | sed 's/%3A/:/g' | sed 's/%2F/\//g'`
SERVERNAME=`echo "$DATA" | cut -s -d: -f5`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]; then
	echo `date`: module_gitlab - Not called by module_gitlab.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]; then
	echo `date`: module_gitlab - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]; then
	echo `date`: module_gitlab - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ALIAS" ]; then
	echo `date`: module_gitlab - Blank alias by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$SERVERNAME" ]; then
	echo `date`: module_gitlab - Blank domain by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]; then
	echo `date`: module_gitlab - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
echo `date`: setupgitlab by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER

#Check that this server has been setup with the correct authentication
if [ $SERVERNAME != `hostname-fqdn` ]; then
	echo "$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$SERVERNAME:users:" | /opt/karoshi/serversetup/modules/authentication/check_auth
	if [ $? = 101 ]; then
		echo $AUTHENTICATIONFAILMSG"<br><br>"
		echo `date`: module_gitlab - $SERVERNAME does not have the correct authentication "for" this module by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		sleep 2
		exit 101
	fi
fi

echo '<div class="sectiontitle">'$"Setup Gitlab"' - '$SERVERNAME'</div><br></div><div id="infobox">'

source /opt/karoshi/server_network/domain_information/domain_name
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software

PDCIP=$(net lookup `hostname-fqdn`)

#Update alias entry for the server
[ ! -d /opt/karoshi/server_network/aliases ] && mkdir -p /opt/karoshi/server_network/aliases
touch /opt/karoshi/server_network/aliases/$SERVERNAME
[ `grep -c -w $ALIAS /opt/karoshi/server_network/aliases/$SERVERNAME` = 0 ] && echo $ALIAS >> /opt/karoshi/server_network/aliases/$SERVERNAME

function check_already_installed {
if [ $SERVERNAME == `hostname-fqdn` ]; then
	#Check to see if gitlab is already installed
	if [ -d /opt/gitlab ]; then
		echo `date`: module_gitlab - gitlab is already installed on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		echo $"Gitlab is already installed on this server."
		exit 101
	fi
else
	ssh -x -o PasswordAuthentication=no $SERVERNAME '
#Check to see if gitlab is already installed
if [ -d /opt/gitlab ]; then
	echo `date`: module_gitlab - gitlab is already installed on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	echo $"Gitlab is already installed on this server."
	exit 101
fi'
	if [ `echo $?` == 101 ]; then
		echo `date`: module_gitlab - gitlab is already installed on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
fi
}

function add_dns_entry {
#Add entry to samba4 dns
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
source /opt/karoshi/server_network/domain_information/domain_name
echo `date`: module_gitlab - checking "if" $DOMAINPATH is "in" the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
samba-tool dns query 127.0.0.1 $REALM $ALIAS.$REALM CNAME --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $? != 0 ]; then
	echo `date`: dnsadd - adding $ALIAS.$REALM $SERVERNAME to the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	samba-tool dns add 127.0.0.1 $REALM $ALIAS CNAME $SERVERNAME --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi
}

function install_gitlab {
	#Install
	if [ $SERVERNAME == `hostname-fqdn` ]; then
		echo $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$SERVERNAME:$ALIAS:$PDCIP: | /opt/karoshi/serversetup/modules/gitlab/setupgitlab
	else
		echo '<ul><li>'$SERVERNAME' - '$"Copying module"'</li></ul>'
		#Remote server
		#Copy in module
		scp -p -r /opt/karoshi/serversetup/modules/gitlab root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null

		#Copy in domain information
		scp -p -r /opt/karoshi/server_network/domain_information root@$SERVERNAME:/opt/karoshi/server_network/ 1> /dev/null

		#Install gitlab
		ssh -x -o PasswordAuthentication=no $SERVERNAME '
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$SERVERNAME:$ALIAS:$PDCIP:' | /opt/karoshi/serversetup/modules/gitlab/setupgitlab
'
	fi
}

function add_role_information {
	[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
	echo ''$"Gitlab"'<br>' > /opt/karoshi/server_network/servers/$SERVERNAME/gitlab
	echo '<a href="https://'$ALIAS.$REALM'" target="_blank">https://'$ALIAS.$REALM'</a><br>' >> /opt/karoshi/server_network/servers/$SERVERNAME/gitlab
	[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role
	echo $"Apache Web Server""<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/apacheserver
	echo $SERVERNAME > /opt/karoshi/server_network/gitlabserver
	echo $DOMAINPATH > /opt/karoshi/server_network/gitlabdomain
	[ ! -d /opt/karoshi/server_network/webservers/ ] && mkdir -p /opt/karoshi/server_network/webservers
	echo $SERVERNAME > /opt/karoshi/server_network/webservers/$SERVERNAME
	sed -i 's/WEBCTRL=no/WEBCTRL=yes/g' /opt/karoshi/server_network/web_controls/menusettings
}

function apply_ssl_certificate {
#######################
#Apply certificate
#######################
echo "$REMOTE_USER:$REMOTE_ADDR:$SERVERNAME:enablecert:" | /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/apachesslcert
[ `echo $?` != 0 ] && exit 101
}

#function create_linux_client_icon {
#[ ! -d /var/lib/samba/netlogon/linuxclient/$LINUXCLIENTVER/desktop-icons/all ] && mkdir -p /var/lib/samba/netlogon/linuxclient/$LINUXCLIENTVER/desktop-icons/all
#echo '[Desktop Entry]
#Version=1.0
#Type=Link
#Name=Gitlab
#Comment=Gitlab
#Icon=gitlab
#URL=https://'$ALIAS.$REALM'' > /var/lib/samba/netlogon/linuxclient/$LINUXCLIENTVER/desktop-icons/all/Gitlab.desktop
#}

check_already_installed
apply_ssl_certificate
add_dns_entry
install_gitlab
add_role_information
#create_linux_client_icon

###########################
#Show completed message
###########################
echo '<br>'$"Gitlab has been installed and can be accessed from" - '<a href="https://'$ALIAS.$REALM'" target="_blank">'$ALIAS.$REALM'</a>'
echo '<br><p style="font-weight:bold">'$"Username: root - Password: 5iveL!fe"'</p>'
echo '<br>If you are switching to LDAP login only, remember to set an LDAP user as an administrator within Gitlab. The root account will become unaccessable.<br>'
echo '<br><p style="font-weight:bold; font-size:20px;">'$"Please login and change this password immediately."'</p><br>'
exit
