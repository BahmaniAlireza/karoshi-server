#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_joomla_cgi
then
	echo "$(date): module_joomla - No Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_joomla_cgi
Checksum=$(sha256sum /var/www/cgi-bin_karoshi/admin/module_joomla.cgi | cut -d' ' -f1)
[ -z "$Checksum" ] && Checksum=not_set

if [ "$Checksum"'check' != "$module_joomla_cgi"'check' ]
then
	echo "$(date): module_joomla - Incorrect Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs="$#"
if [ "$numArgs" != 0 ]
then
	echo "$(date): module_joomla - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-%')
if [ -z "$DATA" ]
then
	echo "$(date): module_joomla - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
RemoteCheckSum=$(echo "$DATA" | cut -s -d: -f3)
JOOMLASERVER=$(echo "$DATA" | cut -s -d: -f4)
ALIAS=$(echo "$DATA" | cut -s -d: -f5 | cut -d"." -f1)
########################
#Check data
########################
if [ "$RemoteCheckSum"'check' != "$Checksum"'check' ]
then
	echo "$(date): module_joomla - Not called by module_joomla.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): module_joomla - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): module_joomla - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$JOOMLASERVER" ]
then
	echo "$(date): module_joomla - Blank domain by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [ -z "$ALIAS" ]
then
	echo "$(date): module_joomla - Blank alias by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi
if [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): module_joomla - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
echo "$(date): setup_joomla by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/"$DISTROCHOICE"/all/software
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/"$DISTROCHOICE"/all/software

#Add entry to samba4 dns
LDAPPASS=$(sed -n 1,1p /etc/ldap.secret)
source /opt/karoshi/server_network/domain_information/domain_name
echo "$(date): module_joomla - checking if $ALIAS.$REALM is in the dns records by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
samba-tool dns query 127.0.0.1 "$REALM" "$ALIAS.$REALM" CNAME --username=Administrator --password="$LDAPPASS" 1>> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE" 2>> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
if [ "$?" != 0 ]
then
	echo "$(date): dnsadd - adding $ALIAS for $JOOMLASERVER to the dns records by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	samba-tool dns add 127.0.0.1 "$REALM" "$ALIAS" CNAME "$JOOMLASERVER" --username=Administrator --password="$LDAPPASS" 1>> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE" 2>> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
fi

#Update alias entry for the server
[ ! -d /opt/karoshi/server_network/aliases ] && mkdir -p /opt/karoshi/server_network/aliases
touch /opt/karoshi/server_network/aliases/"$JOOMLASERVER"
[[ $(grep -c -w "$ALIAS" /opt/karoshi/server_network/aliases/"$JOOMLASERVER") = 0 ]] && echo "$ALIAS" >> /opt/karoshi/server_network/aliases/"$JOOMLASERVER"

#Create ssl cert
echo "$REMOTE_USER:$REMOTE_ADDR:$JOOMLASERVER:enablecert:" | /opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/apachesslcert

if [[ "$JOOMLASERVER" = "$(hostname-fqdn)" ]]
then
	#Install joomla
	/opt/karoshi/serversetup/modules/joomla/setupjoomla
else
	#Install joomla
	ssh -x -o PasswordAuthentication=no "$JOOMLASERVER" '
	/opt/karoshi/serversetup/modules/joomla/setupjoomla
	'
fi


#########################
#Add role information
#########################
[ ! -d /opt/karoshi/server_network/servers/"$JOOMLASERVER" ] && mkdir -p /opt/karoshi/server_network/servers/"$JOOMLASERVER"
[ -f /opt/karoshi/server_network/servers/"$JOOMLASERVER"/no_role ] && rm -f /opt/karoshi/server_network/servers/"$JOOMLASERVER"/no_role
echo $"Joomla""<br>" > /opt/karoshi/server_network/servers/"$JOOMLASERVER"/joomla
echo '<a href="https://'"$ALIAS.$REALM"'/joomla" target="_blank">https://'"$ALIAS.$REALM"'/joomla</a><br>' >> /opt/karoshi/server_network/servers/"$JOOMLASERVER"/joomla
echo $"Apache Web Server""<br>" > /opt/karoshi/server_network/servers/"$JOOMLASERVER"/apacheserver

[ ! -d /opt/karoshi/server_network/webservers/ ] && mkdir -p /opt/karoshi/server_network/webservers
echo "$JOOMLASERVER" > /opt/karoshi/server_network/webservers/"$JOOMLASERVER"

sed -i 's/WEBCTRL=no/WEBCTRL=yes/g' /opt/karoshi/server_network/web_controls/menusettings

#Add in monitoring for the server
if [ -f /opt/karoshi/server_network/monitoringserver ]
then
	/opt/karoshi/serversetup/modules/monitoring/scripts/add_karoshi_server_monitors "$JOOMLASERVER"
fi

###########################
#Show completed message
###########################
echo '<br>'$"Joomla has been installed and can be accessed from" - '<a href="https://'"$ALIAS.$REALM"'/joomla" target="_blank">http://'"$ALIAS.$REALM"'/joomla</a>'
echo '<br>'$"Username":admin - $"password": admin
echo '<br><p style="font-weight:bold; font-size:20px;">'$"Please login and change this password immediately."'</p><br>'
exit

