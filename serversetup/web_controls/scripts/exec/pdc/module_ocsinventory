#!/bin/bash
#Copyright (C) 2009 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_ocsinventory_cgi
then
	echo `date`: module_ocsinventory - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_ocsinventory_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_ocsinventory.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $module_ocsinventory_cgi'check' ]
then
	echo `date`: module_ocsinventory - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: module_ocsinventory - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ -z "$DATA" ]
then
	echo `date`: module_ocsinventory - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: module_ocsinventory - Not called by module_ocsinventory.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: module_ocsinventory - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: module_ocsinventory - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: module_ocsinventory - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ -z "$SERVERNAME" ]
then
	echo `date`: module_ocsinventory - Blank OCS server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

echo `date`: setupocs on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER

#Add apache_karoshi to the apache group so that sessions work in php
#usermod -G apache_karoshi,apache apache_karoshi

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software

#####################
#Install ocs
#####################


PDCIP=`net lookup $HOSTNAME`

if [ $SERVERNAME = `hostname-fqdn` ]
then
	#Check to see if ocs is already installed
	if [ -d /var/www/html_karoshi/admin/ocs ]
	then
		echo `date`: module_ocsinventory - ocs is already installed on $OCS_SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		echo $OCSINSTERROR
		exit
	fi
	#Install OCS
	echo $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$PDCIP: | /opt/karoshi/serversetup/modules/ocsinventory/setupocs
fi

if [ $SERVERNAME != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $SERVERNAME '
#Check to see if ocs is already installed
if [ -d /var/www/html/ocs ]
then
	echo '$OCSINSTERROR'
	exit 101
fi
[ ! -d /opt/karoshi/serversetup/modules/ ] && mkdir -p /opt/karoshi/serversetup/modules/
'
if [ `echo $?` = 101 ]
then
	echo `date`: module_ocsinventory - OCS is already installed on $OCS_SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/ocsinventory root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null
scp -p -r /opt/karoshi/serversetup/distro/ubuntu/modules/ocsinventory root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/modules/ 1> /dev/null
#Copy in mysql_root_pass
scp -p -r /opt/karoshi/serversetup/all/"useful scripts"/mysql_root_pass root@$SERVERNAME:"/opt/karoshi/serversetup/all/useful\ scripts/" 1> /dev/null
#Install ocs
ssh -x -o PasswordAuthentication=no $SERVERNAME '
#Allow PDC to connect to remote mysql
echo "<ul><li>"'$SERVERNAME' - '$"Allowing network mysql connections"'"</li></ul>"

if [ -f /etc/my.cf ]
then
	sed -i "s/skip-networking/#skip-networking/g" /etc/my.cnf
fi

if [ `grep -c 0.0.0.0 /etc/mysql/my.cnf` = 0 ]
then
	sed -i "s/127.0.0.1/0.0.0.0/g" /etc/mysql/my.cnf
	#Restart mysql
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/'$DISTROCHOICE'/scripts/control_services/mysql_stop
	sleep 1
	/opt/karoshi/serversetup/distro/'$DISTROCHOICE'/scripts/control_services/mysql_start
fi

#Setup OCS
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$PDCIP:' | /opt/karoshi/serversetup/modules/ocsinventory/setupocs
#####################################
#Ensure that mysql port are open in shorewall
#####################################
MODCHECK=`grep -c -w 3306 /etc/shorewall/rules`
if [ $MODCHECK = 0 ]
then
LINENUM=`grep -n "LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" /etc/shorewall/rules | cut -d: -f1`
sed -i $LINENUM"c"\ACCEPT"	"net:'$PDCIP'"	"fw"	"tcp"	"3306"	"-"#"mysql /etc/shorewall/rules
echo "#"LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
fi
MODCHECK2=`grep -c -w 80 /etc/shorewall/rules`
if [ $MODCHECK2 = 0 ]
then
LINENUM=`grep -n "LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" /etc/shorewall/rules | cut -d: -f1`
sed -i $LINENUM"c"\ACCEPT"	"net"	"fw"	"tcp"	"80"	"-"#"apache /etc/shorewall/rules
echo "#"LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
fi
######################
#Restart shorewall
######################
if [ $MODCHECK = 0 ] || [ $MODCHECK2 = 0 ] 
then
echo "<ul><li>'$"Restarting shorewall"'</li></ul>"
/etc/init.d/'$SHOREWALLVER' stop 1>/dev/null
/etc/init.d/'$SHOREWALLVER' start 1>/dev/null
fi
'
fi


[ -d /var/www/html_karoshi/admin/ocs ] && rm -f -R /var/www/html_karoshi/admin/ocs
[ -d /var/www/html_karoshi/tech/ocs ] && rm -f -R /var/www/html_karoshi/tech/ocs

#Add files to web management
if [ $SERVERNAME = `hostname-fqdn` ]
then
	cp -f -R /usr/share/ocsinventory-reports/ocsreports /var/www/html_karoshi/admin/ocs
else
	scp -p -r root@$SERVERNAME:/usr/share/ocsinventory-reports/ocsreports/ /var/www/html_karoshi/admin/ocs 1> /dev/null
	#Edit host path
	sed -i 's/localhost/'$SERVERNAME'/g' /var/www/html_karoshi/admin/ocs/dbconfig.inc.php
	sed -i 's/ocs/ocs2/g' /var/www/html_karoshi/admin/ocs/dbconfig.inc.php
fi
cp -f -R /var/www/html_karoshi/admin/ocs /var/www/html_karoshi/tech/ocs
chown -R root.apache_karoshi /var/www/html_karoshi/admin/ocs
chmod -R 0440 /var/www/html_karoshi/admin/ocs
chmod -R u+X,g+X /var/www/html_karoshi/admin/ocs

chown -R root.apache_karoshi /var/www/html_karoshi/tech/ocs
chmod -R 0440 /var/www/html_karoshi/tech/ocs
chmod -R u+X,g+X /var/www/html_karoshi/tech/ocs
#Create completed info file
[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
echo '<a href="/admin/ocs/" target="_blank">OCSInventory</a><br>' > /opt/karoshi/server_network/servers/$SERVERNAME/ocsserver
echo Client Path: http://$SERVERNAME/ocsinventory"<br>" >> /opt/karoshi/server_network/servers/$SERVERNAME/ocsserver
[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role
echo $SERVERNAME > /opt/karoshi/server_network/ocs_server

#Modify web management menus
sed -i 's/OCSCTRL=no/OCSCTRL=yes/g' /opt/karoshi/server_network/web_controls/menusettings
echo '<br><br><b>'$COMPLETEDMSG'</b><br>'
exit
