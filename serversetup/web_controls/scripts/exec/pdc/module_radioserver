#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_radioserver_cgi
then
	echo `date`: module_radioserver - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_radioserver_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/module_radioserver.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $module_radioserver_cgi'check' ]
then
	echo `date`: module_radioserver - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: module_radioserver - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-'`
if [ -z "$DATA" ]
then
	echo `date`: module_radioserver - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
ADMINPASS=`echo "$DATA" | cut -s -d: -f5`
SOURCEPASS=`echo "$DATA" | cut -s -d: -f6`
RELAYPASS=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: module_radioserver - Not called by module_radioserver.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: module_radioserver - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: module_radioserver - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo `date`: module_radioserver - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ADMINPASS" ]
then
	echo `date`: module_radioserver - Blank admin password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$SOURCEPASS" ]
then
	echo `date`: module_radioserver - Blank "source" password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$RELAYPASS" ]
then
	echo `date`: module_radioserver - Blank relay password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

echo `date`: module_radioserver - Setting up $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

source /opt/karoshi/server_network/domain_information/domain_name

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

if [ $SERVERNAME = `hostname-fqdn` ]
then

#Check that the server is running ubuntu
	if [ `uname -a | grep -c Ubuntu` = 0 ]
	then
		echo This module currently only works with ubuntu."<br><br>"
		uname -a"<br><br>"
		sleep 10
		exit 101
	fi

	###########################
	#Check that software is installed
	###########################
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/modules/radioserver/software
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/icecast_stop 1>/dev/null

	#Modify icecast.xml with new passwords
	ADMINLINENUM=`grep -n "<admin-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $ADMINLINENUM"c""<admin-password>"$ADMINPASS"</admin-password>" /etc/icecast2/icecast.xml

	SOURCELINENUM=`grep -n "<source-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $SOURCELINENUM"c""<source-password>"$SOURCEPASS"</source-password>" /etc/icecast2/icecast.xml

	RELAYLINENUM=`grep -n "<relay-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $RELAYLINENUM"c""<relay-password>"$RELAYPASS"</relay-password>" /etc/icecast2/icecast.xml

	#Set hostname
	sed -i "s%<hostname>localhost</hostname>%<hostname>radio.$REALM</hostname>%g" /etc/icecast2/icecast.xml

	#Set location
	LOCATION=$(cat /etc/timezone)
	sed -i "s%<location>Earth</location>%<location>$LOCATION</location>%g" /etc/icecast2/icecast.xml
	
	#Set admin contact
	sed -i "s%<admin>icemaster@localhost</admin>%<admin>icemaster@$REALM</admin>%g" /etc/icecast2/icecast.xml
 
	#Change port to 80001
	sed -i "s%8000%8001%g" /etc/icecast2/icecast.xml

	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/icecast_start 1>/dev/null

	###########################
	#Open shorewall ports
	###########################
	RESTART_SHOREWALL=no
	MODCHECK=`grep -c -w \#Icecast /etc/shorewall/rules`
	if [ $MODCHECK = 0 ]
	then
		RESTART_SHOREWALL=yes
		echo ''$SHOREWALLMSG - tcp 8001"<br><br>"
		LINENUM=`grep -n "LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" /etc/shorewall/rules | cut -d: -f1`
		sed -i $LINENUM"c"\ACCEPT"	"net"	"fw"	"tcp"	"8001"	"-"#"Icecast /etc/shorewall/rules
		echo "#"LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
	fi

	######################
	#Restart shorewall
	######################
	if [ $RESTART_SHOREWALL = yes ]
	then
		echo $RESTARTSWMSG"<br><br>"
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop
		echo "<br>"
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start
		echo "<br><br>"
	fi
else

	#Copy module files to remote server
	scp -p -r /opt/karoshi/serversetup/modules/radioserver root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null
	scp -p -r /opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/icecast_start root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/ 1> /dev/null
	scp -p -r /opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/icecast_stop root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/scripts/control_services/ 1> /dev/null
	scp -p -r /opt/karoshi/serversetup/distro/ubuntu/scripts/startonboot/icecast root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/scripts/startonboot/ 1> /dev/null
	scp -p -r /opt/karoshi/serversetup/distro/ubuntu/scripts/stoponboot/icecast root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/scripts/stoponboot/ 1> /dev/null
	scp -p -r /opt/karoshi/serversetup/distro/ubuntu/modules/radioserver root@$SERVERNAME:/opt/karoshi/serversetup/distro/ubuntu/modules/ 1> /dev/null


	ssh -x -o PasswordAuthentication=no $SERVERNAME '
	source /opt/karoshi/serversetup/variables/distro
	#Check that the server is running ubuntu
	if [ `uname -a | grep -c Ubuntu` = 0 ]
	then
		echo This module currently only works with ubuntu."<br><br>"
		uname -a"<br><br>"
		sleep 10
		exit 101
	fi

	###########################
	#Check that software is installed
	###########################
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/modules/radioserver/software
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/icecast_stop

	#Modify icecast.xml with new passwords
	ADMINLINENUM=`grep -n "<admin-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $ADMINLINENUM"c""<admin-password>"'$ADMINPASS'"</admin-password>" /etc/icecast2/icecast.xml

	SOURCELINENUM=`grep -n "<source-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $SOURCELINENUM"c""<source-password>"'$SOURCEPASS'"</source-password>" /etc/icecast2/icecast.xml

	RELAYLINENUM=`grep -n "<relay-password>" /etc/icecast2/icecast.xml | cut -d: -f1`
	sed -i $RELAYLINENUM"c""<relay-password>"'$RELAYPASS'"</relay-password>" /etc/icecast2/icecast.xml

	#Set hostname
	sed -i "s%<hostname>localhost</hostname>%<hostname>radio.'$REALM'</hostname>%g" /etc/icecast2/icecast.xml

	#Set location
	LOCATION=$(cat /etc/timezone)
	sed -i "s%<location>Earth</location>%<location>$LOCATION</location>%g" /etc/icecast2/icecast.xml
	
	#Set admin contact
	sed -i "s%<admin>icemaster@localhost</admin>%<admin>icemaster@'$REALM'</admin>%g" /etc/icecast2/icecast.xml
 
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/icecast_start 1>/dev/null
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/icecast 2>/dev/null

	###########################
	#Open shorewall ports
	###########################
	RESTART_SHOREWALL=no
	MODCHECK=`grep -c -w \#Icecast /etc/shorewall/rules`
	if [ $MODCHECK = 0 ]
	then
		RESTART_SHOREWALL=yes
		echo ''$SHOREWALLMSG - tcp 8000"<br><br>"
		LINENUM=`grep -n "LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" /etc/shorewall/rules | cut -d: -f1`
		sed -i $LINENUM"c"\ACCEPT"	"net"	"fw"	"tcp"	"8000"	"-"#"Icecast /etc/shorewall/rules
		echo "#"LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE >> /etc/shorewall/rules
	fi

	######################
	#Restart shorewall
	######################
	if [ $RESTART_SHOREWALL = yes ]
	then
		echo '$RESTARTSWMSG'"<br><br>"
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_stop
		echo "<br>"
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/shorewall_start
		echo "<br><br>"
	fi
	'
fi
if [ $? = 0 ]
then
	#Add role information
	SERVERIP=`net lookup $SERVERNAME`
	[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
	[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role
	echo $"Internet Radio Server""<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/radioserver
	echo '<a href="http://'$SERVERNAME':8000" target="_blank">http://'$SERVERNAME':8000</a><br>' >> /opt/karoshi/server_network/servers/$SERVERNAME/radioserver
	echo $SERVERNAME > /opt/karoshi/server_network/radioserver
fi
exit


