#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_rubycas_cgi
then
echo `date`: module_rubycas - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_rubycas_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_rubycas.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $module_rubycas_cgi'check' ]
then
echo `date`: module_rubycas - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_rubycas - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ $DATA'null' = null ]
then
echo `date`: module_rubycas - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
LDAPSERVER=`echo "$DATA" | cut -s -d: -f4`
CASSERVER=`echo "$DATA" | cut -s -d: -f5`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: module_rubycas - Not called by module_rubycas.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_rubycas - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_rubycas - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $CASSERVER'null' = null ]
then
echo `date`: module_rubycas - Blank cas server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: module_rubycas - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
echo `date`: setupcas by $REMOTE_USER on $CASSERVER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software

echo '<b>'$TITLE' - '$CASSERVER'</b><br><br>'

##########################
#Check to see which distro this is
##########################

if [ $CASSERVER = `hostname-fqdn` ]
then
if [ $DISTROCHOICE != ubuntu ]
then
echo "<li>This module is only currently supported on ubuntu.</li><br>"
exit 101
fi
else
ssh -x -o PasswordAuthentication=no $CASSERVER '
source /opt/karoshi/serversetup/variables/distro
if [ $DISTROCHOICE != ubuntu ]
then
echo "<li>This module is only currently supported on ubuntu.</li><br>"
exit 101
fi
exit
'
[ `echo $?` = 101 ] && exit 101
fi

##########################
#Configure ldap
##########################

CONFIGURE_LDAP=yes
if [ $CASSERVER = `hostname-fqdn` ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/slave_ldap_servers/$CASSERVER ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/ldap_clients/$CASSERVER ]
then
CONFIGURE_LDAP=no
fi

#########################
#Ldap user check
#########################
if [ $CASSERVER != `hostname-fqdn` ] && [ $CONFIGURE_LDAP != yes ]
then
PDCUSERCOUNT=`getent passwd | grep -c :/home/users/`

SERVERUSERCOUNT=`ssh -x -o PasswordAuthentication=no $CASSERVER '
getent passwd | grep -c :/home/users/
'
`
[ $PDCUSERCOUNT != $SERVERUSERCOUNT ] && CONFIGURE_LDAP=yes
fi

if [ $CONFIGURE_LDAP = yes ]
then
if [ $LDAPSERVER = slaveldapserver ]
then
#Copy in ldap module
scp -p -r /opt/karoshi/serversetup/modules/ldap root@$CASSERVER:/opt/karoshi/serversetup/modules/ 1> /dev/null
#Transfer ldap information to the slave ldap server
[ -f /opt/karoshi/.tempdata/master.ldif ] && rm -f /opt/karoshi/.tempdata/master.ldif
touch /opt/karoshi/.tempdata/master.ldif
chown root.root /opt/karoshi/.tempdata/master.ldif
chmod 0600 /opt/karoshi/.tempdata/master.ldif
slapcat -s "ou=People,dc=karoshi,dc=local" -l /opt/karoshi/.tempdata/master.ldif
scp /opt/karoshi/.tempdata/master.ldif root@$CASSERVER:"/opt/karoshi/.tempdata/"
scp /opt/karoshi/server_network/domain_information/domain_name root@$CASSERVER:"/opt/karoshi/.tempdata/"
rm -f /opt/karoshi/.tempdata/master.ldif
ssh -x -o PasswordAuthentication=no $CASSERVER '
/opt/karoshi/serversetup/modules/ldap/setupslaveldapserver
'
[ ! -d /opt/karoshi/server_network/slave_ldap_servers ] && mkdir -p /opt/karoshi/server_network/slave_ldap_servers
touch /opt/karoshi/server_network/slave_ldap_servers/$CASSERVER
[ ! -d /opt/karoshi/server_network/servers/$CASSERVER ] && mkdir -p /opt/karoshi/server_network/servers/$CASSERVER
echo $ROLE3"<br>" > /opt/karoshi/server_network/servers/$CASSERVER/ldapserver
else
PDCIP=`net lookup $HOSTNAME`
ssh -x -o PasswordAuthentication=no $CASSERVER '
echo "'$REMOTE_USER':'$REMOTE_ADDR':'$MD5SUM':'$HOSTNAME':'$PDCIP':" | /opt/karoshi/serversetup/modules/ldap/configureldap 
'
#Copy in /etc/ldap.secret
scp -p /etc/ldap.secret root@$CASSERVER:/etc/ 1> /dev/null
[ ! -d /opt/karoshi/server_network/ldap_clients/ ] && mkdir -p /opt/karoshi/server_network/ldap_clients/
touch /opt/karoshi/server_network/ldap_clients/$CASSERVER
fi
fi

##########################
#Install cas
##########################
#PDC
CASSERVERIP=127.0.0.1
if [ $CASSERVER = `hostname-fqdn` ]
then
echo $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$CASSERVER:$CASSERVERIP: | /opt/karoshi/serversetup/modules/rubycas/setuprubycas
fi

#Remote server
if [ $CASSERVER != `hostname-fqdn` ]
then

ssh -x -o PasswordAuthentication=no $CASSERVER '
[ ! -d /opt/karoshi/serversetup/modules/ ] && mkdir -p /opt/karoshi/serversetup/modules/
[ ! -d /opt/karoshi/serversetup/distro/ubuntu/modules/ ] && mkdir -p /opt/karoshi/distro/ubuntu/modules/
'


if [ $LDAPSERVER = slaveldapserver ]
then
CASSERVERIP=127.0.0.1
else
CASSERVERIP=`net lookup $HOSTNAME`
fi

#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/rubycas root@$CASSERVER:/opt/karoshi/serversetup/modules/ 1> /dev/null
#Copy in module
scp -p -r /opt/karoshi/serversetup/distro/ubuntu/modules/rubycas root@$CASSERVER:/opt/karoshi/serversetup/distro/ubuntu/modules/ 1> /dev/null
#Install cas
ssh -x -o PasswordAuthentication=no $CASSERVER '
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$CASSERVER:$CASSERVERIP:' | /opt/karoshi/serversetup/modules/rubycas/setuprubycas
'
fi

#########################
#Add role information
#########################
[ ! -d /opt/karoshi/server_network/servers/$CASSERVER ] && mkdir -p /opt/karoshi/server_network/servers/$CASSERVER
echo $ROLE"<br>" > /opt/karoshi/server_network/servers/$CASSERVER/casserver
echo '<a href="https://'$CASSERVER':444" target="_blank">http://'$CASSERVER':444</a><br>' >> /opt/karoshi/server_network/servers/$CASSERVER/casserver
[ -f /opt/karoshi/server_network/servers/$CASSERVER/no_role ] && rm -f /opt/karoshi/server_network/servers/$CASSERVER/no_role
echo $ROLE2"<br>" > /opt/karoshi/server_network/servers/$CASSERVER/apacheserver
echo $CASSERVER > /opt/karoshi/server_network/casserver
[ ! -d /opt/karoshi/server_network/webservers/ ] && mkdir -p /opt/karoshi/server_network/webservers
echo $CASSERVER > /opt/karoshi/server_network/webservers/$CASSERVER

sed -i 's/WEBCTRL=no/WEBCTRL=yes/g' /opt/karoshi/server_network/web_controls/menusettings

exit

