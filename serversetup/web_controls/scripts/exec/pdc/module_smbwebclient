#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_smbwebclient_cgi
then
echo `date`: module_smbwebclient - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_smbwebclient_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_smbwebclient.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set

if [ $MD5SUM'check' != $module_smbwebclient_cgi'check' ]
then
echo `date`: module_smbwebclient - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_smbwebclient - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ $DATA'null' = null ]
then
echo `date`: module_smbwebclient - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
ALIAS=`echo "$DATA" | cut -s -d: -f5`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: module_smbwebclient - Not called by module_smbwebclient.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_smbwebclient - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_smbwebclient - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: module_smbwebclient - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $SERVERNAME'null' = null ]
then
echo `date`: module_smbwebclient - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $ALIAS'null' = null ]
then
echo `date`: module_smbwebclient - Blank alias by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

echo `date`: setupsmbwebclient on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

source /opt/karoshi/serversetup/variables/distro

#Check that this server has been setup with the correct authentication
echo "$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$SERVERNAME:users:" | /opt/karoshi/serversetup/modules/authentication/check_auth
if [ $? = 101 ]
then
echo $AUTHENTICATIONFAILMSG"<br><br>"
echo `date`: module_smbwebclient - $SERVERNAME does not have the correct authentication "for" this module by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
sleep 2
exit 101
fi

#Add entry to samba4 dns
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
SERVERIP=`net lookup $SERVERNAME`
source /opt/karoshi/server_network/domain_information/domain_name
echo `date`: module_smbwebclient - checking "if" $ALIAS.$REALM is "in" the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
samba-tool dns query 127.0.0.1 $REALM $ALIAS.$REALM CNAME --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ `echo $?` != 0 ]
then
echo `date`: dnsadd - adding $DOMAINPATH $SERVERIP to the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
samba-tool dns add 127.0.0.1 $REALM $ALIAS CNAME $SERVERNAME.$REALM --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi

if [ ! -f /etc/ssl/apache/$ALIAS.$REALM.key ]
then
echo "$REMOTE_USER:$REMOTE_ADDR:$SERVERNAME:$ALIAS.$REALM:" | /opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/apachesslcert
[ `echo $?` != 0 ] && exit 101 
fi

if [ $SERVERNAME = $HOSTNAME ]
then
#Install smbwebclient
echo $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$HOSTNAME:$ALIAS.$REALM: | /opt/karoshi/serversetup/modules/smbwebclient/setup_smbwebclient
else

ssh -x -o PasswordAuthentication=no $SERVERNAME '
[ ! -d /opt/karoshi/serversetup/language/'$LANGCHOICE'/modules ] && mkdir -p /opt/karoshi/serversetup/language/'$LANGCHOICE'/modules
[ ! -d /opt/karoshi/serversetup/modules/ ] && mkdir -p /opt/karoshi/serversetup/modules/
'
#Update alias entry for the server
[ ! -d /opt/karoshi/server_network/aliases ] && mkdir -p /opt/karoshi/server_network/aliases
[ ! -f /opt/karoshi/server_network/aliases/$SERVERNAME ] && echo $ALIAS > /opt/karoshi/server_network/aliases/$SERVERNAME

#Copy in language files
scp -p -r /opt/karoshi/serversetup/language/$LANGCHOICE/modules/smbwebclient root@$SERVERNAME:/opt/karoshi/serversetup/language/$LANGCHOICE/modules/ 1> /dev/null
#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/smbwebclient root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null
#Copy in realm information
scp -p -r /opt/karoshi/server_network/domain_information root@$SERVERNAME:/opt/karoshi/server_network/ 1> /dev/null
#Install smbwebclient
PDCIP=`net lookup $HOSTNAME`

#Check that we can ping the pdc
ssh -x -o PasswordAuthentication=no $SERVERNAME '
#Check to see that we can ping the PDC
ping -c 2 '$PDCIP' 1>/dev/null
if [  echo $? != 0 ]
then
echo `date` : setupfileserver - '$PINGFAIL'."<br>"
exit 101
fi
fi

'
if [ $? = 101 ]
then
echo `date`: module_smbwebclient - cannot ping $PDCIP by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi

ssh -x -o PasswordAuthentication=no $SERVERNAME '
[ ! -d /opt/karoshi/server_network/ ] && mkdir -p /opt/karoshi/server_network/
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$HOSTNAME:$ALIAS.$REALM' | /opt/karoshi/serversetup/modules/smbwebclient/setup_smbwebclient
'

#Copy group information to the home access server
scp -p -r /opt/karoshi/server_network/group_information root@$SERVERNAME:/opt/karoshi/server_network/ 1> /dev/null
fi

#Create completed info file
[ ! -d /opt/karoshi/modules/smbwebclient ] && mkdir -p /opt/karoshi/modules/smbwebclient
#echo '<a href="http://www.smbwebclient.com/" target="_blank"><img style="border: 0px solid ;" alt="" src="/images/help/info.png"></a>' > /opt/karoshi/modules/smbwebclient/weblink
echo '<b>'Server'</b>': $SERVERNAME > /opt/karoshi/modules/smbwebclient/installed_information
echo '<b>'Access'</b>': '<a href="https://'$ALIAS.$REALM':50000/smbwebclient" target="_blank">https://'$ALIAS.$REALM':50000/smbwebclient</a>' >> /opt/karoshi/modules/smbwebclient/installed_information

########################
#Language
########################
LANGCHOICE=englishuk
STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/serversetup/language/$LANGCHOICE/modules/smbwebclient/setupsmbwebclient ] || LANGCHOICE=englishuk
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/smbwebclient/setupsmbwebclient
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

#Add role information
[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
echo $ROLE"<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/homeaccess
echo '<a href="https://'$ALIAS.$REALM':50000/smbwebclient" target="_blank">https://'$ALIAS.$REALM':50000/smbwebclient</a><br>' >> /opt/karoshi/server_network/servers/$SERVERNAME/homeaccess
#echo $ROLE2"<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/apacheserver
[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role
[ ! -d /opt/karoshi/server_network/webservers/ ] && mkdir -p /opt/karoshi/server_network/webservers
echo $ROLE > /opt/karoshi/server_network/webservers/$SERVERNAME
echo $SERVERNAME > /opt/karoshi/server_network/home_access_server

sed -i 's/WEBCTRL=no/WEBCTRL=yes/g' /opt/karoshi/server_network/menusettings

exit
