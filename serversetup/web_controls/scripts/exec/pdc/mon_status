#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/mon_status_cgi
then
	echo `date`: mon_status - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/mon_status_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/mon_status.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $mon_status_cgi'check' ]
then
	echo `date`: mon_status - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/mon_status_cgi
then
	echo `date`: mon_status - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/mon_status_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/mon_status.cgi | cut -d' ' -f1`
[ -z "$MD5SUM2"  ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $mon_status_cgi'check' ]
then
	echo `date`: mon_status - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo `date`: mon_status - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
REMOTE_MD5=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
MOBILE=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f4`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
	echo `date`: mon_status - Not called by mon_status.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: mon_status - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: mon_status - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
	echo `date`: mon_status - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi


MONDATAPATH=/opt/karoshi/server_network/mon/mon_data
########################
#Show mon status
########################
WIDTH1=110
WIDTH2=55

#echo `date`: mon_status - viewing from $REMOTE_ADDR by $REMOTE_USER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
[ -d /opt/karoshi/server_network/mon ] || mkdir /opt/karoshi/server_network/mon
if [ -f /opt/karoshi/server_network/monitoringserver ]
then
MONITORING_SERVER=`sed -n 1,1p /opt/karoshi/server_network/monitoringserver`
else
exit 102
fi


if [ $MOBILE != yes ]
then
TABLECLASS=mon
#Create table
echo '<br><table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="1" cellspacing="1"><tbody><tr><td style="vertical-align: top; text-align: left; width: '$WIDTH1'px;"><b>Host Group</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>'$"Monitor"'</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>ping</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>smb</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>http</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>https</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>pop3</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>pop3s</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>imap</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>imaps</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>smtp</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>proxy</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>dns</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>cups</b></td></tr>'
else
TABLECLASS=mobilestandard
#Create table
echo '<br><table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="1" cellspacing="1"><tbody><tr><td style="vertical-align: top; text-align: left; width: '$WIDTH1'px;"><b>Host Group</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>'$"Monitor"'</b></td><td style="vertical-align: top; text-align: center; width: '$WIDTH2'px;"><b>'$"Status"'</b></td></tr>'
fi

if [ $MONITORING_SERVER = `hostname-fqdn` ]
then
	if [ -f  /opt/karoshi/server_network/mon/mon_data_html ]
	then
		if [ $MOBILE = yes ]
		then
			cat /opt/karoshi/server_network/mon/mon_mobile_data_html
		else
			cat /opt/karoshi/server_network/mon/mon_data_html
		fi
	else
		echo "<tr><td>No Data</td></tr></tbody></table>"
	fi
	else
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $MONITORING_SERVER '
	if [ -f  /opt/karoshi/server_network/mon/mon_data_html ]
	then
		if [ '$MOBILE' = yes ]
		then
			cat /opt/karoshi/server_network/mon/mon_mobile_data_html
		else
			cat /opt/karoshi/server_network/mon/mon_data_html
		fi
	else
		echo "<tr><td>No Data</td></tr></tbody></table>"
	fi
	'
fi

#Show disabled monitors

if [ -d /opt/karoshi/server_network/mon/monitors_disabled ]
then
if [ `ls -1 /opt/karoshi/server_network/mon/monitors_disabled | wc -l` -gt 0 ]
then

echo '<br><b>'$"Inactive Monitors"'</b><br><br>
<table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="1" cellspacing="1"><tbody><tr><td style="width: '$WIDTH1'px;"><b>Host Group</b></td><td style="width: '$WIDTH2'px;"></td></tr>'

for MONITORNAME in /opt/karoshi/server_network/mon/monitors_disabled/*
do
GROUP_NAME=`basename $MONITORNAME`

echo '<tr><td>'$GROUP_NAME'</td><td style="vertical-align: top;"><form action="/cgi-bin/admin/monitors_enable_disable.cgi" name="monitors" method="post">
<input name="_MONITOR_'$GROUP_NAME'_" type="submit" class="button smallbutton" value="Off">
</form></td></tr>'
done
echo "</tbody></table>"
fi
fi
exit

