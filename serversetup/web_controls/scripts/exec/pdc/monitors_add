#!/bin/bash
#Copyright (C) 2009 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
MD5ERROR="Incorrect MD5 checksum for this patch."

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/monitors_add_cgi
then
echo `date`: monitors_add - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/monitors_add_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/monitors_add.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set1
if [ $MD5SUM'check' != $monitors_add_cgi'check' ]
then
echo `date`: monitors_add - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: monitors_add - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo $* | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | cut -s -d: -f2`
REMOTE_MD5=`echo $* | cut -s -d: -f3`
GROUPNAME=`echo $* | cut -s -d: -f4 | sed 's/+/-/g'`
TCPIP=`echo $* | cut -s -d: -f5`
ALERTAFTER=`echo $* | cut -s -d: -f6`
INTERVAL=`echo $* | cut -s -d: -f7`
DAYSTART=`echo $* | cut -s -d: -f8`
DAYEND=`echo $* | cut -s -d: -f9`
HOURSTART=`echo $* | cut -s -d: -f10`
HOUREND=`echo $* | cut -s -d: -f11`
MONITORTYPES=( `echo $* | cut -s -d: -f12- | sed 's/:/ /g'` )
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: monitors_add - Not called by monitors_add.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: monitors_add - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: monitors_add - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER != karoshi ]
then
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: monitors_add - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
fi

if [ $GROUPNAME'null' = null ]
then
echo `date`: monitors_add - Blank groupname by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $TCPIP'null' = null ]
then
echo `date`: monitors_add - Blank tcpip by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
TCPIP=`echo $TCPIP | sed 's/+/ /g'`

if [ $INTERVAL'null' = null ]
then
INTERVAL=5
fi

if [ $ALERTAFTER'null' = null ]
then
ALTERAFTER=1
fi

if [ $MONITORTYPES'null' = null ]
then
echo `date`: monitors_add - Blank monitortypes by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
#Exit if no monitoring server has been set up.
[ ! -f /opt/karoshi/server_network/monitoringserver ] && exit 103
#Make mon directories
[ -d /opt/karoshi/server_network/mon/monitors ] || mkdir -p /opt/karoshi/server_network/mon/monitors

#Log custom monitor addition
echo `date`: monitors_add - Adding $GROUPNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -d /opt/karoshi/server_network/mon/events/$GROUPNAME ] || mkdir -p /opt/karoshi/server_network/mon/events/$GROUPNAME
################################
#Create mon file for this custom group
################################

[ $DAYSTART'null' = null ] && DAYSTART=Sun
[ $DAYEND'null' = null ] && DAYEND=Sat

if [ $HOURSTART'null' = null ] && [ $HOUREND'null' = null ]
then
MON_PERIOD=""
else
MON_PERIOD="hr {$HOURSTART-$HOUREND}"
fi

#Create header
echo '######################' > /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '#'$GROUPNAME'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '######################' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo 'hostgroup '$GROUPNAME' '$TCPIP'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo 'watch '$GROUPNAME'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
#Create checks
COUNTER=0
CHECKCOUNT=`echo ${#MONITORTYPES[@]}`
while [ $COUNTER -lt $CHECKCOUNT ] 
do
MONITORTYPE=`echo ${MONITORTYPES[$COUNTER]}`
#Ping
if [ $MONITORTYPE = ping ]
then
echo ' 	service ping' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Network Connection' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor ping.monitor' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' ping.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Ping:GROUP:'$GROUPNAME':LOGNAME:ping.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' ping.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#Pop3
if [ $MONITORTYPE = pop3 ]
then
echo ' 	service pop' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Pop3' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor pop3.monitor' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' pop3.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Pop3:GROUP:'$GROUPNAME':LOGNAME:pop3.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' pop3.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#Pop3s
if [ $MONITORTYPE = pop3s ]
then
echo ' 	service pop3s' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Secure Pop3' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 995' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' pop3s.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Pop3S:GROUP:'$GROUPNAME':LOGNAME:pop3s.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' pop3s.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#imap
if [ $MONITORTYPE = imap ]
then
echo ' 	service imap' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description UW Imap' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 143' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' imap.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:imap:GROUP:'$GROUPNAME':LOGNAME:imap.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' imap.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#imaps
if [ $MONITORTYPE = imaps ]
then
echo ' 	service imaps' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description UW Imap over SSL' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 993' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' imaps.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:ImapS:GROUP:'$GROUPNAME':LOGNAME:imaps.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' imaps.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#samba
if [ $MONITORTYPE = samba ]
then
echo ' 	service samba' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Samba' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 139' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' samba.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Samba:GROUP:'$GROUPNAME':LOGNAME:samba.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' samba.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#http
if [ $MONITORTYPE = http ]
then
echo ' 	service http' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Webserver' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 80' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		allow_empty_group' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' http.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Http:GROUP:'$GROUPNAME':LOGNAME:http.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' http.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#https
if [ $MONITORTYPE = https ]
then
echo ' 	service https' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Secure Webserver' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 443' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' https.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:HttpS:GROUP:'$GROUPNAME':LOGNAME:https.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' https.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#smtp
if [ $MONITORTYPE = smtp ]
then
echo ' 	service smtp' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Simple Mail Transfer Protocol' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor smtp.monitor' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' smtp.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Smtp:GROUP:'$GROUPNAME':LOGNAME:smtp.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' smtp.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#cups
if [ $MONITORTYPE = cups ]
then
echo ' 	service cups' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Common Unix Printing System' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 631' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' cups.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Cups:GROUP:'$GROUPNAME':LOGNAME:cups.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' cups.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#dansguardian
if [ $MONITORTYPE = dansguardian ]
then
echo ' 	service dansguardian' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description Dansguardian' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 3128' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' dansguardian.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:Dansguardian:GROUP:'$GROUPNAME':LOGNAME:dansguardian.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' dansguardian.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi
#dns
if [ $MONITORTYPE = dns ]
then
echo ' 	service dns' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		description dns' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		interval '$INTERVAL'm' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		monitor tcp.monitor -p 53' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '		period wd {'$DAYSTART-$DAYEND'}' $MON_PERIOD >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertafter '$ALERTAFTER'' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' dns.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alert send_mail.alert :SERVICE:dns:GROUP:'$GROUPNAME':LOGNAME:dns.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			upalert file.alert -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' dns.log' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo '			alertevery 480m' >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
fi


let COUNTER=$COUNTER+1
done
echo >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME
echo >> /opt/karoshi/server_network/mon/monitors/$GROUPNAME

#######################
#Delete monitor if it already exists but is disabled
#######################
[ -f /opt/karoshi/server_network/mon/monitors_disabled/$GROUPNAME ] && rm -f /opt/karoshi/server_network/mon/monitors_disabled/$GROUPNAME
######################
#Make mon.cf file
######################
if [ ! -f /opt/karoshi/server_network/mon/global ]
then
#Make mon global file
######################
# global options
######################
echo 'cfbasedir   = /etc/mon' > /opt/karoshi/server_network/mon/global
echo 'pidfile     = /var/run/mon/mon.pid' >> /opt/karoshi/server_network/mon/global
echo 'statedir    = /var/lib/mon/state.d' >> /opt/karoshi/server_network/mon/global
echo 'logdir      = /var/lib/mon/log.d' >> /opt/karoshi/server_network/mon/global
echo 'dtlogfile   = /var/lib/mon/log.d/downtime.log' >> /opt/karoshi/server_network/mon/global
echo 'alertdir    = /usr/lib/mon/alert.d' >> /opt/karoshi/server_network/mon/global
echo 'mondir      = /usr/lib/mon/mon.d' >> /opt/karoshi/server_network/mon/global
echo 'maxprocs    = 20' >> /opt/karoshi/server_network/mon/global
echo 'histlength  = 100' >> /opt/karoshi/server_network/mon/global
echo 'randstart   = 60s' >> /opt/karoshi/server_network/mon/global
echo 'authtype    = pam' >> /opt/karoshi/server_network/mon/global
echo 'userfile    = /etc/mon/userfile' >> /opt/karoshi/server_network/mon/global
echo 'dtlogging   = yes' >> /opt/karoshi/server_network/mon/global
echo  >> /opt/karoshi/server_network/mon/global
fi
cat /opt/karoshi/server_network/mon/global /opt/karoshi/server_network/mon/monitors/* > /opt/karoshi/server_network/mon/mon.cf 2>/dev/null

###############################
#Transfer mon.cf to the monitoring server
###############################
MONITORING_SERVER=`sed -n 1,1p /opt/karoshi/server_network/monitoringserver`
scp -o PasswordAuthentication=no -o ConnectTimeout=3 /opt/karoshi/server_network/mon/mon.cf root@$MONITORING_SERVER:/etc/mon/ 2>&1
###############################
#Restart Mon
###############################
ssh -x -o PasswordAuthentication=no -o ConnectTimeout=3 $MONITORING_SERVER '
if [ ! -d /opt/karoshi/server_network/mon/events/'$GROUPNAME' ]
then
mkdir -p /opt/karoshi/server_network/mon/events/'$GROUPNAME'
chown mon /opt/karoshi/server_network/mon/events/'$GROUPNAME'
fi
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/mon_stop 1>/dev/null
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/mon_start 1>/dev/null
'
exit
