#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/monitors_add_email_alert_cgi
then
	echo `date`: monitors_add_email_alert - No admin MD5Checksum >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/monitors_add_email_alert_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/monitors_add_email_alert.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$monitors_add_email_alert_cgi"'check' ]
then
	echo "$(date): monitors_add_email_alert - Incorrect admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): monitors_add_email_alert - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\.%_:\-')
if [ -z "$DATA" ]
then
	echo "$(date): monitors_add_email_alert - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
EMAILTO=$(echo "$DATA" | cut -s -d: -f4 | sed 's/%40/@/g')
EMAILFROM=$(echo "$DATA" | cut -s -d: -f5 | sed 's/%40/@/g')
MAILSERVER=$(echo "$DATA" | cut -s -d: -f6)
NAME=$(echo "$DATA" | cut -s -d: -f7)
########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ]
then
	echo "$(date): monitors_add_email_alert - Not called by monitors_add_email_alert.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
echo "$(date): monitors_add_email_alert - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): monitors_add_email_alert - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$EMAILTO" ]
then
	echo "$(date): monitors_add_email_alert - Blank email address by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$EMAILFROM" ]
then
	echo "$(date): monitors_add_email_alert - Blank email sender by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$MAILSERVER" ]
then
	echo "$(date): monitors_add_email_alert - Blank mailserver by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$NAME" ]
then
	echo "$(date): monitors_add_email_alert - Blank name by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [[ $(grep -c ^"$REMOTE_USER": /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): monitors_add_email_alert - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

echo "$(date): monitors_add_email_alert - adding $EMAILTO by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"

##########################
#Language
##########################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server


##########################
#Add information
##########################
[ ! -d /opt/karoshi/server_network/mon/email_alerts ] && mkdir -p /opt/karoshi/server_network/mon/email_alerts
chmod -R 0640 /opt/karoshi/server_network/mon/email_alerts
chmod -R u+X,g+X /opt/karoshi/server_network/mon/email_alerts
chown -R root.apache_karoshi /opt/karoshi/server_network/mon/email_alerts

touch /opt/karoshi/server_network/mon/email_alerts/"$NAME"
chmod 0640 /opt/karoshi/server_network/mon/email_alerts/"$NAME"
chown root.apache_karoshi /opt/karoshi/server_network/mon/email_alerts/"$NAME"
echo "EMAILADDRESS=$EMAILTO" > /opt/karoshi/server_network/mon/email_alerts/"$NAME"
echo "SENDER=$EMAILFROM" >> /opt/karoshi/server_network/mon/email_alerts/"$NAME"
echo "EMAILSERVER=$MAILSERVER" >> /opt/karoshi/server_network/mon/email_alerts/"$NAME"

##########################
#Copy information to Monitoring Server
##########################
MONITORING_SERVER=$(sed -n 1,1p /opt/karoshi/server_network/monitoringserver)

if [ "$MONITORING_SERVER" != $(hostname-fqdn) ]
then
	rsync -a /opt/karoshi/server_network/mon/email_alerts/  root@"$MONITORING_SERVER":/opt/karoshi/server_network/mon/
fi

