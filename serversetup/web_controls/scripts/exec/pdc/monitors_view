#!/bin/bash
#Copyright (C) 2007  The karoshi Team

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit


########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/monitors_view_cgi
then
	echo `date`: monitors_view - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/monitors_view_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/monitors_view.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $monitors_view_cgi'check' ]
then
	echo `date`: monitors_view - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo `date`: monitors_view - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
REMOTE_MD5=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
ALPHABET=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f4`
ALPHABET2=`echo $ALPHABET | tr 'A-Z' 'a-z'`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: monitors_view - Not called by monitors_view.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: monitors_view - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: monitors_view - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: monitors_view - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server


echo `date`: monitors_view - viewing custom monitors by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -d /opt/karoshi/.tempdata ] || mkdir /opt/karoshi/.tempdata
[ -d /opt/karoshi/server_network/mon/monitors ] || mkdir -p /opt/karoshi/server_network/mon/monitors
chmod 0700 /opt/karoshi/.tempdata

#Create list of custom monitors

ls -1 /opt/karoshi/server_network/mon/monitors/ > /opt/karoshi/.tempdata/monitor_list.$$

MONITORCOUNT=`cat /opt/karoshi/.tempdata/monitor_list.$$ | wc -l`
COUNTER=1
if [ $MONITORCOUNT -gt 0 ]
then
	#Show table of sites
	echo '<table class="standard" style="text-align: left; width: 800px; height: 100px;" ><tbody>
	<tr><td style="width: 180px;"><b>'$"Monitors"'</b></td><td><b>'$"Edit"'</b></td><td><b>'$"Delete"'</b></td><td><a class="info" href="javascript:void(0)"><img class="images" alt="" src="/images/help/info.png"><span>'$"Deleting a monitor will stop the monitoring server from monitoring the monitor group."'</span></a></td></tr>'
	while [ $COUNTER -le $MONITORCOUNT ]
	do
		MONITORDATA=`sed -n $COUNTER,$COUNTER"p" /opt/karoshi/.tempdata/monitor_list.$$`
		MONITORNAME=`echo $MONITORDATA | cut -d, -f1`
		FILTERGROUPS=`echo $MONITORDATA | cut -d, -f2`
		MONITOR_SERVICES=`grep service /opt/karoshi/server_network/mon/monitors/$MONITORNAME | sed 's/service//g' |sed 's/$/<br>/g'`
		SERVICE_TCPIPS=`sed -n 4,4p /opt/karoshi/server_network/mon/monitors/$MONITORNAME | cut -d' ' -f3-`
		MONITORNAME=`echo $MONITORNAME | sed 's/_/ /g'`


		echo '<tr><td>'$MONITORNAME'</td><td><a class="info" href="javascript:void(0)"><input name="_MONITOR_'$MONITORNAME'_MONITORACTION_edit_" type="image" class="images" src="/images/submenus/system/edit.png" value="_MONITOR_'$MONITORNAME'_MONITORACTION_edit_"><span>'$"Edit function not implemented yet."' - '$MONITORNAME'</span></a></td><td><a class="info" href="javascript:void(0)"><input name="_MONITOR_'$MONITORNAME'_MONITORACTION_delete_" type="image" class="images" src="/images/submenus/system/delete.png" value="_MONITOR_'$MONITORNAME'_MONITORACTION_delete_"><span>'$"Delete"' - '$MONITORNAME'</span></a></td><td><a class="info" href="javascript:void(0)"><img class="images" alt="" src="/images/help/info.png"><span>'$"TCPIP numbers monitored":'<br>'$SERVICE_TCPIPS'<br>'$"Services Monitored":'<br>'$MONITOR_SERVICES'</span></a></td></tr>'
		let COUNTER=$COUNTER+1
	done
	echo "</tbody></table>"
	rm -f /opt/karoshi/.tempdata/monitor_list.$$
else
	rm -f /opt/karoshi/.tempdata/monitor_list.$$
	exit 101
fi
exit
