#!/bin/bash
#Copyright (C) 2016 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/mylinks_cgi
then
	echo `date`: mylinks - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101	
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/mylinks_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/mylinks.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $mylinks_cgi'check' ]
then
	echo `date`: mylinks - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: mylinks - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-' | sed 's/REPLACEUNDERSCORE/_/g'`
if [ -z "$DATA" ]
then
	echo `date`: mylinks - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
HYPERLINK=`echo "$DATA" | cut -s -d: -f5`
QUICKLINKSTYLE=`echo "$DATA" | cut -s -d: -f6`

########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: mylinks - Not called by mylinks.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: mylinks - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: mylinks - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo `date`: mylinks - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

if [ "$ACTION" = quicklinkstyle ]
then
	if [ -z "$QUICKLINKSTYLE" ]
	then
		echo `date`: mylinks - Blank quicklinkstyle by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit
	fi
fi

if [ "$ACTION" = add ] || [ $ACTION = delete ] || [ "$ACTION" = UP ] || [ "$ACTION" = down ]
then
	if [ -z "$HYPERLINK" ]
	then
		echo `date`: mylinks - Blank hyperlink by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit
	fi
fi

function create_list {
[ -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links" ] && rm -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links"
[ -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.sub" ] && cat "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.sub" > "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links"
[ -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.inline" ] && cat "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.inline" >> "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links"
}


if [ "$ACTION" = add ]
then
	HYPERLINK=$(echo "$HYPERLINK" | sed 's/%2F/\//g')

	echo "`date`: mylinks - adding $HYPERLINK for $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

	#Get title for the hyperlink
	HYPERLINKTITLE=$(/opt/karoshi/web_controls/generate_navbar_admin | grep '<li><a href="'$HYPERLINK'' | sed 's/\t//g' | cut -d">" -f3 | sed 's%</a%%g')

	if [ -z "$HYPERLINKTITLE" ]
	then
		HYPERLINKTITLE=$(basename "$HYPERLINK")
	fi

	[ ! -d /opt/karoshi/web_controls/user_prefs ] && mkdir -p /opt/karoshi/web_controls/user_prefs

	touch "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	if [ $(grep -c "$HYPERLINK" "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE") = 0 ]
	then 
		echo "$HYPERLINK,$HYPERLINKTITLE,$QUICKLINKSTYLE" >> "/opt/karoshi/web_controls/user_prefs/"$REMOTE_USER".links.$QUICKLINKSTYLE"
	fi
	create_list
fi


if [ "$ACTION" = delete ]
then
	HYPERLINK=$(echo "$HYPERLINK" | sed 's/%2F/\//g')
	LINKFILE=$(basename $HYPERLINK)
	echo "`date`: mylinks - deleting $HYPERLINK for $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	sed -i '/'$LINKFILE'/d' "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"

	#Delete the file if it is empty
	[ $(cat "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE" | wc -l) = 0 ] && rm -f "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"

	create_list
fi

if [ "$ACTION" = up ]
then
	HYPERLINK=$(echo "$HYPERLINK" | sed 's/%2F/\//g')
	#Get linenumber
	LINENUMBER=$(grep -n "$HYPERLINK" "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE" | cut -d: -f1)
	#Get the linedata
	LINEDATA=$(grep "$HYPERLINK" "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE")
	#Delete the existing line
	sed -i ''$LINENUMBER'd' "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	#Insert the line back in one line up
	let LINENUMBER=$LINENUMBER-1
	sed -i ''$LINENUMBER'i'"$LINEDATA"'' "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	create_list
fi

if [ "$ACTION" = down ]
then
	HYPERLINK=$(echo "$HYPERLINK" | sed 's/%2F/\//g')
	#Get linenumber
	LINENUMBER=$(grep -n "$HYPERLINK" "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE" | cut -d: -f1)
	#Get the linedata
	LINEDATA=$(grep "$HYPERLINK" "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE")
	#Delete the existing line
	sed -i ''$LINENUMBER'd' "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	#Insert the line back in one line down
	let LINENUMBER=$LINENUMBER+1
	LINKCOUNT=$(cat "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE" | wc -l)
	if [ $LINENUMBER -gt $LINKCOUNT ]
	then
		echo "$LINEDATA" >> "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	else
		sed -i ''$LINENUMBER'i'"$LINEDATA"'' "/opt/karoshi/web_controls/user_prefs/$REMOTE_USER.links.$QUICKLINKSTYLE"
	fi
	create_list
fi
exit

