#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/printer_accounting_status_cgi
then
echo `date`: printer_accounting_status - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/printer_accounting_status_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/printer_accounting_status.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $printer_accounting_status_cgi'check' ]
then
echo `date`: printer_accounting_status - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/printer_accounting_status_cgi
then
echo `date`: printer_accounting_status - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/printer_accounting_status_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/printer_accounting_status.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $printer_accounting_status_cgi'check' ]
then
echo `date`: printer_accounting_status - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: printer_accounting_status - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: printer_accounting_status - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ACTION=`echo "$DATA" | cut -s -d: -f4`
PRINTER=`echo "$DATA" | cut -s -d: -f5`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: printer_accounting_status - Not called by printer_accounting_status.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: printer_accounting_status - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: printer_accounting_status - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $ACTION'null' = null ]
then
echo `date`: printer_accounting_status - Blank action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $PRINTER'null' = null ]
then
echo `date`: printer_accounting_status - Blank printer by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: printer_accounting_status - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: printer_accounting_status - $PRINTER accounting $ACTION by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/printer/printer_accounting ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/printer/printer_accounting
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all


PRINTSERVER=`sed -n 1,1p /opt/karoshi/server_network/printserver`

if [ $PRINTSERVER = `hostname-fqdn` ]
then
#Backup cups printer.conf
[ ! -d /etc/cups/backup ] && mkdir -p /etc/cups/backup
cp -f /etc/cups/printers.conf /etc/cups/backup/printers.conf.$$.$LOG_DATE

if [ $ACTION = enable ]
then
PRINTER_DEST=`lpstat -v "$PRINTER" | cut -d: -f2- | sed "s/ //g"`

#Make sure that printer is capable of doing accounting first.
PRINTER_DEST2=`echo $PRINTER_DEST | sed "s/quosnmp:\/\///g" | cut -d: -f2 | sed "s/\/\///g"`
#Test page count
snmpget -v 1 -c 'public' $PRINTER_DEST2 1.3.6.1.2.1.43.10.2.1.4.1.1
PAGECOUNTSTATUS=`echo $?`
#Test printer status
snmpget -v 1 -c 'public' $PRINTER_DEST2 1.3.6.1.2.1.25.3.5.1.1.1
PRINTERSTATUS=`echo $?`
if [ $PAGECOUNTSTATUS != 0 ] || [ $PRINTERSTATUS != 0 ]
then
echo "<b>"$TITLE1"</b><br><br>""$PRINTER" - $ERRORMSG3
sleep 5
exit
fi

[ ! -d /opt/karoshi/server_network/printer_accounting/accounting_status/ ] && mkdir -p /opt/karoshi/server_network/printer_accounting/accounting_status/
touch /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER"

#Stop cups
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop 1>/dev/null
#get device uri line from printers.conf
DEVICE_LINE_NUMBER=`grep -n "$PRINTER_DEST" /etc/cups/printers.conf | cut -d: -f1`

#Check that line has a device uri
if [ `sed -n $DEVICE_LINE_NUMBER,$DEVICE_LINE_NUMBER"p" /etc/cups/printers.conf | grep -c ^DeviceURI` -gt 0 ]
then
#Modify printers.conf
PRINTER_DEST=`echo "quosnmp://$PRINTER_DEST"`
sed -i $DEVICE_LINE_NUMBER"c"\DeviceURI"THISREALLYISASPACE""$PRINTER_DEST" /etc/cups/printers.conf
sed -i "s/THISREALLYISASPACE/ /g" /etc/cups/printers.conf 
fi

#Start cups
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start 1>/dev/null
fi

if [ $ACTION = disable ]
then
[ -f /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER" ] && rm -f /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER"
PRINTER_DEST=`lpstat -v "$PRINTER" | cut -d: -f2- | sed "s/ //g"`
#Stop cups
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop 1>/dev/null
#get device uri line from printers.conf
DEVICE_LINE_NUMBER=`grep -n "$PRINTER_DEST" /etc/cups/printers.conf | cut -d: -f1`
#Check that line has a device uri
if [ `sed -n $DEVICE_LINE_NUMBER,$DEVICE_LINE_NUMBER"p" /etc/cups/printers.conf | grep -c ^DeviceURI` -gt 0 ]
then
#Modify printers.conf
PRINTER_DEST=`echo "$PRINTER_DEST" | sed "s/quosnmp:\/\///g"`
sed -i $DEVICE_LINE_NUMBER"c"\DeviceURI"THISREALLYISASPACE""$PRINTER_DEST" /etc/cups/printers.conf
sed -i "s/THISREALLYISASPACE/ /g" /etc/cups/printers.conf 
fi

#Start cups
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start 1>/dev/null
fi 

else
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $PRINTSERVER '
#Backup cups printer.conf
[ ! -d /etc/cups/backup ] && mkdir -p /etc/cups/backup
cp -f /etc/cups/printers.conf /etc/cups/backup/printers.conf.'$$'.'$LOG_DATE'

if [ '$ACTION' = enable ]
then

PRINTER_DEST=`lpstat -v "'$PRINTER'" | cut -d: -f2- | sed "s/ //g"`

#Make sure that printer is capable of doing accounting first.
PRINTER_DEST2=`echo $PRINTER_DEST | sed "s/quosnmp:\/\///g" | cut -d: -f2 | sed "s/\/\///g"`
#Test page count
snmpget -v 1 -c "public" $PRINTER_DEST2 1.3.6.1.2.1.43.10.2.1.4.1.1
PAGECOUNTSTATUS=`echo $?`
#Test printer status
snmpget -v 1 -c "public" $PRINTER_DEST2 1.3.6.1.2.1.25.3.5.1.1.1
PRINTERSTATUS=`echo $?`
if [ $PAGECOUNTSTATUS != 0 ] || [ $PRINTERSTATUS != 0 ]
then
echo "<b>"'$TITLE1'"</b><br><br>""'$PRINTER'" - '$ERRORMSG3'
sleep 5
exit 101
fi

#Stop cups
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop 1>/dev/null
#get device uri line from printers.conf
DEVICE_LINE_NUMBER=`grep -n "$PRINTER_DEST" /etc/cups/printers.conf | cut -d: -f1`

#Check that line has a device uri
if [ `sed -n $DEVICE_LINE_NUMBER,$DEVICE_LINE_NUMBER"p" /etc/cups/printers.conf | grep -c ^DeviceURI` -gt 0 ]
then
#Modify printers.conf
PRINTER_DEST=`echo "quosnmp://$PRINTER_DEST"`
sed -i $DEVICE_LINE_NUMBER"c"\DeviceURI"THISREALLYISASPACE""$PRINTER_DEST" /etc/cups/printers.conf
sed -i "s/THISREALLYISASPACE/ /g" /etc/cups/printers.conf 
fi

#Start cups
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start 1>/dev/null
fi

if [ '$ACTION' = disable ]
then
PRINTER_DEST=`lpstat -v "'$PRINTER'" | cut -d: -f2- | sed "s/ //g"`
#Stop cups
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop 1>/dev/null
#get device uri line from printers.conf
DEVICE_LINE_NUMBER=`grep -n "$PRINTER_DEST" /etc/cups/printers.conf | cut -d: -f1`
#Check that line has a device uri
if [ `sed -n $DEVICE_LINE_NUMBER,$DEVICE_LINE_NUMBER"p" /etc/cups/printers.conf | grep -c ^DeviceURI` -gt 0 ]
then
#Modify printers.conf
PRINTER_DEST=`echo "$PRINTER_DEST" | sed "s/quosnmp:\/\///g"`
sed -i $DEVICE_LINE_NUMBER"c"\DeviceURI"THISREALLYISASPACE""$PRINTER_DEST" /etc/cups/printers.conf
sed -i "s/THISREALLYISASPACE/ /g" /etc/cups/printers.conf 
fi

#Start cups
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start 1>/dev/null
fi 
'
if [ `echo $?` = 0 ]
then
if [ $ACTION = enable ]
then
[ ! -d /opt/karoshi/server_network/printer_accounting/accounting_status/ ] && mkdir -p /opt/karoshi/server_network/printer_accounting/accounting_status/
touch /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER"
fi

if [ $ACTION = disable ]
then
[ -f /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER" ] && rm -f /opt/karoshi/server_network/printer_accounting/accounting_status/"$PRINTER"
fi
fi
fi



