#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
#Admin checksum
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/printers_control_cgi
then
echo `date`: printers_control - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/printers_control_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/printers_control.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $printers_control_cgi'check' ]
then
echo `date`: printers_control - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
#Tech checksum
if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/printers_control_cgi
then
echo `date`: printers_control - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/printers_control_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/printers_control.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $printers_control_cgi'check' ]
then
echo `date`: printers_control - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
#Staff checksum
if [ -f /var/www/cgi-bin_karoshi/staff/printers_control.cgi ]
then
if ! test -f /opt/karoshi/web_controls/checksums/staff_checksums/printers_control_cgi
then
echo `date`: printers_control - No staff MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/staff_checksums/printers_control_cgi
MD5SUM3=`md5sum /var/www/cgi-bin_karoshi/staff/printers_control.cgi | cut -d' ' -f1`
[ $MD5SUM3'null' = null ] && MD5SUM3=not_set
if [ $MD5SUM3'check' != $printers_control_cgi'check' ]
then
echo `date`: printers_control - Incorrect staff MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: printers_control - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo $* | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | cut -s -d: -f2`
REMOTE_MD5=`echo $* | cut -s -d: -f3`
PRINTERNAME=`echo $* | cut -s -d: -f4`
PRINTER_ACTION=`echo $* | cut -s -d: -f5`
JOBID=`echo $* | cut -s -d: -f6`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ] && [ $REMOTE_MD5'check' != $MD5SUM3'check' ]
then
echo `date`: printers_control - Not called by printers_control.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: printers_control - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: printers_control - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $PRINTERNAME'null' = null ]
then
echo `date`: printers_control - Blank printername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $PRINTER_ACTION'null' = null ]
then
echo `date`: printers_control - Blank printer action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $PRINTER_ACTION != enable ] && [ $PRINTER_ACTION != disable ] && [ $PRINTER_ACTION != test ] && [ $PRINTER_ACTION != clearqueue ] && [ $PRINTER_ACTION != removejobid ] && [ $PRINTER_ACTION != setppd ] && [ $PRINTER_ACTION != setlocation ]
then
echo `date`: printers_control - Incorrect printer action by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $PRINTER_ACTION = removejobid ]
then
if [ $JOBID'null' = null ]
then
echo `date`: printers_control - Blank jobid by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
fi


if [ $PRINTER_ACTION = setppd ]
then
echo '<form name="setppd" action="/cgi-bin/admin/printers_ppd_assign1.cgi" method="post">
<input type="hidden" name="_PRINTERNAME_" value="'$PRINTERNAME'">
</form>
<script>
document.setppd.submit();
</script>'
exit
fi

if [ $PRINTER_ACTION = setlocation ]
then
echo '<form name="setppd" action="/cgi-bin/admin/printers_assign_fm.cgi" method="post">
<input type="hidden" name="_PRINTERNAME_" value="'$PRINTERNAME'">
</form>
<script>
document.setppd.submit();
</script>'
exit
fi

PRINTSERVER=`sed -n 1,1p /opt/karoshi/server_network/printserver`
if [ $PRINTSERVER != `hostname-fqdn` ]
then
USESSH=yes
else
USESSH=no
fi
#Enable printer
if [ $PRINTER_ACTION = enable ]
then
echo `date`: printers_control - enabling $PRINTERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $USESSH = yes ]
then
ssh -x -o PasswordAuthentication=no $PRINTSERVER '
accept '$PRINTERNAME' 2&>1
cupsenable '$PRINTERNAME' 2&>1
'
else
accept $PRINTERNAME 2&>1
cupsenable $PRINTERNAME 2&>1
fi
fi
#Disable printer
if [ $PRINTER_ACTION = disable ]
then
echo `date`: printers_control - disabling $PRINTERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $USESSH = yes ]
then
ssh -x -o PasswordAuthentication=no $PRINTSERVER '
reject '$PRINTERNAME' 2&>1
cupsdisable '$PRINTERNAME' 2&>1
'
else
reject $PRINTERNAME 2&>1
cupsdisable $PRINTERNAME 2&>1
fi
fi
#Test printer
if [ $PRINTER_ACTION = test ]
then
echo `date`: printers_control - testing $PRINTERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $USESSH = yes ]
then
ssh -x -o PasswordAuthentication=no $PRINTSERVER '
lp -d '$PRINTERNAME' /usr/share/cups/data/testprint.ps 1>/dev/null
'
else
lp -d $PRINTERNAME /usr/share/cups/data/testprint.ps 1>/dev/null
fi
fi
#Clear printer queue
if [ $PRINTER_ACTION = clearqueue ]
then
echo `date`: printers_control - Clearing queue "for" $PRINTERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $USESSH = yes ]
then
ssh -x -o PasswordAuthentication=no $PRINTSERVER '
cancel -a '$PRINTERNAME' 2&>1
'
else
cancel -a $PRINTERNAME 2&>1
fi
fi
#Remove job
if [ $PRINTER_ACTION = removejobid ]
then
echo `date`: printers_control - removing job$JOBID by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ $USESSH = yes ]
then
ssh -x -o PasswordAuthentication=no $PRINTSERVER '
cancel '$JOBID' 2&>1
'
else
cancel $JOBID 2&>1
fi
fi
exit
