#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
[ -z "$LOG_DATE" ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/printers_ppd_assign1_cgi
then
	echo "$(date): printers_show_drivers - No MD5Checksum for printers_ppd_assign1" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/printers_ppd_assign1_cgi
Checksum=$(sha256sum /var/www/cgi-bin_karoshi/admin/printers_ppd_assign1.cgi | cut -d' ' -f1)
[ -z "$Checksum" ] && Checksum=not_set
if [ "$Checksum"'check' != "$printers_ppd_assign1_cgi"'check' ]
then
	echo "$(date): printers_show_drivers - Incorrect MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
########################
#Get variables
########################
numArgs="$#"
if [ "$numArgs" != 1 ]
then
	echo "$(date): printers_show_drivers - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

REMOTE_USER=$(echo "$1" | tr -cd 'A-Za-z0-9\._:%/+-' | cut -d: -f1)
REMOTE_ADDR=$(echo "$1" | tr -cd 'A-Za-z0-9\._:%/+-' | cut -d: -f2)
RemoteCheckSum=$(echo "$1" | tr -cd 'A-Za-z0-9\._:%/+-' | cut -d: -f3)
########################
#Check data
########################
if [ "$RemoteCheckSum"'check' != "$Checksum"'check' ]
then
	echo "$(date): printers_show_drivers - Not called by printers_show_drivers.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): printers_show_drivers - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): printers_show_drivers - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ ! -f /opt/karoshi/server_network/printserver ]
then
	echo "$(date): printers_show_drivers - no print server has been set up." >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [[ $(grep -c ^"$REMOTE_USER:" /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): printers_show_drivers - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

PRINTSERVER=$(sed -n 1,1p /opt/karoshi/server_network/printserver)
if [[ "$PRINTSERVER" != $(hostname-fqdn) ]]
	then
	ssh -x -o PasswordAuthentication=no "$PRINTSERVER" '
	function show_driver {
	PRINTER=$(basename "$PPDFILE" | sed "s/.ppd$//g")
	PPDFILE="${PPDFILE//_/123456789}" 
	echo "<option value=\"$PPDFILE\">$PRINTER</option>"
	}

	if [ -d /usr/share/ppd/Brother ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/Brother/*.ppd | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/hplip/HP ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/hplip/HP/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/hp-ppd/HP ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/hp-ppd/HP/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/openprinting ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/openprinting/*/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/splix ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/splix/*/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/cupsfilters/ ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/cupsfilters/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi
	'
else

	function show_driver {
	PRINTER=$(basename "$PPDFILE" | sed "s/.ppd$//g")
	PPDFILE="${PPDFILE//_/123456789}" 
	echo "<option value=\"$PPDFILE\">$PRINTER</option>"
	}

	if [ -d /usr/share/ppd/Brother ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/Brother/*.ppd | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/hplip/HP ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/hplip/HP/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/hp-ppd/HP ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/hp-ppd/HP/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/openprinting ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/openprinting/*/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/splix ]
	then
		for PPDFILE in $(ls -d /usr/share/ppd/splix/*/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/hp-ppd/HP/ ]
	then
	for PPDFILE in $(ls -d /usr/share/ppd/hp-ppd/HP/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

	if [ -d /usr/share/ppd/cupsfilters/ ]
	then
		for PPDFILE in $(ls -d //usr/share/ppd/cupsfilters/*.ppd* | sed "s/\/\//\//g" |  sed "s/.gz$//g" | sort -u)
		do
			show_driver
		done
	fi

fi
exit
