#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_add_cgi
then
	echo `date`: remote_management_add - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_add_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/remote_management_add.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ "$Checksum"'check' != $remote_management_add_cgi'check' ]
then
	echo `date`: remote_management_add - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: remote_management_add - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-+'`
if [ -z "$DATA" ]
then
	echo `date`: remote_management_add - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
JOBTITLE=`echo "$DATA" | cut -s -d: -f4`
FORENAME=`echo "$DATA" | cut -s -d: -f5`
SURNAME=`echo "$DATA" | cut -s -d: -f6`
USERNAME=`echo "$DATA" | cut -s -d: -f7`
PASSWORD=`echo "$DATA" | cut -s -d: -f8`
PRIMARYADMIN=`echo "$DATA" | cut -s -d: -f9`
TCPACCESS=`echo "$DATA" | cut -s -d: -f10`

########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: remote_management_add - Not called by remote_management_add.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: remote_management_add - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: remote_management_add - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$USERNAME" ]
then
	echo `date`: remote_management_add - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$PASSWORD" ]
then
	echo `date`: remote_management_add - Blank password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$PRIMARYADMIN" ]
then
	echo `date`: remote_management_add - Blank access level by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/remote_management_users` != 1 ]
then
	echo `date`: remote_management_add - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
#Check that primary admin has the correct data
if [ $PRIMARYADMIN != 1 ] && [ $PRIMARYADMIN != 2 ] && [ $PRIMARYADMIN != 3 ]
then
	echo `date`: remote_management_add - Incorrect admin level by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

[ ! -z "$JOBTITLE" ] && JOBTITLE=`echo $JOBTITLE | sed 's/+/ /g'`
[ ! -z "$FORENAME" ] && FORENAME=`echo $FORENAME | sed 's/+/ /g'`
[ ! -z "$SURNAME" ] && SURNAME=`echo $SURNAME | sed 's/+/ /g'`


[ ! -f /opt/karoshi/web_controls/remote_management_users ] && ( touch /opt/karoshi/web_controls/remote_management_users ; chmod 0600 /opt/karoshi/web_controls/remote_management_users )
#Check that user is a primary admin
PRISTATUS=`grep $REMOTE_USER: /opt/karoshi/web_controls/remote_management_users | cut -d: -f5`
if [ -z "$PRISTATUS" ]
then
	PRISTATUS=no
fi
if [ $PRISTATUS = no ]
then
	echo `date`: remote_management_add - $REMOTE_USER is not a primary admin trying to create $USERNAME level $PRIMARYADMIN from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 103
fi
#Check the remote management user does not already exist.
if [ `cut -d: -f1 /opt/karoshi/web_controls/remote_management_users | grep -c -w $USERNAME` != 0 ]
then
	exit 102
fi

if [ $PRIMARYADMIN = 1 ]
then
PRIMARYADMINSTATUS=yes
else
PRIMARYADMINSTATUS=""
fi
#Add remote management user to list
echo `date`: remote_management_add - $USERNAME level $PRIMARYADMIN added by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $USERNAME:"$FORENAME":"$SURNAME":"$JOBTITLE":$PRIMARYADMINSTATUS:$PRIMARYADMIN >> /opt/karoshi/web_controls/remote_management_users
#Add entry to htpasswd list
if [ $PRIMARYADMIN = 1 ] || [ $PRIMARYADMIN = 2 ]
then
	htpasswd -B -C 4 -b /opt/karoshi/web_controls/web_access_admin $USERNAME $PASSWORD 2>/dev/null
fi
if [ $PRIMARYADMIN = 3 ]
then
	htpasswd -B -C 4 -b /opt/karoshi/web_controls/web_access_tech $USERNAME $PASSWORD 2>/dev/null
fi

#Create combined htpassword file for any features that require both admin and tech access.
cat /opt/karoshi/web_controls/web_access_admin /opt/karoshi/web_controls/web_access_tech > /opt/karoshi/web_controls/web_access_combined

#Copy in user prefs
if [ -f /opt/karoshi/web_controls/global_prefs ]
then
	if [ ! -d /opt/karoshi/web_controls/user_prefs ]
	then
		mkdir /opt/karoshi/web_controls/user_prefs
		chmod 0750 /opt/karoshi/web_controls/user_prefs
		chown root.apache_karoshi /opt/karoshi/web_controls/user_prefs
	fi
	cp -f /opt/karoshi/web_controls/global_prefs /opt/karoshi/web_controls/user_prefs/$USERNAME
	chmod 0640 /opt/karoshi/web_controls/user_prefs/$USERNAME
	chown root.apache_karoshi /opt/karoshi/web_controls/user_prefs/$USERNAME
fi
exit
