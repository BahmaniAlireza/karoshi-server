#!/bin/bash
#Copyright (C) 2007  The karoshi Team

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_edit_cgi
then
echo `date`: remote_management_edit - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_edit_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/remote_management_edit.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $remote_management_edit_cgi'check' ]
then
echo `date`: remote_management_edit - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: remote_management_edit - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-' | sed 's/REPLACEUNDERSCORE/_/g'`
if [ $DATA'null' = null ]
then
echo `date`: remote_management_edit - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
JOBTITLE=`echo "$DATA" | cut -s -d: -f4`
FORENAME=`echo "$DATA" | cut -s -d: -f5`
SURNAME=`echo "$DATA" | cut -s -d: -f6`
USERNAME=`echo "$DATA" | cut -s -d: -f7`
PASSWORD=`echo "$DATA" | cut -s -d: -f8`
PRIMARYADMIN=`echo "$DATA" | cut -s -d: -f9`
TCPACCESS=`echo "$DATA" | cut -s -d: -f10`

function convertchars {
########################
#Convert special characters back for current password
########################

PASSWORD=`echo $PASSWORD | sed 's/+/ /g; s/%21/!/g; s/%3F/?/g; s/%2C/,/g; s/%3A/:/g; s/%7E/~/g; s/%40/@/g; s/%23/#/g; s/%24/$/g; s/%26/\&/g; s/%2B/+/g; s/%3D/=/g; s/%28/(/g; s/%29/)/g; s/%5E/^/g; s/%7B/{/g; s/%7D/}/g; s/%3C/</g; s/%3E/>/g; s/%5B/[/g; s/%5D/]/g; s/%7C/|/g; s/%22/"/g; s/%1123/*/g' | sed "s/%27/'/g" | sed 's/%3B/;/g' | sed 's/%60/\`/g' | sed 's/%5C/\\\/g' | sed 's/%2F/\//g' | sed 's/%25/%/g'`
}

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: remote_management_edit - Not called by remote_management_edit.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: remote_management_edit - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: remote_management_edit - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $USERNAME'null' = null ]
then
echo `date`: remote_management_edit - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/remote_management_users` != 1 ]
then
echo `date`: remote_management_edit - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
[ ! -f /opt/karoshi/web_controls/remote_management_users ] && ( touch /opt/karoshi/web_controls/remote_management_users ; chmod 0600 /opt/karoshi/web_controls/remote_management_users )
#Check that user is a primary admin
PRISTATUS=`grep $REMOTE_USER: /opt/karoshi/web_controls/remote_management_users | cut -d: -f5`
if [ $PRISTATUS'null' = null ]
then
PRISTATUS=no
fi
if [ $PRISTATUS != yes ]
then
echo `date`: remote_management_edit - Not a primary admin editing $USERNAME "for" $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 103
fi
#Check the remote management user does not exist.
if [ `cut -d: -f1 /opt/karoshi/web_controls/remote_management_users | grep -c -w $USERNAME` = 0 ]
then
exit 102
fi

#Edit remote management user in list

#get line number of user
LINE_NUMBER=`grep -n ^$USERNAME: /opt/karoshi/web_controls/remote_management_users | cut -d: -f1`
if [ $LINE_NUMBER'null' = null ]
then
exit 101
fi
USER_DATA=`sed -n $LINE_NUMBER,$LINE_NUMBER'p' /opt/karoshi/web_controls/remote_management_users`
CURRENT_FORENAME=`echo $USER_DATA | cut -d: -f2`
CURRENT_SURNAME=`echo $USER_DATA | cut -d: -f3`
CURRENT_JOBTITLE=`echo $USER_DATA | cut -d: -f4`
CURRENT_PRIADMIN=`echo $USER_DATA | cut -d: -f5`
CURRENT_ADMIN_LEVEL=`echo $USER_DATA | cut -d: -f6`
if [ $FORENAME'null' = null ]
then
FORENAME=$CURRENT_FORENAME
else
FORENAME=`echo $FORENAME | sed 's/+/ /g'`
fi
if [ $SURNAME'null' = null ]
then
SURNAME=$CURRENT_SURNAME
else
SURNAME=`echo $SURNAME | sed 's/+/ /g'`
fi
if [ $JOBTITLE'null' = null ]
then
JOBTITLE=$CURRENT_JOBTITLE
else
JOBTITLE=`echo $JOBTITLE | sed 's/+/ /g'`
fi
if [ $PRIMARYADMIN'null' = null ]
then
ADMINLEVEL=$CURRENT_ADMIN_LEVEL
else
ADMINLEVEL=$PRIMARYADMIN
fi
if [ $ADMINLEVEL = 1 ]
then
PRIMARYADMIN=yes
else
PRIMARYADMIN=""
fi
#Modify entry in remote_management_users
echo `date`: remote_management_edit - $USERNAME edited by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $USERNAME:"$FORENAME":"$SURNAME":"$JOBTITLE":$PRIMARYADMIN:$TCPACCESS >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
sed -i $LINE_NUMBER'c'\\$USERNAME:"$FORENAME":"$SURNAME":"$JOBTITLE":$PRIMARYADMIN:$ADMINLEVEL /opt/karoshi/web_controls/remote_management_users

if [ $ADMINLEVEL = 1 ] || [ $ADMINLEVEL = 2 ]
then
if [ `grep -c ^$USERNAME: /opt/karoshi/web_controls/web_access_tech` -gt 0 ]
then
#Move password
if [ `grep -c ^$USERNAME: /opt/karoshi/web_controls/web_access_admin` = 0 ]
then
USERLINE=`grep -n ^$USERNAME: /opt/karoshi/web_controls/web_access_tech | cut -d: -f1`
sed -n $USERLINE,$USERLINE'p' /opt/karoshi/web_controls/web_access_tech >> /opt/karoshi/web_controls/web_access_admin
fi
htpasswd -D /opt/karoshi/web_controls/web_access_tech $USERNAME
fi
fi

if [ $ADMINLEVEL = 3 ]
then
if [ `grep -c ^$USERNAME: /opt/karoshi/web_controls/web_access_admin` -gt 0 ]
then
#Move password
if [ `grep -c ^$USERNAME: /opt/karoshi/web_controls/web_access_tech` = 0 ]
then
USERLINE=`grep -n ^$USERNAME: /opt/karoshi/web_controls/web_access_admin | cut -d: -f1`
sed -n $USERLINE,$USERLINE'p' /opt/karoshi/web_controls/web_access_admin >> /opt/karoshi/web_controls/web_access_tech
fi
htpasswd -D /opt/karoshi/web_controls/web_access_admin $USERNAME
fi
fi
#Modify entry in htpasswd list
if [ $PASSWORD'null' != null ]
then
convertchars
if [ $ADMINLEVEL = 1 ] || [ $ADMINLEVEL = 2 ]
then
htpasswd -b /opt/karoshi/web_controls/web_access_admin $USERNAME "$PASSWORD"
fi
if [ $ADMINLEVEL = 3 ]
then
htpasswd -b /opt/karoshi/web_controls/web_access_tech $USERNAME "$PASSWORD"
fi
fi
