#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_name_cgi
then
echo `date`: remote_management_name - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/remote_management_name_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/remote_management_name.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $remote_management_name_cgi'check' ]
then
echo `date`: remote_management_name - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: remote_management_name - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-+'`
if [ $DATA'null' = null ]
then
echo `date`: remote_management_name - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SHORTNAME=`echo "$DATA" | cut -s -d: -f4`
LONGNAME=`echo "$DATA" | cut -s -d: -f5`
SERVERNAME=`echo "$DATA" | cut -s -d: -f6`
SERVERTYPE=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: remote_management_name - Not called by remote_management_name.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: remote_management_name - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: remote_management_name - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $SHORTNAME'null' = null ]
then
echo `date`: remote_management_name - Blank shortname by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $LONGNAME'null' = null ]
then
echo `date`: remote_management_name - Blank longname by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $SERVERNAME'null' = null ]
then
echo `date`: remote_management_name - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $SERVERTYPE'null' = null ]
then
echo `date`: remote_management_name - Blank servertype by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: remote_management_name - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

LANGCHOICE=englishuk
STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/system/remote_management_name ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/system/remote_management_name
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

if [ ! -d /opt/karoshi/server_network/web_controls ]
then
mkdir -p /opt/karoshi/server_network/web_controls
chmod 0750 /opt/karoshi/server_network/
chmod 0750 /opt/karoshi/server_network/web_controls
chown root.apache_karoshi /opt/karoshi/server_network
chown root.apache_karoshi /opt/karoshi/server_network/web_controls
fi

LONGNAME=`echo "$LONGNAME" | sed 's/+/ /g'`


if [ $SERVERTYPE = network ]
then
echo `date`: remote_management_name - changed. Shortname: "$SHORTNAME" Longname: "$LONGNAME" by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
[ ! -f /opt/karoshi/server_network/info ] && echo > /opt/karoshi/server_network/info
sed -i 1cLOCATION_NAME=\""$SHORTNAME"\" /opt/karoshi/server_network/info
SHORTNAMELINENO=`grep -n ^SHORTNAME= /opt/karoshi/server_network/domain_information/domain_name | cut -d: -f1`
sed -i $SHORTNAMELINENO'c'\SHORTNAME=\""$SHORTNAME"\" /opt/karoshi/server_network/domain_information/domain_name
LONGNAMELINENO=`grep -n ^LONGNAME= /opt/karoshi/server_network/domain_information/domain_name | cut -d: -f1`
sed -i $LONGNAMELINENO'c'\LONGNAME=\""$LONGNAME"\" /opt/karoshi/server_network/domain_information/domain_name
#Add name to language files
for LANGUAGE in /opt/karoshi/web_controls/language/*
do
LANGCHOICE=`basename $LANGUAGE`
NAMELINENO=`grep -n ^SCHOOL_NAME= /opt/karoshi/web_controls/language/$LANGCHOICE/menus/menu | cut -d: -f1`
sed -i $NAMELINENO'c'\SCHOOL_NAME=\""$SHORTNAME"\" /opt/karoshi/web_controls/language/$LANGCHOICE/menus/menu
done

#Change the name on the monitoring server
if [ -f /opt/karoshi/server_network/monitoringserver ]
then
MONITORING_SERVER=`sed -n 1,1p /opt/karoshi/server_network/monitoringserver`
ssh -x -o PasswordAuthentication=no $MONITORING_SERVER '
for LANGUAGE in /opt/karoshi/web_controls/language/*
do
LANGCHOICE=`basename $LANGUAGE`
NAMELINENO=`grep -n ^SCHOOL_NAME= /opt/karoshi/web_controls/language/$LANGCHOICE/menus/menu | cut -d: -f1`
sed -i $NAMELINENO"c"\SCHOOL_NAME=\""'$SHORTNAME'"\" /opt/karoshi/web_controls/language/$LANGCHOICE/menus/menu
done
'
fi
fi

#Change the name for federated servers
if [ $SERVERTYPE = federated ]
then
[ ! -d /opt/karoshi/server_network/federated_ldap_servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/federated_ldap_servers/$SERVERNAME
[ ! -f /opt/karoshi/server_network/federated_ldap_servers/$SERVERNAME/info ] && echo > /opt/karoshi/server_network/federated_ldap_servers/$SERVERNAME/info
sed -i 1cLOCATION_NAME=\""$SHORTNAME"\" /opt/karoshi/server_network/federated_ldap_servers/$SERVERNAME/info
fi
exit



