#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/reverse_proxy_add_cgi
then
	echo `date`: reverse_proxy_add - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/reverse_proxy_add_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/reverse_proxy_add.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $reverse_proxy_add_cgi'check' ]
then
	echo `date`: reverse_proxy_add - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: reverse_proxy_add - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\-'`
if [ -z "$DATA" ]
then
	echo `date`: reverse_proxy_add - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
TARGET=`echo "$DATA" | cut -s -d: -f4 | sed 's/^http//g' | tr -cd 'A-Za-z0-9-'`
#TARGET2=`echo $TARGET | sed 's/%3A//g' | sed 's/%2F/\//g' | sed 's/\/\///g'`
DESTINATION=`echo "$DATA" | cut -s -d: -f5`
DESTINATION=`echo $DESTINATION | sed 's/%3A/:/g' | sed 's/%2F/\//g'`

########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: reverse_proxy_add - Not called by reverse_proxy_add.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: reverse_proxy_add - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: reverse_proxy_add - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$TARGET" ]
then
	echo `date`: reverse_proxy_add - Blank TARGET by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$DESTINATION" ]
then
	echo `date`: reverse_proxy_add - Blank DESTINATION by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: reverse_proxy_add - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

##########################
#Language
##########################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server



#Get reverse proxy server
PROXYSERVER=`sed -n 1,1p /opt/karoshi/server_network/reverseproxyserver | sed 's/ //g'`
if [ -z "$PROXYSERVER" ]
then
	echo `date`: reverse_proxy_add - Blank proxy server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

#Add the proxy information information
echo `date`: reverse_proxy_add - $"Target folder" : $TARGET $"Destination" : $DESTINATION by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ ! -d /opt/karoshi/server_network/reverseproxy/sites ] && mkdir -p /opt/karoshi/server_network/reverseproxy/sites

if [ $TARGET = webrootdir ]
then
	TARGET2=""
else
	TARGET2=$TARGET
fi

echo 'location /'$TARGET2' {'  > /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo 'root /var/www/html;' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo 'proxy_set_header X-Forwarded-Host $host;' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo 'proxy_set_header X-Forwarded-Server $host;' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo 'proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo 'proxy_pass '$DESTINATION'/'$TARGET2';' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo '}' >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET
echo >> /opt/karoshi/server_network/reverseproxy/sites/$TARGET

#Generate proxysites
cat /opt/karoshi/server_network/reverseproxy/sites/* > /opt/karoshi/server_network/reverseproxy/proxysites

#Copy proxysites to /etc/nginx

scp /opt/karoshi/server_network/reverseproxy/proxysites root@$PROXYSERVER:"/etc/nginx/"

ssh -x -o PasswordAuthentication=no $PROXYSERVER '
#Reload nginx
source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nginx_reload 1>/dev/null
'
exit

