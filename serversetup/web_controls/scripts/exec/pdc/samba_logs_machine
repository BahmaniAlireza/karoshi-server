#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################

if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/samba_logs_machine_cgi
then
echo `date`: samba_logs_machine - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/samba_logs_machine_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/samba_logs_machine.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $samba_logs_machine_cgi'check' ]
then
echo `date`: samba_logs_machine - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/samba_logs_machine_cgi
then
echo `date`: samba_logs_machine - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/samba_logs_machine_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/samba_logs_machine.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $samba_logs_machine_cgi'check' ]
then
echo `date`: samba_logs_machine - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: samba_logs_machine - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: samba_logs_machine - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
MACHINE=`echo "$DATA" | cut -s -d: -f4`
DAY=`echo "$DATA" | cut -s -d: -f5`
MONTH=`echo "$DATA" | cut -s -d: -f6`
YEAR=`echo "$DATA" | cut -s -d: -f7`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: samba_logs_machine - Not called by samba_logs_machine.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ $REMOTE_USER'null' = null ]
then
echo `date`: samba_logs_machine - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: samba_logs_machine - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $MACHINE'null' = null ]
then
echo `date`: samba_logs_machine - Blank machine by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $DAY'null' = null ]
then
echo `date`: samba_logs_machine - Blank day by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $MONTH'null' = null ]
then
echo `date`: samba_logs_machine - Blank month by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $YEAR'null' = null ]
then
echo `date`: samba_logs_machine - Blank year by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: samba_logs_machine - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: samba_logs_machine - Viewing logs "for" $MACHINE $DAY-$MONTH-$YEAR by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#View logs




#Check to see if a log for this machine exists on the date given
LOGTYPE=NOTSET
[ -f /opt/karoshi/logs/connections/$DAY-$MONTH-$YEAR/machines/$MACHINE ] && LOGTYPE=text
[ -f /opt/karoshi/logs/connections/$DAY-$MONTH-$YEAR/machines/$MACHINE.tar.gz ] && LOGTYPE=archive
[ $LOGTYPE = NOTSET ] && exit 102
#Create table header
echo '<table class="standard" style="text-align: left;" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td style="vertical-align: top;"><b>'$"Computer Logs"' '$MACHINE' '$DAY'-'$MONTH'-'$YEAR'</b></td></tr></tbody></table><br>'

echo '<table class="standard" style="text-align: left;" ><tbody>'
echo '<tr><td style="width: 120px;"><b>'$"Time"'</b></td><td style="width: 20px;"></td><td style="width: 120px;"><b>'$"Username"'</b></td><td style="width: 20px;"></td><td style="width: 120px;"><b>'$"Share"'</b></td><td style="width: 20px;"></td><td><b>'$"TCP IP"'</b></td></tr>'
if [ $LOGTYPE = text ]
then
cat /opt/karoshi/logs/connections/$DAY-$MONTH-$YEAR/machines/$MACHINE
else
tar -xzOf /opt/karoshi/logs/connections/$DAY-$MONTH-$YEAR/machines/$MACHINE.tar.gz
fi
#end table
echo \<\/tbody\>\<\/table\>\<br\>
exit
