#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/show_user_info_cgi
then
echo `date`: show_user_info - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/show_user_info_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/show_user_info.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $show_user_info_cgi'check' ]
then
echo `date`: show_user_info - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: show_user_info - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-'`
if [ $DATA'null' = null ]
then
echo `date`: show_user_info - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
USERNAME=`echo "$DATA" | cut -s -d: -f4`
SERVERNAME=`echo "$DATA" | cut -s -d: -f5`
SERVERTYPE=`echo "$DATA" | cut -s -d: -f6`
SERVERMASTER=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: show_user_info - Not called by show_user_info.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: show_user_info - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: show_user_info - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $USERNAME'null' = null ]
then
echo `date`: show_user_info - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

if [ $SERVERNAME'null' = null ]
then
echo `date`: show_user_info - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

if [ $SERVERTYPE'null' = null ]
then
echo `date`: show_user_info - Blank servertype by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi

if [ $SERVERTYPE = federatedslave ]
then
if [ $SERVERMASTER'null' = null ]
then
echo `date`: show_user_info - Blank servermaster by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: show_user_info - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Show user information
########################
echo `date`: show_user_info - "for" $USERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/user/show_user_info ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/user/show_user_info
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all


LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
PRIMARYGROUP=`id -g -n $USERNAME`
SECONDARYGROUPS=`id -G -n $USERNAME`

source /opt/karoshi/server_network/group_information/$PRIMARYGROUP
source /opt/karoshi/server_network/domain_information/domain_name

#Get ldap information
if [ $SERVERNAME = $HOSTNAME ]
then
LDAPDATA=`ldapsearch -x -w $LDAPPASS -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn=$USERNAME`
fi

if [ $SERVERTYPE = federated ] || [ $SERVERTYPE = network ] && [ $SERVERNAME != $HOSTNAME ]
then
LDAPDATA=`ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVERNAME '
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
source /opt/karoshi/server_network/domain_information/domain_name
ldapsearch -x -w $LDAPPASS -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn='$USERNAME'
'`
fi

if [ $SERVERTYPE = federatedslave ]
then
LDAPDATA=`ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVERMASTER '
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 '$SERVERNAME' '\''
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
source /opt/karoshi/server_network/domain_information/domain_name
ldapsearch -x -w $LDAPPASS -b "OU=People,$LDAPBASE" -D "cn=Administrator,cn=Users,$LDAPBASE" cn='$USERNAME'
'\''
'`
fi

CN=`echo -e "$LDAPDATA" | grep ^cn: | cut -d: -f2 | sed 's/^ //g'`
SN=`echo -e "$LDAPDATA" | grep ^sn: | cut -d: -f2 | sed 's/^ //g'`
GIVENNAME=`echo -e "$LDAPDATA" | grep ^givenName: | cut -d: -f2 | sed 's/^ //g'`
LDAPUSERNAME=`echo -e "$LDAPDATA" | grep ^uid: | cut -d: -f2 | sed 's/^ //g'`
UIDNUMBER=`echo -e "$LDAPDATA" | grep ^uidNumber: | cut -d: -f2 | sed 's/^ //g'`
GIDNUMBER=`echo -e "$LDAPDATA" | grep ^gidNumber: | cut -d: -f2 | sed 's/^ //g'`
EMPLOYEENUMBER=`echo -e "$LDAPDATA" | grep ^employeeNumber: | cut -d: -f2 | sed 's/^ //g'`
HOMEDIRECTORY=`echo -e "$LDAPDATA" | grep ^unixHomeDirectory: | cut -d: -f2 | sed 's/^ //g'`
GECOS=`echo -e "$LDAPDATA" | grep ^gecos: | cut -d: -f2 | sed 's/^ //g'`
SAMBALOGONTIME=`echo -e "$LDAPDATA" | grep ^sambaLogonTime: | cut -d: -f2 | sed 's/^ //g'`
SAMBALOGOFFTIME=`echo -e "$LDAPDATA" | grep ^sambaLogoffTime: | cut -d: -f2 | sed 's/^ //g'`
SAMBAKICKOFFTIME=`echo -e "$LDAPDATA" | grep ^sambaKickoffTime: | cut -d: -f2 | sed 's/^ //g'`
SAMBAPWDCANCHANGE=`echo -e "$LDAPDATA" | grep ^sambaPwdCanChange: | cut -d: -f2 | sed 's/^ //g'`
DISPLAYNAME=`echo -e "$LDAPDATA" | grep ^displayName: | cut -d: -f2 | sed 's/^ //g'`
MAILLOCALADDRESS=`echo -e "$LDAPDATA" | grep ^mailLocalAddress: | cut -d: -f2 | sed 's/^ //g'`
MAIL=`echo -e "$LDAPDATA" | grep ^mail: | cut -d: -f2 | sed 's/^ //g'`
SAMBAPWDMUSTCHANGE=`echo -e "$LDAPDATA" | grep ^sambaPwdMustChange: | cut -d: -f2 | sed 's/^ //g'`
SHADOWLASTCHANGE=`echo -e "$LDAPDATA" | grep ^shadowLastChange: | cut -d: -f2 | sed 's/^ //g'`
SHADOWMAX=`echo -e "$LDAPDATA" | grep ^shadowMax: | cut -d: -f2 | sed 's/^ //g'`
SAMBAPASSWORDHISTORY=`echo -e "$LDAPDATA" | grep ^sambaPasswordHistory: | cut -d: -f2 | sed 's/^ //g'`
SAMBAACCTFLAGS=`echo -e "$LDAPDATA" | grep ^sambaAcctFlags: | cut -d: -f2 | sed 's/^ //g'`
SAMBAPWDLASTSET=`echo -e "$LDAPDATA" | grep ^sambaPwdLastSet: | cut -d: -f2 | sed 's/^ //g'`
SAMBAPWDLASTSET=`perl -e 'print scalar(localtime('$SAMBAPWDLASTSET')), "\n"'`
SHADOWLASTCHANGE=`perl -e 'print scalar(localtime('$SHADOWLASTCHANGE')), "\n"'`
SAMBAPWDMUSTCHANGE=`perl -e 'print scalar(localtime('$SAMBAPWDMUSTCHANGE')), "\n"'`
SAMBAKICKOFFTIME=`perl -e 'print scalar(localtime('$SAMBAKICKOFFTIME')), "\n"'`
#Show user information

echo '<form name="myform" action="/cgi-bin/admin/change_user_info.cgi" method="post"><table class="standard" style="text-align: left; height: 40px;" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td valign="top">'

echo '<input type="hidden" name="_USERNAME_" value="'$USERNAME'" /><table class="standard" style="text-align: left; height: 40px;" border="0" cellpadding="2" cellspacing="2"><tbody>
<tr><td style="width: 180px;" valign="top"><b>'$BASEINFOMSG'</b></td></tr>
<tr><td>'$USERNAMEMSG'</td><td>'$USERNAME'</td></tr>
<tr><td>'$SERVERMSG'</td><td>'$SERVER'</td></tr>
<tr><td>'$HOMEDIRMSG'</td><td>'$HOMEDIRECTORY'</td></tr>
<tr><td>'$PRIGROUPMSG'</td><td>'$PRIMARYGROUP'</td></tr>
<tr><td>'$SECGROUPMSG'</td><td>'$SECONDARYGROUPS'</td></tr>
<tr><td>UID number</td><td>'$UIDNUMBER'</td></tr>
<tr><td>GID number</td><td>'$GIDNUMBER'</td></tr>
<tr><td>'$CNMSG'</td><td>'$CN'</td></tr>
<tr><td>'$SURNAMEMSG'</td><td><input tabindex= "2" value="'$SN'" name="_SN_" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td>'$GIVENNAMEMSG'</td><td><input tabindex= "3" value="'$GIVENNAME'" name="_GIVENNAME_" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td>Employee / student number</td><td><input tabindex= "4" value="'$EMPLOYEENUMBER'" name="_EMPLOYEENUMBER_" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td>'$DISPLAYNAMEMSG'</td><td><input tabindex= "5" value="'$DISPLAYNAME'" name="_DISPLAYNAME_" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td>'$EMAILADDRESSMSG'</td><td><input tabindex= "7" value="'$MAIL'" name="_MAIL_" style="width: 200px;" size="20" type="text"></td></tr>
<tr><td>'$SMBACCFLAGSMSG'</td><td>'$SAMBAACCTFLAGS'</td></tr>
<tr><td>'$PASSLASTCHANGEDMSG'</td><td>'$SAMBAPWDLASTSET'</td></tr>
<tr><td>'$SHADOWMAXMSG'</td><td>'$SHADOWMAX'</td></tr>
<tr><td>'$PASSMUSTCHANGEMSG'</td><td>'$SAMBAPWDMUSTCHANGE'</td></tr>
<tr><td>'$ACCEXPMSG'</td><td>'$SAMBAKICKOFFTIME'</td></tr>
</tbody></table>
'

echo '</td><td valign="top">'

if [ -f /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$USERNAME.jpg ]
then
echo '<p><img src="/images/user_images/'$PRIMARYGROUP'/'$USERNAME'.jpg" width="120" height="150"></p>'
else
echo '<p><img src="/images/blank_user_image.jpg" width="120" height="150"></p>'
fi
echo '</td></tr></tbody></table><br><br><input value="Submit" type="submit"> <input value="Reset" type="reset"></form>'
exit
