#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/update_collabora_office_cgi
then
	echo "$(date): update_collabora_office - No admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101	
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/update_collabora_office_cgi
Checksum=$(sha256sum /var/www/cgi-bin_karoshi/admin/update_collabora_office.cgi | cut -d' ' -f1)
[ -z "$Checksum" ] && Checksum=not_set
if [ "$Checksum" != "$update_collabora_office_cgi" ]
then
	echo "date: update_collabora_office - Incorrect admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): update_collabora_office - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:%\n-+-' | sed 's/REPLACEUNDERSCORE/_/g')
if [ -z "$DATA" ]
then
	echo "$(date): update_collabora_office - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
RemoteCheckSum=$(echo "$DATA" | cut -s -d: -f3)
ACTION=$(echo "$DATA" | cut -s -d: -f4)

########################
#Check data
########################
if [ "$RemoteCheckSum" != "$Checksum" ]
then
	echo "$(date): update_collabora_office - Not called by update_collabora_office.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): update_collabora_office - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): update_collabora_office - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo "$(date): update_collabora_office - Blank action by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi

if [[ $(grep -c ^"$REMOTE_USER": /opt/karoshi/web_controls/web_access_admin) != 1 ]]
then
	echo "$(date): update_collabora_office - access denied to $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

if [ "$ACTION" != update ]
then
	echo "$(date): update_collabora_office - incorrect action by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit
fi

if [ -f /opt/karoshi/server_network/nextcloudserver ]
then
	NextcloudServer=$(sed -n 1,1p /opt/karoshi/server_network/nextcloudserver)
	ServerIP=$(net lookup "$NextcloudServer")

	if [[ "$NextcloudServer" = $(hostname-fqdn) ]]
	then
		DNSName=$(grep overwrite.cli.url /var/www/html/nextcloud/config/config.php | cut -d">" -f2 | cut -d"/" -f3 | tr -cd "A-Za-z0-9.")
		if [ -z "$DNSName" ]
		then
			echo $"Blank DNS name for the nextcloud server."
			exit 101
		fi
		/opt/karoshi/serversetup/modules/nextcloud/setupcollabora "$DNSName" "$ServerIP" html update
	else
		scp -p -r /opt/karoshi/serversetup/modules/nextcloud root@$NextcloudServer:/opt/karoshi/serversetup/modules/ 1> /dev/null
		ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$NextcloudServer" '
		DNSName=$(grep overwrite.cli.url /var/www/html/nextcloud/config/config.php | cut -d">" -f2 | cut -d"/" -f3 | tr -cd "A-Za-z0-9.")
		if [ -z "$DNSName" ]
		then
			echo $"Blank DNS name for the nextcloud server."
			exit 101
		fi
		/opt/karoshi/serversetup/modules/nextcloud/setupcollabora "$DNSName" "'"$ServerIP"'" html update
		'
	fi
fi
exit
