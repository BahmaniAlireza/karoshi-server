#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/update_moodle_process1_cgi
then
echo `date`: update_moodle - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/update_moodle_process1_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/update_moodle_process1.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set1
if [ $MD5SUM'check' != $update_moodle_process1_cgi'check' ]
then
echo `date`: update_moodle - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: update_moodle - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: update_moodle - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
ARCHIVEMD5=`echo "$DATA" | cut -s -d: -f4`
ARCHIVENAME=`echo "$DATA" | cut -s -d: -f5`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: update_moodle - Not called by update_moodle.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: update_moodle - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: update_moodle - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $ARCHIVEMD5'null' = null ]
then
echo `date`: update_moodle - archive MD5 >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $ARCHIVENAME'null' = null ]
then
echo `date`: update_moodle - Blank archive name >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: update_moodle - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: update_moodle - using archive "$ARCHIVENAME" by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

############################
#Language
############################

STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
TEXTDOMAIN=karoshi-server

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software

############################
#Get date for backup paths
############################
DAY=`date +%d`
MONTH=`date +%m`
YEAR=`date +%Y`

BACKUPFOLDER=/var/www/moodle_backup

function show_warning_message {
echo -e '<img src="/images/warnings/service_failure.png">' $MESSAGE'<br><br>'
sleep 1
}

function show_message {
echo -e '<img src="/images/warnings/service_ok.png">' $MESSAGE'<br><br>'
sleep 1
}

#Check that a version of moodle is installed
if [ ! -f /opt/karoshi/server_network/moodleserver ]
then
exit 102
fi

MOODLESERVER=`sed -n 1,1p /opt/karoshi/server_network/moodleserver`

if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
if [ ! -d /var/www/html/moodle ]
then
exit 102
fi
'
if [ `echo $?` = 102 ]
then
exit 102
fi
else
if [ ! -d /var/www/html/moodle ]
then
exit 102
fi
fi

################################
#Create backup folder
################################
MESSAGE=''$"Backing up moodle to the following path:"' '$BACKUPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle'

show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
[ -d '$"Back"UPFOLDER'/'$DAY-$MONTH-$YEAR' ] && rm -f -R '$"Back"UPFOLDER'/'$DAY-$MONTH-$YEAR'
[ ! -d '$"Back"UPFOLDER'/'$DAY-$MONTH-$YEAR' ] &&  mkdir -p '$"Back"UPFOLDER'/'$DAY-$MONTH-$YEAR'
'
else
[ -d $"Back"UPFOLDER/$DAY-$MONTH-$YEAR ] && rm -f -R $"Back"UPFOLDER/$DAY-$MONTH-$YEAR
[ ! -d $"Back"UPFOLDER/$DAY-$MONTH-$YEAR ] &&  mkdir -p $"Back"UPFOLDER/$DAY-$MONTH-$YEAR
fi
################################
#Copy /var/www/html/moodle
################################
MESSAGE=$"Copying the current moodle folder."
show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
cp -f -R /var/www/html/moodle '$"Back"UPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle
COPYSTATUS=`echo $?`
exit $COPYSTATUS
'
else
cp -f -R /var/www/html/moodle $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle
fi

if [ `echo $?` != 0 ]
then
MESSAGE=$"There was a problem updating moodle."
show_warning_message
exit 103
fi
################################
#Backup /var/www/moodle-data
################################
#Not backing up moodle data due to possible large size. Admins need to check moodle backup is in place.
#MESSAGE=$"Backing up moodle data."
#show_message
#cp -f -R -v /var/www/moodle-data $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/
################################
#Backup moodle database
################################
MESSAGE=$"Backing up the moodle database."
show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
scp root@$MOODLESERVER:$"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle/config.php /opt/karoshi/.tempdata/config.php.$$
MOODLEPASS=`grep CFG-\>dbpass /opt/karoshi/.tempdata/config.php.$$ | cut -d\' -f2`
rm -f /opt/karoshi/.tempdata/config.php.$$
if [ $MOODLEPASS'null' != null ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
#############################
#Modify the database to use COLLATE utf8_general_ci
#############################
echo ALTER DATABASE moodle DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci';' > /opt/karoshi/.tempdata/mysqlperms.sql
mysql --user=moodle_user --password=$MOODLEPASS < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql
mysqldump -u moodle_user --password="'$MOODLEPASS'" moodle > '$"Back"UPFOLDER'/'$DAY-$MONTH-$YEAR'/moodle.sql
DUMPSTATUS=`echo $?`
exit $DUMPSTATUS
'
fi
else
MOODLEPASS=`grep CFG-\>dbpass '$"Back"UPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle/config.php | cut -d\' -f2`
if [ $MOODLEPASS'null' != null ]
then
#############################
#Modify the database to use COLLATE utf8_general_ci
#############################
echo ALTER DATABASE moodle DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci';' > /opt/karoshi/.tempdata/mysqlperms.sql
mysql --user=moodle_user --password=$MOODLEPASS < /opt/karoshi/.tempdata/mysqlperms.sql
rm -f /opt/karoshi/.tempdata/mysqlperms.sql
mysqldump -u moodle_user --password="$MOODLEPASS" moodle > $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle.sql
fi
fi

if [ `echo $?` != 0 ]
then
MESSAGE=$"There was a problem updating moodle."
show_warning_message
exit 103
fi

################################
#Extract new moodle archive
################################
MESSAGE=$"Extracting the new moodle archive."
show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
#Copy the moodle archive to the correct server
scp /var/www/karoshi/moodle/"$ARCHIVENAME" root@$MOODLESERVER:/var/www/html/
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
cd /var/www/html
[ -d /var/www/html/moodle/ ] && rm -f -R /var/www/html/moodle/
tar xzf "'$ARCHIVENAME'"
EXTRACTSTATUS=`echo $?`
rm -f /var/www/html/"'$ARCHIVENAME'"
exit $EXTRACTSTATUS
'
else
cp /var/www/karoshi/moodle/"$ARCHIVENAME" /var/www/html
[ -d /var/www/html/moodle/ ] && rm -f -R /var/www/html/moodle/
cd /var/www/html
tar xzf "$ARCHIVENAME"
EXTRACTSTATUS=`echo $?`
rm -f /var/www/html/"$ARCHIVENAME"
fi

if [ $EXTRACTSTATUS != 0 ]
then
MESSAGE=$"There was a problem updating moodle."
show_warning_message
#Restore old version
if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
[ -d /var/www/html/moodle/ ] && rm -f -R /var/www/html/moodle/
cp -f -R '$"Back"UPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle /var/www/html/moodle
exit 103
'
else
[ -d /var/www/html/moodle/ ] && rm -f -R /var/www/html/moodle/
cp -f -R  $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle /var/www/html/moodle
fi
exit 103
fi

################################
#Copy in config.php and themes
################################
MESSAGE=$"Copying in the existing moodle config file and any custom themes."
show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
cp -f '$"Back"UPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle/config.php /var/www/html/moodle/
for THEMEPATH in '$"Back"UPFOLDER'/'$DAY'-'$MONTH'-'$YEAR'/moodle/theme/*
do
THEMENAME=`basename $THEMEPATH`
if [ ! -d /var/www/html/moodle/theme/$THEMENAME ]
then
if [ -d $THEMEPATH ]
then
echo $THEMENAME"<br>"
cp -f -R $THEMEPATH /var/www/html/moodle/theme/
fi
fi
done
'
else
cp -f $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle/config.php /var/www/html/moodle/
for THEMEPATH in $"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle/theme/*
do
THEMENAME=`basename $THEMEPATH`
if [ ! -d /var/www/html/moodle/theme/$THEMENAME ]
then
if [ -d $THEMEPATH ]
then
echo $THEMENAME"<br>"
cp -f -R $THEMEPATH /var/www/html/moodle/theme/
fi
fi
done
fi

################################
#Set permissions
################################
MESSAGE=$"Setting permissions on the new moodle installation."
show_message
if [ $MOODLESERVER != `hostname-fqdn` ]
then
ssh -x -o PasswordAuthentication=no $MOODLESERVER '
chmod 0440 -R /var/www/html/moodle
chmod u+X,g+X -R /var/www/html/moodle
chown -R root.'$APACHEGROUP' /var/www/html/moodle
'
else
chmod 0440 -R /var/www/html/moodle
chmod u+X,g+X -R /var/www/html/moodle
chown -R root.$APACHEGROUP /var/www/html/moodle
fi
################################
#Visit admin page to complete the update
################################
MESSAGE=$"The moodle files have now been updated."
show_message
#Visit admin page to complete update
if [ $MOODLESERVER != `hostname-fqdn` ]
then
scp root@$MOODLESERVER:$"Back"UPFOLDER/$DAY-$MONTH-$YEAR/moodle/config.php /opt/karoshi/.tempdata/config.php.$$
MOODLEDOMAIN=`grep CFG-\>wwwroot /opt/karoshi/.tempdata/config.php.$$ | cut -d\' -f2`
rm -f /opt/karoshi/.tempdata/config.php.$$
else
MOODLEDOMAIN=`grep CFG-\>wwwroot /var/www/html/moodle/config.php | cut -d\' -f2`
fi

if [ $MOODLEDOMAIN'null' != null ]
then
echo \<a href=\"$MOODLEDOMAIN/admin/\" target=\"_blank\"\>$"Click Here to visit the moodle admin page to complete the installation."\</a\>\<br\>
fi
echo '</div></body></html>'
exit
