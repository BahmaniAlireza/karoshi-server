#!/bin/bash
#Copyright (C) 2010 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/ups_delete_cgi
then
	echo `date`: ups_delete - No admin Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/ups_delete_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/ups_delete.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $ups_delete_cgi'check' ]
then
	echo `date`: ups_delete - Incorrect admin Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
	echo `date`: ups_delete - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\-+'`
if [ -z "$DATA" ]
then
	echo `date`: ups_delete - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
RemoteCheckSum=`echo "$DATA" | cut -s -d: -f3`
SERVER=`echo "$DATA" | cut -s -d: -f4`
SERVERTYPE=`echo "$DATA" | cut -s -d: -f5`
SERVERMASTER=`echo "$DATA" | cut -s -d: -f6`
UPSMODEL=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ] && [ $RemoteCheckSum'check' != $Checksum2'check' ]
then
	echo `date`: ups_delete - Not called by ups_delete.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: ups_delete - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: ups_delete - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ -z "$SERVER" ]
then
	echo `date`: ups_delete - Blank server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101	
fi

if [ -z "$SERVERTYPE" ]
then
	echo `date`: ups_delete - Blank servertype by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ "$SERVERTYPE" = SLAVE ] || [ "$SERVERTYPE" = DEVICE ]
then
	if [ -z "$SERVERMASTER" ]
	then
		echo `date`: ups_delete - Blank servermaster by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
		exit 101
	fi
fi

if [ -z "$UPSMODEL" ]
then
	echo `date`: ups_delete - Blank upsmodel by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: ups_delete - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

echo `date`: ups_delete $UPSMODEL on $SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

if [ "$SERVERTYPE" = DEVICE ]
then
	SERVER=`echo $SERVER | sed 's/%26/\&/g'`
	if [ -f /opt/karoshi/server_network/ups/master/"$SERVERMASTER"/extra_devices/"$SERVER" ]
	then
		rm -f /opt/karoshi/server_network/ups/master/"$SERVERMASTER"/extra_devices/"$SERVER"
		#Delete extra_devices folder if empty
		[ `ls -1 /opt/karoshi/server_network/ups/master/"$SERVERMASTER"/extra_devices | wc -l` = 0 ] && rm -f -R /opt/karoshi/server_network/ups/master/"$SERVERMASTER"/extra_devices
		exit
	fi
fi

if [ "$SERVERTYPE" = MASTER ]
then
	########################
	#Delete config file
	########################
	[ -f /opt/karoshi/server_network/ups/master/$SERVER/drivers/"$UPSMODEL" ] && rm -f /opt/karoshi/server_network/ups/master/$SERVER/drivers/"$UPSMODEL"
	########################
	#Build config file
	########################
	if [ `ls -1 /opt/karoshi/server_network/ups/master/$SERVER/drivers/ | wc -l` = 0 ]
	then
		UPS=no
		rm -f -R /opt/karoshi/server_network/ups/master/$SERVER/
	else
		UPS=yes
		cat /opt/karoshi/server_network/ups/master/$SERVER/drivers/* > /opt/karoshi/server_network/ups/master/$SERVER/ups.conf
	fi

	if [ $SERVER = `hostname-fqdn` ]
	then
		if [ -f /opt/karoshi/server_network/ups/master/$SERVER/ups.conf ]
		then
			cp -f /opt/karoshi/server_network/ups/master/$SERVER/ups.conf /etc/nut/
		else
			rm -f /etc/nut/ups.conf
		fi
	else
		if [ -f /opt/karoshi/server_network/ups/master/$SERVER/ups.conf ]
		then
			scp /opt/karoshi/server_network/ups/master/$SERVER/ups.conf root@$SERVER:"/etc/nut/"
		else
			ssh -x -o PasswordAuthentication=no $SERVER '
			rm -f /etc/nut/ups.conf
			'
		fi
	fi

	########################
	# Restart Nut
	########################
	echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
	if [ "$SERVER" = `hostname-fqdn` ]
	then
		source /opt/karoshi/serversetup/variables/distro
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_stop 1>/dev/null
		sleep 1
	if [ $UPS = yes ]
	then
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_start 1>/dev/null
	else
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/stoponboot/nut 1>/dev/null
	fi
	else
	ssh -x -o PasswordAuthentication=no $SERVER '
	source /opt/karoshi/serversetup/variables/distro
	/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_stop 1>/dev/null
	sleep 1
	if [ '$UPS' = yes ]
	then
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_start 1>/dev/null
	else
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/stoponboot/nut 1>/dev/null
	fi
	' 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	fi
	echo '</pre>'
fi
 
if [ $SERVERTYPE = SLAVE ]
then
	#Delete user file
	[ -f /opt/karoshi/server_network/ups/slave/$SERVERMASTER/users/$SERVER ] && rm -f /opt/karoshi/server_network/ups/slave/$SERVERMASTER/users/$SERVER

	if [ `ls /opt/karoshi/server_network/ups/slave/$SERVERMASTER/users/ | wc -l` = 0 ]
	then
		rm -f -R /opt/karoshi/server_network/ups/slave/$SERVERMASTER/
	fi

	#Rebuild master user file
	cat /opt/karoshi/server_network/ups/master/$SERVERMASTER/users/* > /opt/karoshi/server_network/ups/master/$SERVERMASTER/upsd.users
	cat /opt/karoshi/server_network/ups/slave/$SERVERMASTER/users/* >> /opt/karoshi/server_network/ups/master/$SERVERMASTER/upsd.users
	#Stop nut on slave server
	if [ $SERVER = `hostname-fqdn` ]
	then
		source /opt/karoshi/serversetup/variables/distro
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/stoponboot/nut
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_stop 1>/dev/null
		else
	ssh -x -o PasswordAuthentication=no $SERVER '
		source /opt/karoshi/serversetup/variables/distro
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/stoponboot/nut
		/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/nut_stop 1>/dev/null
	'
	fi
	#Remove information from the servermaster
	if [ $SERVERMASTER = `hostname-fqdn` ]
	then
		touch /etc/nut/upsd.users
		chmod 0600 /etc/nut/upsd.users
		cp -f /opt/karoshi/server_network/ups/master/$SERVERMASTER/upsd.users /etc/nut/
		service mon restart
	else
		ssh -x -o PasswordAuthentication=no $SERVERMASTER '
		touch /etc/nut/upsd.users
		chmod 0600 /etc/nut/upsd.users
	'
		scp /opt/karoshi/server_network/ups/master/$SERVERMASTER/upsd.users root@$SERVERMASTER:"/etc/nut/"
		ssh -x -o PasswordAuthentication=no $SERVERMASTER '
		service mon restart
	'
	fi

fi
exit

