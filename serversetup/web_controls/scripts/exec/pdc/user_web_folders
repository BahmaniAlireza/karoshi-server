#!/bin/bash
#Copyright (C) 2013 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=$(date +%F)
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/user_web_folders_cgi
then
	echo "$(date): user_web_folders - No admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/user_web_folders_cgi
MD5SUM=$(md5sum /var/www/cgi-bin_karoshi/admin/user_web_folders.cgi | cut -d' ' -f1)
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ "$MD5SUM"'check' != "$user_web_folders_cgi"'check' ]
then
	echo "$(date): user_web_folders - Incorrect admin MD5Checksum" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo "$(date): user_web_folders - incorrect number of arguments" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

read DATA
DATA=$(echo "$DATA" | tr -cd 'A-Za-z0-9\._:\-')
if [ -z "$DATA" ]
then
	echo "$(date): user_web_folders - no data" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
REMOTE_USER=$(echo "$DATA" | cut -s -d: -f1)
REMOTE_ADDR=$(echo "$DATA" | cut -s -d: -f2)
REMOTE_MD5=$(echo "$DATA" | cut -s -d: -f3)
GROUP=$(echo "$DATA" | cut -s -d: -f4)
ACTION=$(echo "$DATA" | cut -s -d: -f5)
USERNAME=$(echo "$DATA" | cut -s -d: -f6)
SERVICECHECK=$(echo "$DATA" | cut -s -d: -f7)
MOBILE=$(echo "$DATA" | cut -s -d: -f8)
########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ]
then
	echo "$(date): user_web_folders - Not called by user_web_folders.cgi or bulk_user_creation_create.cgi" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo "$(date): user_web_folders - Blank remote user" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo "$(date): user_web_folders - Blank remote tcpip address" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$GROUP" ]
then
	echo "$(date): user_web_folders - Blank group by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$ACTION" ]
then
	echo "$(date): user_web_folders - Blank action by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$USERNAME" ]
then
	echo "$(date): user_web_folders - Blank username by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi
if [ -z "$SERVICECHECK" ]
then
	echo "$(date): user_web_folders - Blank servicecheck by $REMOTE_USER from $REMOTE_ADDR" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"
	exit 101
fi

echo "$(date): user_web_folders -  Username: $USERNAME, Group: $GROUP, Action: $ACTION from $REMOTE_ADDR by $REMOTE_USER" >> "/opt/karoshi/logs/karoshi_web_management/$LOG_DATE"


##########################
#Language
##########################

[ -f /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER" ] && source /opt/karoshi/web_controls/user_prefs/"$REMOTE_USER"
export TEXTDOMAIN=karoshi-server
source /opt/karoshi/server_network/domain_information/domain_name

########################
#Get server and home path for new user
########################

source /opt/karoshi/server_network/group_information/"$GROUP"
#Show a list of servers if the user home areas are on a gluster volume
SERVERSTORAGE="${SERVER//,/<br>}"

if [ "$MOBILE" = yes ]
then
	#Just show the server name not the fqdn for mobile devices
	SERVERSTORAGE="${SERVERSTORAGE//.$REALM/}"
fi

#Enable or disable a user's web hosting area
if [ "$ACTION" = enable ] || [ "$ACTION" = disable ]
then
	SERVER=$(echo "$SERVER" | cut -d, -f1)
	if [[ "$SERVER" = $(hostname-fqdn) ]]
	then

		function enablewebhosting {
		chmod 0755 "$HOMEPATH"
		#Create a public_html folder in the user's home area
		[ ! -d "$HOMEPATH/$USERNAME/public_html" ] && mkdir "$HOMEPATH/$USERNAME/public_html"
		chmod 0700 "$HOMEPATH/$USERNAME/public_html"
		chown "$USERNAME" "$HOMEPATH/$USERNAME/public_html"
		#Set an acl so that the apache user can access the public_html area only
		setfacl -m user:www-data:--x "$HOMEPATH/$USERNAME"
		setfacl -Rm user:www-data:r-x,d:user:www-data:r-x "$HOMEPATH/$USERNAME/public_html"
		}

		function disablewebhosting {
		#Remove the acl for the apache user from the user's home area
		setfacl -x user:www-data "$HOMEPATH/$USERNAME"
		setfacl -Rx user:www-data,d:user:www-data "$HOMEPATH/$USERNAME/public_html"
		}

		if [ "$USERNAME" != all ] && [ "$ACTION" = enable ]
		#Enable/disable hosting for a user
		then
			enablewebhosting
		fi

		if [ "$USERNAME" != all ] && [ "$ACTION" = disable ]
		then
			disablewebhosting
		fi

		if [ "$USERNAME" = all ] && [ "$ACTION" = enable ]
		then
			for USERFOLDER in $HOMEPATH/*
			do
				USERNAME=$(basename "$USERFOLDER")
				enablewebhosting
			done
		fi

		if [ "$USERNAME" = all ] && [ "$ACTION" = disable ]
		then
			for USERFOLDER in $HOMEPATH/*
			do
				USERNAME=$(basename "$USERFOLDER")
				disablewebhosting
			done
		fi

	else
		ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVER" '
		function enablewebhosting {

		chmod 0755 '"$HOMEPATH"'
		[ ! -d '"$HOMEPATH"'/"$USERNAME"/public_html ] && mkdir '"$HOMEPATH"'/"$USERNAME"/public_html
		chmod 0700 '"$HOMEPATH"'/"$USERNAME"/public_html
		chown "$USERNAME" '"$HOMEPATH"'/"$USERNAME"/public_html
		setfacl -m user:www-data:--x '"$HOMEPATH"'/"$USERNAME"
		setfacl -Rm user:www-data:r-x,d:user:www-data:r-x '"$HOMEPATH"'/"$USERNAME"/public_html
		}

		function disablewebhosting {
		setfacl -x user:www-data '"$HOMEPATH"'/$USERNAME
		setfacl -Rx user:www-data,d:user:www-data '"$HOMEPATH"'/"$USERNAME"/public_html
		}

		if [ '"$USERNAME"' != all ] && [ '"$ACTION"' = enable ]
		#Enable/disable hosting for a user
		then
			USERNAME='"$USERNAME"'
			enablewebhosting
		fi

		if [ '"$USERNAME"' != all ] && [ '"$ACTION"' = disable ]
		then
			USERNAME='"$USERNAME"'
			disablewebhosting
		fi

		if [ '"$USERNAME"' = all ] && [ '"$ACTION"' = enable ]
		then
			for USERFOLDER in '"$HOMEPATH"'/*
			do
				USERNAME=$(basename "$USERFOLDER")
				enablewebhosting
			done
		fi

		if [ '"$USERNAME"' = all ] && [ '"$ACTION"' = disable ]
		then
			for USERFOLDER in '"$HOMEPATH"'/*
			do
				USERNAME=$(basename "$USERFOLDER")
				disablewebhosting
			done
		fi
		'
	fi
fi

if [ "$ACTION" = enablehosting ]
then

	for SERVERNAME in ${SERVER//,/ }
	do
		#Add server to user web folder list
		touch /var/lib/samba/netlogon/domain_information/user_web_servers
		if [[ $(grep -c "$SERVERNAME" /var/lib/samba/netlogon/domain_information/user_web_servers) = 0 ]]
		then
			echo "$SERVERNAME" >> /var/lib/samba/netlogon/domain_information/user_web_servers
		fi

		#Enable user web folders
		if [[ "$SERVERNAME" = $(hostname-fqdn) ]]
		then
			#Make sure suphp is installed
			if [ ! -f /etc/apache2/mods-available/suphp.load ]
			then
				echo '<ul><li>'$"Updating the repository"'</li></ul>'
				sleep 1
				apt-get update
				echo '<ul><li>'$"Installing suexec"'</li></ul>'
				apt-get install -y apache2-suexec
			fi

			#Copy in config files
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/karoshi-userdir.conf /etc/apache2/mods-available/
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/karoshi-userdir.load /etc/apache2/mods-available/
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/suphp.conf /etc/suphp/

			a2enmod karoshi-userdir 1> /dev/null
			a2enmod suphp 1> /dev/null
			a2enmod suexec 1> /dev/null
			source /opt/karoshi/serversetup/variables/distro
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/apache
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_stop 1> /dev/null
			sleep 1
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_start 1> /dev/null

			#Open shorewall ports

			if [[ $(grep -c 80,443 /etc/shorewall/rules) = 0 ]]
			then
				LINENUM=$(grep -n 'LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' /etc/shorewall/rules | cut -d: -f1)
				sed -i "$LINENUM"'cACCEPT	net	fw	tcp	80,443	-#apacherule' /etc/shorewall/rules
				echo '#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE' >> /etc/shorewall/rules
				/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_stop 1>/dev/null
				/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_start 1>/dev/null
			fi
		else
			#Copy in config files
			scp -r -o PasswordAuthentication=no /opt/karoshi/serversetup/modules/user_web_folders "$SERVERNAME":/opt/karoshi/serversetup/modules/

			ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVERNAME" '
			#Make sure suphp is installed
			if [ ! -f /etc/apache2/mods-available/suphp.load ]
			then
				echo "<ul><li>"'$"Updating the repository"'"</li></ul>"
				sleep 1
				apt-get update
				echo "<br><br><ul><li>"'$"Installing suexec"'"</li></ul>"
				apt-get -y install apache2-suexec
			fi

			#Copy in config files
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/karoshi-userdir.conf /etc/apache2/mods-available/
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/karoshi-userdir.load /etc/apache2/mods-available/
			cp -f /opt/karoshi/serversetup/modules/user_web_folders/suphp.conf /etc/suphp/

			a2enmod suphp 1> /dev/null
			a2enmod karoshi-userdir 1> /dev/null
			a2enmod suexec 1> /dev/null
			source /opt/karoshi/serversetup/variables/distro
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/apache
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_stop 1> /dev/null
			sleep 1
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_start 1> /dev/null

			if [ $(grep -c 80,443 /etc/shorewall/rules) = 0 ]
			then
				LINENUM=$(grep -n "LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" /etc/shorewall/rules | cut -d: -f1)
				sed -i "$LINENUM""cACCEPT	net	fw	tcp	80,443	-#"apacherule /etc/shorewall/rules
				echo "#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE" >> /etc/shorewall/rules
				/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_stop 1>/dev/null
				/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/shorewall_start 1>/dev/null
			fi

			'
		fi
	echo $"User web folders""<br>" > /opt/karoshi/server_network/servers/"$SERVERNAME"/user_web_folders
	done
	#reload form
	echo "</form><form METHOD=POST ACTION=\"/cgi-bin/admin/user_web_folders.cgi\" target=\"_top\" name = \"frm\">
	<input type=\"hidden\" name=\"_GROUP_\" value=\"$GROUP\">
	</form>
	<script>
	document.frm.submit();
	</script>"
	exit
fi

if [ "$ACTION" = disablehosting ]
then

	for SERVERNAME in ${SERVER//,/ }
	do
		#Remove server from user web folder list
		touch /var/lib/samba/netlogon/domain_information/user_web_servers
		if [[ $(grep -c "$SERVERNAME" /var/lib/samba/netlogon/domain_information/user_web_servers) != 0 ]]
		then
			sed -i 's/'"$SERVERNAME"'//g' /var/lib/samba/netlogon/domain_information/user_web_servers
			sed -i '/^[[:space:]]*$/d' /var/lib/samba/netlogon/domain_information/user_web_servers
		fi

		#Disable user web folders
		if [[ "$SERVERNAME" = $(hostname-fqdn) ]]
		then
			a2dismod karoshi-userdir 1> /dev/null
			a2dismod suphp 1> /dev/null
			a2dismod suexec 1> /dev/null
			source /opt/karoshi/serversetup/variables/distro
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/apache
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_stop 1> /dev/null
			sleep 1
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_start 1> /dev/null
		else
			ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVERNAME" '
			a2dismod karoshi-userdir 1> /dev/null
			a2dismod suphp 1> /dev/null
			a2dismod suexec 1> /dev/null
			source /opt/karoshi/serversetup/variables/distro
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/startonboot/apache
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_stop 1> /dev/null
			sleep 1
			/opt/karoshi/serversetup/distro/"$DISTROCHOICE"/scripts/control_services/apache_start 1> /dev/null
			'
		fi
		rm -f /opt/karoshi/server_network/servers/"$SERVERNAME"/user_web_folders
	done
fi

#########################
#Show user web folder status for a group
#########################
if [ "$MOBILE" = no ]
then
	ICON1=/images/submenus/user/web_folder_enabled.png
	ICON2=/images/submenus/user/web_folder_disabled.png
	WIDTH1=180
	WIDTH2=200
	WIDTH3=120
	WIDTH4=388
else
	ICON1=/images/submenus/user/web_folder_enabledm.png
	ICON2=/images/submenus/user/web_folder_disabledm.png
	WIDTH1=110
	WIDTH2=85
	WIDTH3=80
	WIDTH4=230
fi

SERVER=$(echo "$SERVER" | cut -d, -f1)

echo '<table class="tablesorter" style="text-align: left;" ><tbody>
<tr><td style="width: '"$WIDTH1"'px;"><b>'$"Server"'</b></td><td style="width: '"$WIDTH2"'px;">'"$SERVERSTORAGE"'</td><td style="width: '"$WIDTH3"'px;">
'

if [ ! -f /opt/karoshi/server_network/servers/"$SERVER"/user_web_folders ]
then
	echo '<input name="_GROUP_'"$GROUP"'_ACTION_enablehosting_USERNAME_none_" type="submit" class="button" value="'$"Start hosting"'">'
else
	echo '<input name="_GROUP_'"$GROUP"'_ACTION_disablehosting_USERNAME_none_" type="submit" class="button" value="'$"Stop hosting"'">'
fi

#Show global options
echo '</td></tr><tr><td><b>'$"Primary Group"'</b></td><td>'"$GROUP"'</td><td>
<input name="_GROUP_'"$GROUP"'_ACTION_enable_USERNAME_all_" type="submit" class="button" value="'$"Enable all users"'">
</td></tr>
<tr><td></td><td></td><td>
<input name="_GROUP_'"$GROUP"'_ACTION_disable_USERNAME_all_" type="submit" class="button" value="'$"Disable all users"'">
</td></tr></tbody></table>'

[ "$MOBILE" = no ] && echo '</div><div id="infobox">'


if [[ "$SERVER" = $(hostname-fqdn) ]]
then
	if [ -d "$HOMEPATH" ]
	then
		if [[ $(ls -1 "$HOMEPATH" | wc -l) -gt 0 ]]
		then

			folders=( $(find -L "$HOMEPATH" -mindepth 1 -maxdepth 1 -type d | sort) )

			
			echo '<table id="myTable" class="tablesorter" style="text-align: left;" ><thead>
			<tr><th style="width: '"$WIDTH4"'px;"><b>'$"Username"'</b></th><th style="width: '"$WIDTH3"'px;"><b>'$"Status"'</b></th></tr></thead><tbody>'
			sudo -u www-data /bin/bash << ENDOFTEST
for folder in ${folders[@]}; do
FOLDERACTION=enable
STATUSICON=$ICON2
MESSAGE=''$"Enable user web folder"''
if [[ -r \$folder/public_html ]]; then
STATUSICON=$ICON1
FOLDERACTION=disable
MESSAGE=''$"Disable user web folder"''
fi
USERNAME=\${folder##*/}
echo "<tr><td>\$USERNAME</td><td>

<button class=\"info infocenter\" name=\"_Status_\" value=\"_USERNAME_\$USERNAME"_"GROUP_$GROUP"_"ACTION_\$FOLDERACTION"_"\">
<img src=\"\$STATUSICON\" alt=\"$"Status"\">
<span>\$MESSAGE<br><br>\$USERNAME</span>
</button>
</td></tr>"
done
ENDOFTEST
			echo '</tbody></table>'
		fi
	fi
else
	ssh -o PasswordAuthentication=no -o ConnectTimeout=3 "$SERVER" '
	if [ -d '"$HOMEPATH"' ]
	then
		if [ $(ls -1 '"$HOMEPATH"' | wc -l) -gt 0 ]
		then
			folders=( $(find -L "'"$HOMEPATH"'" -mindepth 1 -maxdepth 1 -type d | sort) )

			echo "<table id=\"myTable\" class=\"tablesorter\" style=\"text-align: left;\" ><thead>
			<tr><th style=\"width: '"$WIDTH4"'px;\"><b>'$"Username"'</b></th><th style=\"width: '"$WIDTH3"'px;\"><b>'$"Status"'</b></th></tr></thead><tbody>"
sudo -u www-data /bin/bash << ENDOFTEST
for folder in ${folders[@]}; do
FOLDERACTION=enable
STATUSICON='"$ICON2"'
MESSAGE="'$"Enable user web folder"'"
if [[ -r \$folder/public_html ]]; then
STATUSICON='"$ICON1"'
FOLDERACTION=disable
MESSAGE="'$"Disable user web folder"'"
fi
USERNAME=\${folder##*/}
echo "<tr><td>\$USERNAME</td><td>
<button class=\"info infocenter\" name=\"_Status_\" value=\"_USERNAME_\$USERNAME"_"GROUP_'"$GROUP"'"_"ACTION_\$FOLDERACTION"_"\">
<img src=\"\$STATUSICON\" alt=\"$"Status"\">
<span>\$MESSAGE<br><br>\$USERNAME</span>
</button></td></tr>"
done
ENDOFTEST
			echo "</tbody></table>"
			fi
		fi
	fi
	'
fi

exit

