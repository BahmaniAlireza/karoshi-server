#!/bin/bash
#Copyright (C) 2015 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ -z "$LOG_DATE" ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/view_logs_cgi
then
	echo `date`: view_logs - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/view_logs_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/view_logs.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $view_logs_cgi'check' ]
then
	echo `date`: view_logs - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ "$numArgs" != 0 ]
then
	echo `date`: view_logs - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+%-/-'`
if [ -z "$DATA" ]
then
	echo `date`: view_logs - no data >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
MOBILE=`echo "$DATA" | cut -s -d: -f4`
SERVERNAME=`echo "$DATA" | cut -s -d: -f5`
ACTION=`echo "$DATA" | cut -s -d: -f6`
LOGFILE=`echo "$DATA" | cut -s -d: -f7 | sed 's/%3A/:/g'`
TAIL_LENGTH=`echo "$DATA" | cut -s -d: -f8`
[ -z "$ACTION" ] && ACTION=viewlist
########################
#Check data
########################
if [ "$REMOTE_MD5"'check' != "$MD5SUM"'check' ]
then
	echo `date`: view_logs - Not called by view_logs.cgi >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: view_logs - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: view_logs - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi
if [ -z "$SERVERNAME" ]
then
	echo `date`: view_logs - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
	echo `date`: view_logs - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	exit 101
fi

if [ -z "$LOGFILE" ]
then
	LOGFILE=/var/log/syslog
fi

if [ -z "$TAIL_LENGTH" ]
then
	TAIL_LENGTH=200
fi

WIDTH1=180
TABLECLASS=standard
ICON1=/images/submenus/system/edit.png
ICON2=/images/submenus/system/delete.png
if [ $MOBILE = yes ]
then
	TABLECLASS=mobilestandard
	WIDTH1=120
	ICON1=/images/submenus/system/editm.png
	ICON2=/images/submenus/system/deletem.png
fi

function show_options {
#Show options
echo '<form action="/cgi-bin/admin/view_logs.cgi" method="post"><table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="2" cellspacing="2"><tbody>
<tr><td><input name="_ACTION_viewservers_" type="submit" class="button" value="'$"View Servers"'"></td>'
if [ "$ACTION" != viewlist ]
then
	echo '<td><input name="_ACTION_viewlist_SERVERTYPE_'$SERVERTYPE'_SERVERMASTER_'$SERVERMASTER'_SERVERNAME_'$SERVERNAME'_LOGFILE_'$LOGFILE'_" type="submit" class="button" value="'$"View Event Logs"'"></td>'
fi
if [ "$ACTION" = viewevent ]
then
	echo '<td><input name="_ACTION_delete_SERVERTYPE_'$SERVERTYPE'_SERVERMASTER_'$SERVERMASTER'_SERVERNAME_'$SERVERNAME'_LOGFILE_'$LOGFILE'_" type="submit" class="button" value="'$"Delete"'"></td>'
fi
echo '</tr></tbody></table>
</form>'
}

if [ "$ACTION" = delete ]
then
	echo `date`: view_logs - deleting "$LOGFILE" on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"

	if [ "$SERVERNAME" = `hostname-fqdn` ]
	then
		if [ -f /opt/karoshi/logs/errors/"$LOGFILE" ]
		then
			rm -f /opt/karoshi/logs/errors/"$LOGFILE"
		fi
	else
		ssh -x -o PasswordAuthentication=no "$SERVERNAME" '
		if [ -f /opt/karoshi/logs/errors/"'$LOGFILE'" ]
		then
			rm -f /opt/karoshi/logs/errors/"'$LOGFILE'"
		fi
		'
	fi
	ACTION=viewlist
fi

if [ "$ACTION" = viewevent ]
then
	echo `date`: view_logs - viewing "$LOGFILE" on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/"$LOG_DATE"
	show_options
	if [ "$SERVERNAME" = `hostname-fqdn` ]
	then
		if [ -f /opt/karoshi/logs/errors/"$LOGFILE" ]
		then
			echo "<pre style=\"font-size: 10pt; font-family:Arial, Times, Georgia, serif\">"
			cat /opt/karoshi/logs/errors/$LOGFILE | tr -cd "A-Za-z0-9\. _[]():/\n=-" | sed "s/kernel/<span STYLE=\"font-weight: bold; color: red\">kernel<\/span>/g" | sed "s/nslcd/<span STYLE=\"font-weight: bold; color: red\">nslcd<\/span>/g"
			echo "</pre>"
		fi
	else
		ssh -x -o PasswordAuthentication=no "$SERVERNAME" '
		if [ -f /opt/karoshi/logs/errors/"'$LOGFILE'" ]
		then
			echo "<pre style=\"font-size: 10pt; font-family:Arial, Times, Georgia, serif\">"
			cat /opt/karoshi/logs/errors/'$LOGFILE' | tr -cd "A-Za-z0-9\. _[]():/\n=-" | sed "s/kernel/<span STYLE=\"font-weight: bold; color: red\">kernel<\/span>/g" | sed "s/nslcd/<span STYLE=\"font-weight: bold; color: red\">nslcd<\/span>/g"
			echo "</pre>"
		fi
		'
	fi
	show_options
fi

if [ "$ACTION" = viewlist ]
then
	#Delete warning message
	/opt/karoshi/serversetup/web_controls/scripts/web_management_warn delete syslog-$SERVERNAME

	show_options
	#Get a list of event logs for the server
	if [ "$SERVERNAME" = `hostname-fqdn` ]
	then
		LOGCOUNT=$(ls -1 /opt/karoshi/logs/errors | wc -l)
	else
		LOGCOUNT=`ssh -x -o PasswordAuthentication=no "$SERVERNAME" '
		ls -1 /opt/karoshi/logs/errors | wc -l
		'`
	fi

	#Show a list of logs
	if [ "$LOGCOUNT" -gt 0 ]
	then
		echo '<form action="/cgi-bin/admin/view_logs.cgi" method="post"><table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="2" cellspacing="2">
	    <tbody><tr><td style="width: '$WIDTH1'px;"><b>'$"Date"'</b></td><td><b>'$"Time"'</b></td><td><b>'$"View Log"'</b></td><td><b>'$"Delete"'</b></td></tr>'
		if [ "$SERVERNAME" = `hostname-fqdn` ]
		then
			for EVENT in $(ls -1 /opt/karoshi/logs/errors)
			do
				#Get time and date of the event
				DAY=$(echo $EVENT | cut -d"-" -f3)
				MONTH=$(echo $EVENT | cut -d"-" -f2)
				YEAR=$(echo $EVENT | cut -d"-" -f1)
				TIME=$(echo $EVENT | cut -d"-" -f4)

				echo '<tr><td>'$DAY-$MONTH-$YEAR'</td><td>'$TIME'</td>
				<td><a class="info" href="javascript:void(0)"><input name="_ACTION_viewevent_SERVERNAME_'$SERVERNAME'_LOGFILE_'$EVENT'_" type="image" class="images" src="'$ICON1'" value=""><span>'$"View"'<br>'$EVENT'</span></a></td><td><a class="info" href="javascript:void(0)"><input name="_ACTION_delete_SERVERNAME_'$SERVERNAME'_LOGFILE_'$EVENT'_" type="image" class="images" src="'$ICON2'" value=""><span>'$"Delete"'<br>'$EVENT'</span></a></td></tr></form>'
			done
		else
			ssh -x -o PasswordAuthentication=no "$SERVERNAME" '
			for EVENT in $(ls -1 /opt/karoshi/logs/errors)
			do
				#Get time and date of the event
				DAY=$(echo $EVENT | cut -d"-" -f3)
				MONTH=$(echo $EVENT | cut -d"-" -f2)
				YEAR=$(echo $EVENT | cut -d"-" -f1)
				TIME=$(echo $EVENT | cut -d"-" -f4)

				echo "<tr><td>$DAY-$MONTH-$YEAR</td><td>$TIME</td>
				<td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"_ACTION_viewevent_SERVERNAME_'$SERVERNAME'_LOGFILE_$EVENT"_"\" type=\"image\" class=\"images\" src=\"'$ICON1'\" value=\"\"><span>'$"View"'<br>$EVENT</span></a></td><td><a class=\"info\" href=\"javascript:void(0)\"><input name=\"_ACTION_delete_SERVERNAME_'$SERVERNAME'_LOGFILE_$EVENT"_"\" type=\"image\" class=\"images\" src=\"'$ICON2'\" value=\"\"><span>'$"Delete"'<br>$EVENT</span></a></td></tr></form>"
			done
			'
		fi
	else
		echo $"No event logs"
	fi
fi

exit

