#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/wake_on_lan_add_cgi
then
	echo `date`: wake_on_lan_add - No Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/wake_on_lan_add_cgi
Checksum=`sha256sum /var/www/cgi-bin_karoshi/admin/wake_on_lan_add.cgi | cut -d' ' -f1`
[ -z "$Checksum" ] && Checksum=not_set
if [ $Checksum'check' != $wake_on_lan_add_cgi'check' ]
then
	echo `date`: wake_on_lan_add - Incorrect Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo `date`: wake_on_lan_add - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
RemoteCheckSum=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
HOUR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f4`
MINUTES=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f5`
LOCATION=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f6`
########################
#Check data
########################
if [ $RemoteCheckSum'check' != $Checksum'check' ]
then
	echo `date`: wake_on_lan_add - Not called by wake_on_lan_add.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: wake_on_lan_add - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: wake_on_lan_add - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$HOUR" ]
then
	echo `date`: wake_on_lan_add - Blank hour by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$MINUTES" ]
then
	echo `date`: wake_on_lan_add - Blank minutes by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi
if [ -z "$LOCATION" ]
then
	echo `date`: wake_on_lan_add - Blank location by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
	echo `date`: wake_on_lan_add - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
#######################
#Schedule wake on lan
#######################
[ -d /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs ] || mkdir -p /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs
[ -d /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/wake_on_lan ] || mkdir /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/wake_on_lan
echo `date`: "wake_on_lan_add - Scheduling $LOCATION for $HOUR:$MINUTES by $REMOTE_USER from $REMOTE_ADDR" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

echo $MINUTES $HOUR '*' '*' 1-5 /opt/karoshi/'"'useful scripts'"'/wol $LOCATION: > /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/wake_on_lan/$LOCATION.cron
cat /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/wake_on_lan/* > /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/jobs/wake_on_lan.cron
#######################
#Refresh cronjobs
#######################
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs 1>/dev/null 2>/dev/null
exit
