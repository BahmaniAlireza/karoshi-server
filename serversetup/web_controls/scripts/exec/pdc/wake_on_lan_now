#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jsharrad@karoshi.org.uk

#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/wake_on_lan_now_cgi
then
	echo `date`: wake_on_lan_now - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/wake_on_lan_now_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/wake_on_lan_now.cgi | cut -d' ' -f1`
[ -z "$MD5SUM" ] && MD5SUM=not_set
if [ $MD5SUM'check' != $wake_on_lan_now_cgi'check' ]
then
	echo `date`: wake_on_lan_now - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
	echo `date`: wake_on_lan_now - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
REMOTE_USER=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f2`
REMOTE_MD5=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f3`
LOCATION=`echo $* | tr -cd 'A-Za-z0-9\._:\-' | cut -s -d: -f4`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
	echo `date`: wake_on_lan_now - Not called by wake_on_lan_now.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_USER" ]
then
	echo `date`: wake_on_lan_now - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
	echo `date`: wake_on_lan_now - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi
if [ -z "$LOCATION" ]
then
	echo `date`: wake_on_lan_now - Blank location by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
	echo `date`: wake_on_lan_now - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
	exit 101
fi

#Check that location is enabled
if [ -f /opt/karoshi/server_network/cronjobs/`hostname-fqdn`/wake_on_lan_status/$LOCATION ]
then
	exit 102
fi
#######################
#wake on lan
#######################
echo `date`: wake_on_lan_now - waking up $LOCATION by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

if [ -d /opt/karoshi/asset_register/locations/"$LOCATION" ]
then
	if [ `ls -1 /opt/karoshi/asset_register/locations/"$LOCATION" | wc -l` -gt 0 ]
	then
		for ASSETS in /opt/karoshi/asset_register/locations/"$LOCATION"/*
		do
			ASSET=`basename $ASSETS`
			MAC1=""
			MAC2=""
			MAC3=""
			source /opt/karoshi/asset_register/locations/"$LOCATION"/$ASSET
			if [ ! -z "$MAC1" ] && [ $MAC1 != N.A. ]
			then
				echo $"Waking" "$MAC1""<br>"
				wakeonlan "$MAC1" 1>/dev/null
				sleep 1.5
			fi
			if [ ! -z "$MAC2" ] && [ $MAC2 != N.A. ]
			then
				echo $"Waking" "$MAC2""<br>"
				wakeonlan "$MAC2" 1>/dev/null
				sleep 1.5
			fi
			if [ ! -z "$MAC3" ] && [ $MAC3 != N.A. ]
			then
				echo $"Waking" "$MAC3""<br>"
				wakeonlan "$MAC3" 1>/dev/null
				sleep 1.5
			fi
		done
	fi
fi
exit
