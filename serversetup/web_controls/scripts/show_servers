#!/bin/bash

MOBILE=`echo $1 | tr -cd a-z`
VIEW=`echo $2 | tr -cd a-z`
ACTIONMSG=`echo $3 | tr -cd "A-Za-z\n-/"`
ACTION=`echo $4 | tr -cd "A-Za-z"`
CUSTOM=`echo $5 | tr -cd "A-Za-z"`
SEPARATOR=`echo $6 | tr -cd "_"`

############################
#Language
############################
LANGCHOICE=englishuk
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/system/show_servers ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/system/show_servers

#Check data

function usage {
echo -e "show_servers usage\n\nshow_servers mobile(yes/no) view(all/internal/pdc/servers/adc)" 
exit
}

[ -z $MOBILE ] && usage
[ -z $VIEW ] && usage
[ -z $CUSTOM ] && CUSTOM=no
[ -z $ACTION ] && ACTION=notset
[ -z $SEPARATOR ] && SEPARATOR=_

if [ $MOBILE != yes ] && [ $MOBILE != no ]
then
usage
fi

if [ $VIEW != all ] && [ $VIEW != internal ] && [ $VIEW != pdc ] && [ $VIEW != servers ] && [ $VIEW != adc ]
then
usage
fi

if [ $MOBILE = no ]
then
WIDTH1=200
WIDTH2=200
WIDTH3=80
WIDTH4=120
HEIGHT1=50
SERVERICON="/images/submenus/system/computer.png"
SERVERICON2="/images/submenus/system/all_computers.png"
TABLECLASS=standard
else
WIDTH1=120
WIDTH2=140
WIDTH3=50
WIDTH4=100
HEIGHT1=30
SERVERICON="/images/submenus/system/computerm.png"
SERVERICON2="/images/submenus/system/all_computersm.png"
TABLECLASS=mobilestandard
fi

function tabletop {
echo '<table class="'$TABLECLASS'" style="text-align: left;" border="0" cellpadding="2" cellspacing="2"><tbody>
<tr><td style="vertical-align: top; width: 10px;"></td><td style="vertical-align: top; width: '$WIDTH1'px;"><b>'$SERVERMSG'</b></td>'

[ $MOBILE = no ] && echo '<td style="vertical-align: top; width: '$WIDTH2'px;"><b>'$ROLESMSG'</b></td>'

if [ $CUSTOM = updateserver ]
then
echo '<td style="vertical-align: top; text-align: left; width: '$WIDTH4'px;"><b>'$UPGRADEMSG'</b></td>'
fi

echo '<td style="vertical-align: top; text-align: right; width: '$WIDTH3'px;"></td></tr>'
}

function tablebottom {
echo '</tbody></table>'
}


function show_server {
if [ $MOBILE = yes ]
then
SERVERNAME=`echo $SERVER | cut -d. -f1`
else
SERVERNAME=$SERVER
fi
echo '<tr><td style="background-color:'$FILLCOLOUR'; height: '$HEIGHT1'px;"></td><td style="vertical-align: top;">'$SERVERNAME'</td>'

if [ $MOBILE = no ]
then
echo '<td style="vertical-align: top;">'
[ -d $INFOPATH/$SERVER ] && cat $INFOPATH/$SERVER/*
echo '</td>'
fi

if [ $CUSTOM = updateserver ]
then
echo '<td style="vertical-align: top; text-align: left;">'
if [ -f /opt/karoshi/server_network/upgrade_schedules/servers/$SERVER ]
then
cat /opt/karoshi/server_network/upgrade_schedules/servers/$SERVER
else
echo -
fi
echo '</td>'
fi

echo '<td style="vertical-align: top; text-align: right;">
<input name="'$SEPARATOR'SERVERNAME'$SEPARATOR''$SERVER''$SEPARATOR'SERVERTYPE'$SEPARATOR''$SERVERTYPE''$SEPARATOR'SERVERMASTER'$SEPARATOR''$SERVERMASTER''$SEPARATOR'ACTION'$SEPARATOR''$ACTION''$SEPARATOR'" type="submit" class="button" value="'$ACTIONMSG'">
</td></tr>'
}

function show_all_option {
FILLCOLOUR=yellow
SERVERTYPE=network
INFOPATH=/opt/karoshi/server_network/servers
SERVER=allservers
show_server
}

function show_internal_servers {
FILLCOLOUR=green
INFOPATH=/opt/karoshi/server_network/servers
SERVERTYPE=network
SERVERMASTER=notset
for SERVERS in /opt/karoshi/server_network/zones/internal/servers/*
do
SERVER=`basename $SERVERS`
[ $SERVER != `hostname-fqdn` ] && show_server
done
}


function show_dmz_servers {
FILLCOLOUR=orange
INFOPATH=/opt/karoshi/server_network/servers
SERVERTYPE=network
SERVERMASTER=notset
if [ -d /opt/karoshi/server_network/zones/dmz/servers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/zones/dmz/servers/ | wc -l` -gt 0 ]
then
for SERVERS in /opt/karoshi/server_network/zones/dmz/servers/*
do
SERVER=`basename $SERVERS`
[ $SERVER != `hostname-fqdn` ] && show_server
done
fi
fi
}

function show_pdc {
FILLCOLOUR=green
INFOPATH=/opt/karoshi/server_network/servers
SERVERTYPE=network
SERVERMASTER=notset
SERVER=`hostname-fqdn`
show_server
}

function show_adc_servers {
FILLCOLOUR=green
INFOPATH=/opt/karoshi/server_network/servers
SERVERTYPE=network
SERVERMASTER=notset
if [ -d /opt/karoshi/server_network/zones/internal/additional_domain_controllers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/zones/internal/additional_domain_controllers/ | wc -l` -gt 0 ]
then
for SERVERS in /opt/karoshi/server_network/zones/internal/additional_domain_controllers/*
do
SERVER=`basename $SERVERS`
[ $SERVER != `hostname-fqdn` ] && show_server
done
fi
fi
}

function show_dmz_adc_servers {
FILLCOLOUR=orange
INFOPATH=/opt/karoshi/server_network/servers
SERVERTYPE=network
SERVERMASTER=notset
if [ -d /opt/karoshi/server_network/zones/dmz/additional_domain_controllers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/zones/dmz/additional_domain_controllers/ | wc -l` -gt 0 ]
then
for SERVERS in /opt/karoshi/server_network/zones/dmz/additional_domain_controllers/*
do
SERVER=`basename $SERVERS`
[ $SERVER != `hostname-fqdn` ] && show_server
done
fi
fi
}


#Start table
tabletop

#Show pdc
show_pdc

#Show adc servers
if [ $VIEW = adc ]
then
show_adc_servers
show_dmz_adc_servers
fi


#Show internal servers
if [ $VIEW = all ] || [ $VIEW = internal ] || [ $VIEW = servers ]
then
show_internal_servers
show_dmz_servers
fi

#Show all option
if [ $VIEW = all ]
then
show_all_option
fi

#End table
tablebottom

#Show federated servers

exit


